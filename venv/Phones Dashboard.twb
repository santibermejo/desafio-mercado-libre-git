<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0621.1547                               -->
<workbook original-version='18.1' source-build='2019.2.1 (20192.19.0621.1547)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='PhonesDashboard' path='/workbooks' revision='1.2' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='users-data' inline='true' name='federated.03mke2x1vquwse109aqu519k9402' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='users-data' name='semistructpassivestore-direct.0i2vl6e10rbk6q136sg961ngd8ct'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/Santi/Desktop/desafio-mercado-libre-git/venv' filename='users-data.json' password='' server='' workgroup-auth-mode='as-is'>
              <semistruct-schemas>
                <semistruct-schema table='[users-data.json]'>
                  <map key='address' value='true' />
                  <map key='seller_reputation' value='true' />
                  <map key='seller_reputation.transactions' value='true' />
                  <map key='seller_reputation.transactions.ratings' value='true' />
                  <map key='status' value='true' />
                  <map key='tags' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.0i2vl6e10rbk6q136sg961ngd8ct' name='users-data.json' table='[users-data.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[users-data.json].[Document Index (generated)]' />
          <map key='[canceled]' value='[users-data.json].[seller_reputation.transactions.canceled]' />
          <map key='[city]' value='[users-data.json].[address.city]' />
          <map key='[completed]' value='[users-data.json].[seller_reputation.transactions.completed]' />
          <map key='[country_id]' value='[users-data.json].[country_id]' />
          <map key='[id]' value='[users-data.json].[id]' />
          <map key='[item]' value='[users-data.json].[item]' />
          <map key='[level_id]' value='[users-data.json].[seller_reputation.level_id]' />
          <map key='[negative]' value='[users-data.json].[seller_reputation.transactions.ratings.negative]' />
          <map key='[neutral]' value='[users-data.json].[seller_reputation.transactions.ratings.neutral]' />
          <map key='[nickname]' value='[users-data.json].[nickname]' />
          <map key='[period]' value='[users-data.json].[seller_reputation.transactions.period]' />
          <map key='[permalink]' value='[users-data.json].[permalink]' />
          <map key='[points]' value='[users-data.json].[points]' />
          <map key='[positive]' value='[users-data.json].[seller_reputation.transactions.ratings.positive]' />
          <map key='[power_seller_status]' value='[users-data.json].[seller_reputation.power_seller_status]' />
          <map key='[registration_date]' value='[users-data.json].[registration_date]' />
          <map key='[site_id]' value='[users-data.json].[site_id]' />
          <map key='[site_status]' value='[users-data.json].[status.site_status]' />
          <map key='[state]' value='[users-data.json].[address.state]' />
          <map key='[tags Index (generated)]' value='[users-data.json].[tags.Index (generated)]' />
          <map key='[tags]' value='[users-data.json].[tags.Value]' />
          <map key='[total]' value='[users-data.json].[seller_reputation.transactions.total]' />
          <map key='[user_type]' value='[users-data.json].[user_type]' />
        </cols>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address.city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>address.city</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address.state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>address.state</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country_id]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>country_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>5</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>id</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>item</remote-name>
            <remote-type>130</remote-type>
            <local-name>[item]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>item</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nickname</remote-name>
            <remote-type>130</remote-type>
            <local-name>[nickname]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>nickname</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>permalink</remote-name>
            <remote-type>130</remote-type>
            <local-name>[permalink]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>permalink</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>points</remote-name>
            <remote-type>5</remote-type>
            <local-name>[points]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>points</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>registration_date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[registration_date]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>registration_date</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_reputation.level_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[level_id]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>seller_reputation.level_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_reputation.power_seller_status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[power_seller_status]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>seller_reputation.power_seller_status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_reputation.transactions.canceled</remote-name>
            <remote-type>5</remote-type>
            <local-name>[canceled]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>seller_reputation.transactions.canceled</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_reputation.transactions.completed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[completed]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>seller_reputation.transactions.completed</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_reputation.transactions.period</remote-name>
            <remote-type>130</remote-type>
            <local-name>[period]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>seller_reputation.transactions.period</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_reputation.transactions.ratings.negative</remote-name>
            <remote-type>5</remote-type>
            <local-name>[negative]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>seller_reputation.transactions.ratings.negative</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_reputation.transactions.ratings.neutral</remote-name>
            <remote-type>5</remote-type>
            <local-name>[neutral]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>seller_reputation.transactions.ratings.neutral</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_reputation.transactions.ratings.positive</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>seller_reputation.transactions.ratings.positive</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_reputation.transactions.total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>seller_reputation.transactions.total</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>site_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[site_id]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>site_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>status.site_status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[site_status]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>status.site_status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tags.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tags Index (generated)]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>tags.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tags.Value</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tags]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>tags.Value</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>user_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[user_type]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>user_type</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Index' datatype='integer' name='[Calculation_149744699647197188]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='% Canceled' datatype='real' name='[Calculation_2721018610750398481]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Canceled per transactions]/([Canceled per transactions]+[Completed per transactions])' />
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Canceled per transactions]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([canceled]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at transactions level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Completed per transactions]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([completed]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at transactions level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Negative per ratings]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([negative]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at ratings level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Neutral per ratings]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([neutral]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at ratings level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per tags]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([tags Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at tags level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per users-data.json]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Document Index (generated)])' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at users-data.json level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Points per Document]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([points]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at Document level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Positive per ratings]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([positive]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at ratings level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Total per transactions]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([total]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at transactions level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Canceled' datatype='real' name='[canceled]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>seller_reputation.transactions.canceled</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>address.city</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Completed' datatype='real' name='[completed]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>seller_reputation.transactions.completed</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Country Id' datatype='string' name='[country_id]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <desc>
          <formatted-text>
            <run>country_id</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' caption='Id' datatype='real' name='[id]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>item</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Level Id' datatype='string' name='[level_id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller_reputation.level_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Negative' datatype='real' name='[negative]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>seller_reputation.transactions.ratings.negative</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Neutral' datatype='real' name='[neutral]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>seller_reputation.transactions.ratings.neutral</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Nickname' datatype='string' name='[nickname]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>nickname</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Period' datatype='string' name='[period]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller_reputation.transactions.period</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Permalink' datatype='string' name='[permalink]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>permalink</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Points' datatype='real' name='[points]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>points</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Positive' datatype='real' name='[positive]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>seller_reputation.transactions.ratings.positive</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Power Seller Status' datatype='string' name='[power_seller_status]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller_reputation.power_seller_status</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Registration Date' datatype='string' name='[registration_date]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>registration_date</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Site Id' datatype='string' name='[site_id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>site_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Site Status' datatype='string' name='[site_status]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>status.site_status</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>address.state</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[tags Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>tags.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Tags' datatype='string' name='[tags]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>tags.Value</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Total' datatype='real' name='[total]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>seller_reputation.transactions.total</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='User Type' datatype='string' name='[user_type]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>user_type</run>
          </formatted-text>
        </desc>
      </column>
      <column-instance column='[Calculation_2721018610750398481]' derivation='Avg' name='[avg:Calculation_2721018610750398481:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2721018610750398481]' derivation='Max' name='[max:Calculation_2721018610750398481:qk]' pivot='key' type='quantitative' />
      <column-instance column='[item]' derivation='None' name='[none:item:nk]' pivot='key' type='nominal' />
      <column-instance column='[nickname]' derivation='None' name='[none:nickname:nk]' pivot='key' type='nominal' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <folder name='Address' role='dimensions'>
        <folder-item name='[city]' type='field' />
        <folder-item name='[state]' type='field' />
      </folder>
      <folder name='Seller Reputation' role='dimensions'>
        <folder-item name='[level_id]' type='field' />
        <folder-item name='[power_seller_status]' type='field' />
      </folder>
      <folder name='Status' role='dimensions'>
        <folder-item name='[site_status]' type='field' />
      </folder>
      <folder name='Transactions' role='dimensions'>
        <folder-item name='[period]' type='field' />
      </folder>
      <folder name='Users-Data' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[country_id]' type='field' />
        <folder-item name='[id]' type='field' />
        <folder-item name='[item]' type='field' />
        <folder-item name='[nickname]' type='field' />
        <folder-item name='[permalink]' type='field' />
        <folder-item name='[registration_date]' type='field' />
        <folder-item name='[site_id]' type='field' />
        <folder-item name='[tags Index (generated)]' type='field' />
        <folder-item name='[tags]' type='field' />
        <folder-item name='[user_type]' type='field' />
      </folder>
      <folder name='Source Measures' role='measures'>
        <folder-item name='[canceled]' type='field' />
        <folder-item name='[completed]' type='field' />
        <folder-item name='[negative]' type='field' />
        <folder-item name='[neutral]' type='field' />
        <folder-item name='[points]' type='field' />
        <folder-item name='[positive]' type='field' />
        <folder-item name='[total]' type='field' />
      </folder>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Santi/Documents/My Tableau Repository/Datasources/users-data.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='07/15/2019 08:02:49 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Document Index (generated)]' value='[Extract].[Document Index (generated)]' />
            <map key='[canceled]' value='[Extract].[seller_reputation.transactions.canceled]' />
            <map key='[city]' value='[Extract].[address.city]' />
            <map key='[completed]' value='[Extract].[seller_reputation.transactions.completed]' />
            <map key='[country_id]' value='[Extract].[country_id]' />
            <map key='[id]' value='[Extract].[id]' />
            <map key='[item]' value='[Extract].[item]' />
            <map key='[level_id]' value='[Extract].[seller_reputation.level_id]' />
            <map key='[negative]' value='[Extract].[seller_reputation.transactions.ratings.negative]' />
            <map key='[neutral]' value='[Extract].[seller_reputation.transactions.ratings.neutral]' />
            <map key='[nickname]' value='[Extract].[nickname]' />
            <map key='[period]' value='[Extract].[seller_reputation.transactions.period]' />
            <map key='[permalink]' value='[Extract].[permalink]' />
            <map key='[points]' value='[Extract].[points]' />
            <map key='[positive]' value='[Extract].[seller_reputation.transactions.ratings.positive]' />
            <map key='[power_seller_status]' value='[Extract].[seller_reputation.power_seller_status]' />
            <map key='[registration_date]' value='[Extract].[registration_date]' />
            <map key='[site_id]' value='[Extract].[site_id]' />
            <map key='[site_status]' value='[Extract].[status.site_status]' />
            <map key='[state]' value='[Extract].[address.state]' />
            <map key='[tags Index (generated)]' value='[Extract].[tags.Index (generated)]' />
            <map key='[tags]' value='[Extract].[tags.Value]' />
            <map key='[total]' value='[Extract].[seller_reputation.transactions.total]' />
            <map key='[user_type]' value='[Extract].[user_type]' />
          </cols>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='users-data' increment-value='%null%' refresh-type='create' rows-inserted='1158' timestamp-start='2019-07-15 20:02:49.188' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Document Index (generated)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Document Index (generated)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Document Index (generated)</remote-alias>
              <ordinal>0</ordinal>
              <family>users-data.json</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>447</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>address.city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>address.city</remote-alias>
              <ordinal>1</ordinal>
              <family>users-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>99</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>address.state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>address.state</remote-alias>
              <ordinal>2</ordinal>
              <family>users-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country_id</remote-alias>
              <ordinal>3</ordinal>
              <family>users-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>id</remote-name>
              <remote-type>5</remote-type>
              <local-name>[id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>id</remote-alias>
              <ordinal>4</ordinal>
              <family>users-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>169</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>item</remote-name>
              <remote-type>129</remote-type>
              <local-name>[item]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>item</remote-alias>
              <ordinal>5</ordinal>
              <family>users-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>nickname</remote-name>
              <remote-type>129</remote-type>
              <local-name>[nickname]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>nickname</remote-alias>
              <ordinal>6</ordinal>
              <family>users-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>169</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>permalink</remote-name>
              <remote-type>129</remote-type>
              <local-name>[permalink]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>permalink</remote-alias>
              <ordinal>7</ordinal>
              <family>users-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>169</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>points</remote-name>
              <remote-type>5</remote-type>
              <local-name>[points]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>points</remote-alias>
              <ordinal>8</ordinal>
              <family>users-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>147</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>registration_date</remote-name>
              <remote-type>129</remote-type>
              <local-name>[registration_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>registration_date</remote-alias>
              <ordinal>9</ordinal>
              <family>users-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>169</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seller_reputation.level_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[level_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>seller_reputation.level_id</remote-alias>
              <ordinal>10</ordinal>
              <family>users-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seller_reputation.power_seller_status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[power_seller_status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>seller_reputation.power_seller_status</remote-alias>
              <ordinal>11</ordinal>
              <family>users-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seller_reputation.transactions.canceled</remote-name>
              <remote-type>5</remote-type>
              <local-name>[canceled]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>seller_reputation.transactions.canceled</remote-alias>
              <ordinal>12</ordinal>
              <family>users-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>84</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seller_reputation.transactions.completed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[completed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>seller_reputation.transactions.completed</remote-alias>
              <ordinal>13</ordinal>
              <family>users-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>135</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seller_reputation.transactions.period</remote-name>
              <remote-type>129</remote-type>
              <local-name>[period]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>seller_reputation.transactions.period</remote-alias>
              <ordinal>14</ordinal>
              <family>users-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seller_reputation.transactions.ratings.negative</remote-name>
              <remote-type>5</remote-type>
              <local-name>[negative]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>seller_reputation.transactions.ratings.negative</remote-alias>
              <ordinal>15</ordinal>
              <family>users-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seller_reputation.transactions.ratings.neutral</remote-name>
              <remote-type>5</remote-type>
              <local-name>[neutral]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>seller_reputation.transactions.ratings.neutral</remote-alias>
              <ordinal>16</ordinal>
              <family>users-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seller_reputation.transactions.ratings.positive</remote-name>
              <remote-type>5</remote-type>
              <local-name>[positive]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>seller_reputation.transactions.ratings.positive</remote-alias>
              <ordinal>17</ordinal>
              <family>users-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seller_reputation.transactions.total</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>seller_reputation.transactions.total</remote-alias>
              <ordinal>18</ordinal>
              <family>users-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>site_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[site_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>site_id</remote-alias>
              <ordinal>19</ordinal>
              <family>users-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>status.site_status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[site_status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>status.site_status</remote-alias>
              <ordinal>20</ordinal>
              <family>users-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tags.Index (generated)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[tags Index (generated)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tags.Index (generated)</remote-alias>
              <ordinal>21</ordinal>
              <family>users-data.json</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tags.Value</remote-name>
              <remote-type>129</remote-type>
              <local-name>[tags]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tags.Value</remote-alias>
              <ordinal>22</ordinal>
              <family>users-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>user_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[user_type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>user_type</remote-alias>
              <ordinal>23</ordinal>
              <family>users-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.545582' measure-ordering='alphabetic' measure-percentage='0.454418' show-structure='false' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[avg:Calculation_2721018610750398481:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[max:Calculation_2721018610750398481:qk]&quot;</bucket>
            </map>
            <map to='#5fbb68'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[avg:Positive Rating:qk]&quot;</bucket>
            </map>
            <map to='#5fbb68'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[sum:Positive Rating:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[usr:Calculation_2721018610733031429:ok:10]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[usr:Calculation_2721018610733031429:ok:2]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[usr:Calculation_2721018610733031429:ok:8]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[usr:Calculation_2721018610733031429:ok:9]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[sum:Transactions Canceled:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[sum:Transactions Completed:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[sum:F1:qk]&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[avg:Negative Rating:qk]&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[diff:avg:Negative Rating:qk:1]&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[diff:avg:Negative Rating:qk:2]&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[diff:avg:Negative Rating:qk:3]&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[diff:avg:Negative Rating:qk:4]&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[diff:avg:Negative Rating:qk]&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[sum:Negative Rating:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[avg:Neutral Rating:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[sum:Neutral Rating:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[sum:count:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:nickname:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ELCAPODENEXTEL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ZELUCASH ARG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AUDIO_PHONES&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LEFR182263&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;EVE CORONEL&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;ELPIBEDELOESTE2014&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ELECTROCELULARES&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CHIPMANIA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TETE4826771&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;SOIS1153976&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;INVADER13&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AUDIO.ARTE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MULTIMARCARECOLETA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GASTOJAVIERIGNACIOMOLINA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;COMPRATECHAR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TOMA7365759&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;FIORELLASGRO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GAMESTATION ARG&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GEORGETE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JCELULARES ARGENTINA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CAPUTOCRISTIANARIEL&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;FERVALOTTA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CUEVASRODRIGO03&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;VIPRACING&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BLACKBULLAR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NEXTELSOLDHERE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GABRIELMB2011&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;SMARPHONEMANIA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BAZA 10&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:item:nk]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;Samsung s8&quot;</bucket>
            </map>
            <map to='#45a2b9'>
              <bucket>&quot;Moto X Style&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;Iphone 7&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Argentina&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='phones-specs' inline='true' name='federated.0dy50zt01yfsqx1dyokur07pbr8b' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='phones-specs' name='semistructpassivestore-direct.1wygmif054onj217z95f81hejx9r'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/Santi/Desktop/desafio-mercado-libre-git/venv' filename='phones-specs.json' password='' server='' workgroup-auth-mode='as-is'>
              <semistruct-schemas>
                <semistruct-schema table='[phones-specs.json]'>
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.1wygmif054onj217z95f81hejx9r' name='phones-specs.json' table='[phones-specs.json]' type='table' />
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[phones-specs.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Battery</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Battery]</local-name>
            <parent-name>[phones-specs.json]</parent-name>
            <remote-alias>Battery</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Camera</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Camera]</local-name>
            <parent-name>[phones-specs.json]</parent-name>
            <remote-alias>Camera</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Display</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Display]</local-name>
            <parent-name>[phones-specs.json]</parent-name>
            <remote-alias>Display</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Memory</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Memory]</local-name>
            <parent-name>[phones-specs.json]</parent-name>
            <remote-alias>Memory</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[phones-specs.json]</parent-name>
            <remote-alias>Name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Processor</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Processor]</local-name>
            <parent-name>[phones-specs.json]</parent-name>
            <remote-alias>Processor</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Storage</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Storage]</local-name>
            <parent-name>[phones-specs.json]</parent-name>
            <remote-alias>Storage</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Batería' datatype='string' name='[Battery]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>Battery</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Camara' datatype='string' name='[Camera]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>Camera</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Pantalla' datatype='string' name='[Display]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>Display</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='string' hidden='true' name='[Memory]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>Memory</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Nombre' datatype='string' name='[Name]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>Name</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Procesador' datatype='string' name='[Processor]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>Processor</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Almacenamiento' datatype='string' name='[Storage]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>Storage</run>
          </formatted-text>
        </desc>
      </column>
      <folder name='Phones-Specs' role='dimensions'>
        <folder-item name='[Battery]' type='field' />
        <folder-item name='[Camera]' type='field' />
        <folder-item name='[Display]' type='field' />
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[Memory]' type='field' />
        <folder-item name='[Name]' type='field' />
        <folder-item name='[Processor]' type='field' />
        <folder-item name='[Storage]' type='field' />
      </folder>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Santi/Documents/My Tableau Repository/Datasources/phones-specs.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='07/15/2019 08:02:31 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='phones-specs' increment-value='%null%' refresh-type='create' rows-inserted='3' timestamp-start='2019-07-15 20:02:31.406' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Document Index (generated)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Document Index (generated)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Document Index (generated)</remote-alias>
              <ordinal>0</ordinal>
              <family>phones-specs.json</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Battery</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Battery]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Battery</remote-alias>
              <ordinal>1</ordinal>
              <family>phones-specs.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Camera</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Camera]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Camera</remote-alias>
              <ordinal>2</ordinal>
              <family>phones-specs.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Display</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Display]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Display</remote-alias>
              <ordinal>3</ordinal>
              <family>phones-specs.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Name</remote-alias>
              <ordinal>4</ordinal>
              <family>phones-specs.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Processor</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Processor]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Processor</remote-alias>
              <ordinal>5</ordinal>
              <family>phones-specs.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Storage</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Storage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Storage</remote-alias>
              <ordinal>6</ordinal>
              <family>phones-specs.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.653576' measure-ordering='alphabetic' measure-percentage='0.346424' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Argentina&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='phones-data' inline='true' name='federated.1puq9ha0ngu50s10qovtk1ribbtf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='phones-data' name='semistructpassivestore-direct.19qzx751l23jgb1eax4j313hm90f'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/Santi/Desktop/desafio-mercado-libre-git/venv' filename='phones-data.json' password='' server='' workgroup-auth-mode='as-is'>
              <semistruct-schemas>
                <semistruct-schema table='[phones-data.json]'>
                  <map key='address' value='true' />
                  <map key='attributes' value='true' />
                  <map key='attributes.Value' value='true' />
                  <map key='differential_pricing' value='true' />
                  <map key='installments' value='true' />
                  <map key='seller' value='true' />
                  <map key='seller.tags' value='true' />
                  <map key='seller_address' value='true' />
                  <map key='seller_address.city' value='true' />
                  <map key='seller_address.country' value='true' />
                  <map key='seller_address.state' value='true' />
                  <map key='shipping' value='true' />
                  <map key='shipping.tags' value='true' />
                  <map key='tags' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.19qzx751l23jgb1eax4j313hm90f' name='phones-data.json' table='[phones-data.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[phones-data.json].[Document Index (generated)]' />
          <map key='[accepts_mercadopago]' value='[phones-data.json].[accepts_mercadopago]' />
          <map key='[address_line]' value='[phones-data.json].[seller_address.address_line]' />
          <map key='[amount]' value='[phones-data.json].[installments.amount]' />
          <map key='[attribute_group_id]' value='[phones-data.json].[attributes.Value.attribute_group_id]' />
          <map key='[attribute_group_name]' value='[phones-data.json].[attributes.Value.attribute_group_name]' />
          <map key='[attributes Index (generated)]' value='[phones-data.json].[attributes.Index (generated)]' />
          <map key='[available_quantity]' value='[phones-data.json].[available_quantity]' />
          <map key='[buying_mode]' value='[phones-data.json].[buying_mode]' />
          <map key='[car_dealer]' value='[phones-data.json].[seller.car_dealer]' />
          <map key='[catalog_product_id]' value='[phones-data.json].[catalog_product_id]' />
          <map key='[category_id]' value='[phones-data.json].[category_id]' />
          <map key='[city_id]' value='[phones-data.json].[address.city_id]' />
          <map key='[city_name]' value='[phones-data.json].[address.city_name]' />
          <map key='[comment]' value='[phones-data.json].[seller_address.comment]' />
          <map key='[condition]' value='[phones-data.json].[condition]' />
          <map key='[currency_id (installments)]' value='[phones-data.json].[installments.currency_id]' />
          <map key='[currency_id]' value='[phones-data.json].[currency_id]' />
          <map key='[free_shipping]' value='[phones-data.json].[shipping.free_shipping]' />
          <map key='[id (attributes)]' value='[phones-data.json].[attributes.Value.id]' />
          <map key='[id (differential_pricing)]' value='[phones-data.json].[differential_pricing.id]' />
          <map key='[id (seller)]' value='[phones-data.json].[seller.id]' />
          <map key='[id (seller_address)]' value='[phones-data.json].[seller_address.id]' />
          <map key='[id (seller_address.city)]' value='[phones-data.json].[seller_address.city.id]' />
          <map key='[id (seller_address.country)]' value='[phones-data.json].[seller_address.country.id]' />
          <map key='[id (seller_address.state)]' value='[phones-data.json].[seller_address.state.id]' />
          <map key='[id]' value='[phones-data.json].[id]' />
          <map key='[item_name]' value='[phones-data.json].[item_name]' />
          <map key='[latitude]' value='[phones-data.json].[seller_address.latitude]' />
          <map key='[listing_type_id]' value='[phones-data.json].[listing_type_id]' />
          <map key='[logistic_type]' value='[phones-data.json].[shipping.logistic_type]' />
          <map key='[longitude]' value='[phones-data.json].[seller_address.longitude]' />
          <map key='[mode]' value='[phones-data.json].[shipping.mode]' />
          <map key='[name (attributes)]' value='[phones-data.json].[attributes.Value.name]' />
          <map key='[name (seller_address.city)]' value='[phones-data.json].[seller_address.city.name]' />
          <map key='[name (seller_address.country)]' value='[phones-data.json].[seller_address.country.name]' />
          <map key='[name (seller_address.state)]' value='[phones-data.json].[seller_address.state.name]' />
          <map key='[official_store_id]' value='[phones-data.json].[official_store_id]' />
          <map key='[permalink]' value='[phones-data.json].[permalink]' />
          <map key='[power_seller_status]' value='[phones-data.json].[seller.power_seller_status]' />
          <map key='[price]' value='[phones-data.json].[price]' />
          <map key='[quantity]' value='[phones-data.json].[installments.quantity]' />
          <map key='[rate]' value='[phones-data.json].[installments.rate]' />
          <map key='[real_estate_agency]' value='[phones-data.json].[seller.real_estate_agency]' />
          <map key='[site_id]' value='[phones-data.json].[site_id]' />
          <map key='[sold_quantity]' value='[phones-data.json].[sold_quantity]' />
          <map key='[source]' value='[phones-data.json].[attributes.Value.source]' />
          <map key='[state_id]' value='[phones-data.json].[address.state_id]' />
          <map key='[state_name]' value='[phones-data.json].[address.state_name]' />
          <map key='[stop_time]' value='[phones-data.json].[stop_time]' />
          <map key='[store_pick_up]' value='[phones-data.json].[shipping.store_pick_up]' />
          <map key='[tags (seller) Index (generated)]' value='[phones-data.json].[seller.tags.Index (generated)]' />
          <map key='[tags (seller.tags)]' value='[phones-data.json].[seller.tags.Value]' />
          <map key='[tags (shipping) Index (generated)]' value='[phones-data.json].[shipping.tags.Index (generated)]' />
          <map key='[tags (shipping.tags)]' value='[phones-data.json].[shipping.tags.Value]' />
          <map key='[tags (tags)]' value='[phones-data.json].[tags.Value]' />
          <map key='[tags Index (generated)]' value='[phones-data.json].[tags.Index (generated)]' />
          <map key='[thumbnail]' value='[phones-data.json].[thumbnail]' />
          <map key='[title]' value='[phones-data.json].[title]' />
          <map key='[value_id]' value='[phones-data.json].[attributes.Value.value_id]' />
          <map key='[value_name]' value='[phones-data.json].[attributes.Value.value_name]' />
          <map key='[zip_code]' value='[phones-data.json].[seller_address.zip_code]' />
        </cols>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>accepts_mercadopago</remote-name>
            <remote-type>11</remote-type>
            <local-name>[accepts_mercadopago]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>accepts_mercadopago</remote-alias>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address.city_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city_id]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>address.city_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address.city_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city_name]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>address.city_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address.state_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state_id]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>address.state_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address.state_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state_name]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>address.state_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attributes.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[attributes Index (generated)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>attributes.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attributes.Value.attribute_group_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[attribute_group_id]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>attributes.Value.attribute_group_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attributes.Value.attribute_group_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[attribute_group_name]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>attributes.Value.attribute_group_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attributes.Value.id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[id (attributes)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>attributes.Value.id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attributes.Value.name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name (attributes)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>attributes.Value.name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attributes.Value.source</remote-name>
            <remote-type>5</remote-type>
            <local-name>[source]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>attributes.Value.source</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attributes.Value.value_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[value_id]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>attributes.Value.value_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attributes.Value.value_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[value_name]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>attributes.Value.value_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>available_quantity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[available_quantity]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>available_quantity</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>buying_mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[buying_mode]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>buying_mode</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>catalog_product_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[catalog_product_id]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>catalog_product_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[category_id]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>category_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>condition</remote-name>
            <remote-type>130</remote-type>
            <local-name>[condition]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>condition</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>currency_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[currency_id]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>currency_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>differential_pricing.id</remote-name>
            <remote-type>5</remote-type>
            <local-name>[id (differential_pricing)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>differential_pricing.id</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>installments.amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[amount]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>installments.amount</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>installments.currency_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[currency_id (installments)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>installments.currency_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>installments.quantity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[quantity]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>installments.quantity</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>installments.rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rate]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>installments.rate</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>item_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[item_name]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>item_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>listing_type_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[listing_type_id]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>listing_type_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>official_store_id</remote-name>
            <remote-type>5</remote-type>
            <local-name>[official_store_id]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>official_store_id</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>permalink</remote-name>
            <remote-type>130</remote-type>
            <local-name>[permalink]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>permalink</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>price</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller.car_dealer</remote-name>
            <remote-type>11</remote-type>
            <local-name>[car_dealer]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller.car_dealer</remote-alias>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller.id</remote-name>
            <remote-type>5</remote-type>
            <local-name>[id (seller)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller.id</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller.power_seller_status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[power_seller_status]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller.power_seller_status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller.real_estate_agency</remote-name>
            <remote-type>11</remote-type>
            <local-name>[real_estate_agency]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller.real_estate_agency</remote-alias>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller.tags.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tags (seller) Index (generated)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller.tags.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller.tags.Value</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tags (seller.tags)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller.tags.Value</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_address.address_line</remote-name>
            <remote-type>130</remote-type>
            <local-name>[address_line]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller_address.address_line</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_address.city.id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[id (seller_address.city)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller_address.city.id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_address.city.name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name (seller_address.city)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller_address.city.name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_address.comment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[comment]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller_address.comment</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_address.country.id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[id (seller_address.country)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller_address.country.id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_address.country.name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name (seller_address.country)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller_address.country.name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_address.id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[id (seller_address)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller_address.id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_address.latitude</remote-name>
            <remote-type>130</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller_address.latitude</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_address.longitude</remote-name>
            <remote-type>130</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller_address.longitude</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_address.state.id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[id (seller_address.state)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller_address.state.id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_address.state.name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name (seller_address.state)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller_address.state.name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_address.zip_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[zip_code]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller_address.zip_code</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>shipping.free_shipping</remote-name>
            <remote-type>11</remote-type>
            <local-name>[free_shipping]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>shipping.free_shipping</remote-alias>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>shipping.logistic_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[logistic_type]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>shipping.logistic_type</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>shipping.mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[mode]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>shipping.mode</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>shipping.store_pick_up</remote-name>
            <remote-type>11</remote-type>
            <local-name>[store_pick_up]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>shipping.store_pick_up</remote-alias>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>shipping.tags.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tags (shipping) Index (generated)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>shipping.tags.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>shipping.tags.Value</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tags (shipping.tags)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>shipping.tags.Value</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>site_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[site_id]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>site_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sold_quantity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sold_quantity]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>sold_quantity</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stop_time</remote-name>
            <remote-type>130</remote-type>
            <local-name>[stop_time]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>stop_time</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tags.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tags Index (generated)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>tags.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tags.Value</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tags (tags)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>tags.Value</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>thumbnail</remote-name>
            <remote-type>130</remote-type>
            <local-name>[thumbnail]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>thumbnail</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>title</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' is-auto-gen-lod-field='true' name='[Amount per installments]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([amount]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at installments level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Available Quantity per Document]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([available_quantity]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at Document level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Index' datatype='integer' name='[Calculation_2446580509762584576]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='random()' datatype='real' name='[Calculation_2721018610672181251]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='random()' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per attributes]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([attributes Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at attributes level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per phones-data.json]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Document Index (generated)])' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at phones-data.json level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per tags (seller)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([tags (seller) Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at tags (seller) level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per tags (shipping)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([tags (shipping) Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at tags (shipping) level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per tags]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([tags Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at tags level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Price per Document]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([price]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at Document level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Quantity per installments]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([quantity]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at installments level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Rate per installments]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([rate]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at installments level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Sold Quantity per Document]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([sold_quantity]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at Document level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Source per attributes]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Document Index (generated)],[attributes Index (generated)] : MAX([source]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at attributes level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Accepts Mercadopago' datatype='boolean' name='[accepts_mercadopago]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>accepts_mercadopago</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Address Line' datatype='string' name='[address_line]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller_address.address_line</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Amount' datatype='real' name='[amount]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>installments.amount</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Attribute Group Id' datatype='string' name='[attribute_group_id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>attributes.Value.attribute_group_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Attribute Group Name' datatype='string' name='[attribute_group_name]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>attributes.Value.attribute_group_name</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[attributes Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>attributes.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Available Quantity' datatype='real' name='[available_quantity]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>available_quantity</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Buying Mode' datatype='string' name='[buying_mode]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>buying_mode</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Car Dealer' datatype='boolean' name='[car_dealer]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller.car_dealer</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Catalog Product Id' datatype='string' name='[catalog_product_id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>catalog_product_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Category Id' datatype='string' name='[category_id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>category_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='City Id' datatype='string' name='[city_id]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>address.city_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='City Name' datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>address.city_name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Comment' datatype='string' name='[comment]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller_address.comment</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Condition' datatype='string' name='[condition]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>condition</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Currency Id (Installments)' datatype='string' name='[currency_id (installments)]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>installments.currency_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Currency Id' datatype='string' name='[currency_id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>currency_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Free Shipping' datatype='boolean' name='[free_shipping]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>shipping.free_shipping</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Id (Attributes)' datatype='string' name='[id (attributes)]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>attributes.Value.id</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' caption='Id (Differential Pricing)' datatype='real' name='[id (differential_pricing)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>differential_pricing.id</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' caption='Id (Seller)' datatype='real' name='[id (seller)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>seller.id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Id (Seller Address)' datatype='string' name='[id (seller_address)]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller_address.id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Id (Seller Address.City)' datatype='string' name='[id (seller_address.city)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller_address.city.id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Id (Seller Address.Country)' datatype='string' name='[id (seller_address.country)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller_address.country.id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Id (Seller Address.State)' datatype='string' name='[id (seller_address.state)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller_address.state.id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Item Name' datatype='string' name='[item_name]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>item_name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Latitude' datatype='string' name='[latitude]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller_address.latitude</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Listing Type Id' datatype='string' name='[listing_type_id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>listing_type_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Logistic Type' datatype='string' name='[logistic_type]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>shipping.logistic_type</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Longitude' datatype='string' name='[longitude]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller_address.longitude</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Mode' datatype='string' name='[mode]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>shipping.mode</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Name (Attributes)' datatype='string' name='[name (attributes)]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>attributes.Value.name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Name (Seller Address.City)' datatype='string' name='[name (seller_address.city)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller_address.city.name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Name (Seller Address.Country)' datatype='string' name='[name (seller_address.country)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller_address.country.name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Name (Seller Address.State)' datatype='string' name='[name (seller_address.state)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller_address.state.name</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' caption='Official Store Id' datatype='real' name='[official_store_id]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>official_store_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Permalink' datatype='string' name='[permalink]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>permalink</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Power Seller Status' datatype='string' name='[power_seller_status]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller.power_seller_status</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>price</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Quantity' datatype='real' name='[quantity]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>installments.quantity</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Rate' datatype='real' name='[rate]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>installments.rate</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Real Estate Agency' datatype='boolean' name='[real_estate_agency]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller.real_estate_agency</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Site Id' datatype='string' name='[site_id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>site_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Sold Quantity' datatype='real' name='[sold_quantity]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>sold_quantity</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Source' datatype='real' name='[source]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>attributes.Value.source</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='State Id' datatype='string' name='[state_id]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>address.state_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='State Name' datatype='string' name='[state_name]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>address.state_name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Stop Time' datatype='string' name='[stop_time]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>stop_time</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Store Pick Up' datatype='boolean' name='[store_pick_up]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>shipping.store_pick_up</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[tags (seller) Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>seller.tags.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Tags (Seller.Tags)' datatype='string' name='[tags (seller.tags)]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller.tags.Value</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[tags (shipping) Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>shipping.tags.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Tags (Shipping.Tags)' datatype='string' name='[tags (shipping.tags)]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>shipping.tags.Value</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Tags (Tags)' datatype='string' name='[tags (tags)]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>tags.Value</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[tags Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>tags.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Thumbnail' datatype='string' name='[thumbnail]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>thumbnail</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>title</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Value Id' datatype='string' name='[value_id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>attributes.Value.value_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Value Name' datatype='string' name='[value_name]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>attributes.Value.value_name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Zip Code' datatype='string' name='[zip_code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller_address.zip_code</run>
          </formatted-text>
        </desc>
      </column>
      <column-instance column='[item_name]' derivation='None' name='[none:item_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[name (seller_address.state)]' derivation='None' name='[none:name (seller_address.state):nk]' pivot='key' type='nominal' />
      <column-instance column='[state_name]' derivation='None' name='[none:state_name:nk]' pivot='key' type='nominal' />
      <folder name='Address' role='dimensions'>
        <folder-item name='[city_id]' type='field' />
        <folder-item name='[city_name]' type='field' />
        <folder-item name='[state_id]' type='field' />
        <folder-item name='[state_name]' type='field' />
      </folder>
      <folder name='Attributes' role='dimensions'>
        <folder-item name='[attribute_group_id]' type='field' />
        <folder-item name='[attribute_group_name]' type='field' />
        <folder-item name='[attributes Index (generated)]' type='field' />
        <folder-item name='[id (attributes)]' type='field' />
        <folder-item name='[name (attributes)]' type='field' />
        <folder-item name='[value_id]' type='field' />
        <folder-item name='[value_name]' type='field' />
      </folder>
      <folder name='City' role='dimensions'>
        <folder-item name='[id (seller_address.city)]' type='field' />
        <folder-item name='[name (seller_address.city)]' type='field' />
      </folder>
      <folder name='Country' role='dimensions'>
        <folder-item name='[id (seller_address.country)]' type='field' />
        <folder-item name='[name (seller_address.country)]' type='field' />
      </folder>
      <folder name='Differential Pricing' role='dimensions'>
        <folder-item name='[id (differential_pricing)]' type='field' />
      </folder>
      <folder name='Installments' role='dimensions'>
        <folder-item name='[currency_id (installments)]' type='field' />
      </folder>
      <folder name='Phones-Data' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[accepts_mercadopago]' type='field' />
        <folder-item name='[buying_mode]' type='field' />
        <folder-item name='[catalog_product_id]' type='field' />
        <folder-item name='[category_id]' type='field' />
        <folder-item name='[condition]' type='field' />
        <folder-item name='[currency_id]' type='field' />
        <folder-item name='[id]' type='field' />
        <folder-item name='[item_name]' type='field' />
        <folder-item name='[listing_type_id]' type='field' />
        <folder-item name='[official_store_id]' type='field' />
        <folder-item name='[permalink]' type='field' />
        <folder-item name='[site_id]' type='field' />
        <folder-item name='[stop_time]' type='field' />
        <folder-item name='[tags (tags)]' type='field' />
        <folder-item name='[tags Index (generated)]' type='field' />
        <folder-item name='[thumbnail]' type='field' />
        <folder-item name='[title]' type='field' />
      </folder>
      <folder name='Seller' role='dimensions'>
        <folder-item name='[car_dealer]' type='field' />
        <folder-item name='[id (seller)]' type='field' />
        <folder-item name='[power_seller_status]' type='field' />
        <folder-item name='[real_estate_agency]' type='field' />
        <folder-item name='[tags (seller) Index (generated)]' type='field' />
        <folder-item name='[tags (seller.tags)]' type='field' />
      </folder>
      <folder name='Seller Address' role='dimensions'>
        <folder-item name='[address_line]' type='field' />
        <folder-item name='[comment]' type='field' />
        <folder-item name='[id (seller_address)]' type='field' />
        <folder-item name='[latitude]' type='field' />
        <folder-item name='[longitude]' type='field' />
        <folder-item name='[zip_code]' type='field' />
      </folder>
      <folder name='Shipping' role='dimensions'>
        <folder-item name='[free_shipping]' type='field' />
        <folder-item name='[logistic_type]' type='field' />
        <folder-item name='[mode]' type='field' />
        <folder-item name='[store_pick_up]' type='field' />
        <folder-item name='[tags (shipping) Index (generated)]' type='field' />
        <folder-item name='[tags (shipping.tags)]' type='field' />
      </folder>
      <folder name='State' role='dimensions'>
        <folder-item name='[id (seller_address.state)]' type='field' />
        <folder-item name='[name (seller_address.state)]' type='field' />
      </folder>
      <folder name='Source Measures' role='measures'>
        <folder-item name='[amount]' type='field' />
        <folder-item name='[available_quantity]' type='field' />
        <folder-item name='[price]' type='field' />
        <folder-item name='[quantity]' type='field' />
        <folder-item name='[rate]' type='field' />
        <folder-item name='[sold_quantity]' type='field' />
        <folder-item name='[source]' type='field' />
      </folder>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Santi/Documents/My Tableau Repository/Datasources/phones-data.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='07/15/2019 08:02:11 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Document Index (generated)]' value='[Extract].[Document Index (generated)]' />
            <map key='[accepts_mercadopago]' value='[Extract].[accepts_mercadopago]' />
            <map key='[address_line]' value='[Extract].[seller_address.address_line]' />
            <map key='[amount]' value='[Extract].[installments.amount]' />
            <map key='[attribute_group_id]' value='[Extract].[attributes.Value.attribute_group_id]' />
            <map key='[attribute_group_name]' value='[Extract].[attributes.Value.attribute_group_name]' />
            <map key='[attributes Index (generated)]' value='[Extract].[attributes.Index (generated)]' />
            <map key='[available_quantity]' value='[Extract].[available_quantity]' />
            <map key='[buying_mode]' value='[Extract].[buying_mode]' />
            <map key='[car_dealer]' value='[Extract].[seller.car_dealer]' />
            <map key='[catalog_product_id]' value='[Extract].[catalog_product_id]' />
            <map key='[category_id]' value='[Extract].[category_id]' />
            <map key='[city_id]' value='[Extract].[address.city_id]' />
            <map key='[city_name]' value='[Extract].[address.city_name]' />
            <map key='[comment]' value='[Extract].[seller_address.comment]' />
            <map key='[condition]' value='[Extract].[condition]' />
            <map key='[currency_id (installments)]' value='[Extract].[installments.currency_id]' />
            <map key='[currency_id]' value='[Extract].[currency_id]' />
            <map key='[free_shipping]' value='[Extract].[shipping.free_shipping]' />
            <map key='[id (attributes)]' value='[Extract].[attributes.Value.id]' />
            <map key='[id (differential_pricing)]' value='[Extract].[differential_pricing.id]' />
            <map key='[id (seller)]' value='[Extract].[seller.id]' />
            <map key='[id (seller_address)]' value='[Extract].[seller_address.id]' />
            <map key='[id (seller_address.city)]' value='[Extract].[seller_address.city.id]' />
            <map key='[id (seller_address.country)]' value='[Extract].[seller_address.country.id]' />
            <map key='[id (seller_address.state)]' value='[Extract].[seller_address.state.id]' />
            <map key='[id]' value='[Extract].[id]' />
            <map key='[item_name]' value='[Extract].[item_name]' />
            <map key='[latitude]' value='[Extract].[seller_address.latitude]' />
            <map key='[listing_type_id]' value='[Extract].[listing_type_id]' />
            <map key='[logistic_type]' value='[Extract].[shipping.logistic_type]' />
            <map key='[longitude]' value='[Extract].[seller_address.longitude]' />
            <map key='[mode]' value='[Extract].[shipping.mode]' />
            <map key='[name (attributes)]' value='[Extract].[attributes.Value.name]' />
            <map key='[name (seller_address.city)]' value='[Extract].[seller_address.city.name]' />
            <map key='[name (seller_address.country)]' value='[Extract].[seller_address.country.name]' />
            <map key='[name (seller_address.state)]' value='[Extract].[seller_address.state.name]' />
            <map key='[official_store_id]' value='[Extract].[official_store_id]' />
            <map key='[permalink]' value='[Extract].[permalink]' />
            <map key='[power_seller_status]' value='[Extract].[seller.power_seller_status]' />
            <map key='[price]' value='[Extract].[price]' />
            <map key='[quantity]' value='[Extract].[installments.quantity]' />
            <map key='[rate]' value='[Extract].[installments.rate]' />
            <map key='[real_estate_agency]' value='[Extract].[seller.real_estate_agency]' />
            <map key='[site_id]' value='[Extract].[site_id]' />
            <map key='[sold_quantity]' value='[Extract].[sold_quantity]' />
            <map key='[source]' value='[Extract].[attributes.Value.source]' />
            <map key='[state_id]' value='[Extract].[address.state_id]' />
            <map key='[state_name]' value='[Extract].[address.state_name]' />
            <map key='[stop_time]' value='[Extract].[stop_time]' />
            <map key='[store_pick_up]' value='[Extract].[shipping.store_pick_up]' />
            <map key='[tags (seller) Index (generated)]' value='[Extract].[seller.tags.Index (generated)]' />
            <map key='[tags (seller.tags)]' value='[Extract].[seller.tags.Value]' />
            <map key='[tags (shipping) Index (generated)]' value='[Extract].[shipping.tags.Index (generated)]' />
            <map key='[tags (shipping.tags)]' value='[Extract].[shipping.tags.Value]' />
            <map key='[tags (tags)]' value='[Extract].[tags.Value]' />
            <map key='[tags Index (generated)]' value='[Extract].[tags.Index (generated)]' />
            <map key='[thumbnail]' value='[Extract].[thumbnail]' />
            <map key='[title]' value='[Extract].[title]' />
            <map key='[value_id]' value='[Extract].[attributes.Value.value_id]' />
            <map key='[value_name]' value='[Extract].[attributes.Value.value_name]' />
            <map key='[zip_code]' value='[Extract].[seller_address.zip_code]' />
          </cols>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='phones-data' increment-value='%null%' refresh-type='create' rows-inserted='11184' timestamp-start='2019-07-15 20:02:11.510' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Document Index (generated)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Document Index (generated)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Document Index (generated)</remote-alias>
              <ordinal>0</ordinal>
              <family>phones-data.json</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>729</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>accepts_mercadopago</remote-name>
              <remote-type>11</remote-type>
              <local-name>[accepts_mercadopago]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>accepts_mercadopago</remote-alias>
              <ordinal>1</ordinal>
              <family>phones-data.json</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>address.city_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>address.city_id</remote-alias>
              <ordinal>2</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>address.city_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>address.city_name</remote-alias>
              <ordinal>3</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>159</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>address.state_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>address.state_id</remote-alias>
              <ordinal>4</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>address.state_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>address.state_name</remote-alias>
              <ordinal>5</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.Index (generated)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[attributes Index (generated)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.Index (generated)</remote-alias>
              <ordinal>6</ordinal>
              <family>phones-data.json</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.Value.attribute_group_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attribute_group_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.Value.attribute_group_id</remote-alias>
              <ordinal>7</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.Value.attribute_group_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attribute_group_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.Value.attribute_group_name</remote-alias>
              <ordinal>8</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.Value.id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[id (attributes)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.Value.id</remote-alias>
              <ordinal>9</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.Value.name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[name (attributes)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.Value.name</remote-alias>
              <ordinal>10</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.Value.source</remote-name>
              <remote-type>5</remote-type>
              <local-name>[source]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.Value.source</remote-alias>
              <ordinal>11</ordinal>
              <family>phones-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.Value.value_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[value_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.Value.value_id</remote-alias>
              <ordinal>12</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>43</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.Value.value_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[value_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.Value.value_name</remote-alias>
              <ordinal>13</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>73</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>available_quantity</remote-name>
              <remote-type>5</remote-type>
              <local-name>[available_quantity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>available_quantity</remote-alias>
              <ordinal>14</ordinal>
              <family>phones-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>buying_mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[buying_mode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>buying_mode</remote-alias>
              <ordinal>15</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>catalog_product_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[catalog_product_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>catalog_product_id</remote-alias>
              <ordinal>16</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>category_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[category_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>category_id</remote-alias>
              <ordinal>17</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>condition</remote-name>
              <remote-type>129</remote-type>
              <local-name>[condition]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>condition</remote-alias>
              <ordinal>18</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>currency_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[currency_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>currency_id</remote-alias>
              <ordinal>19</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>differential_pricing.id</remote-name>
              <remote-type>5</remote-type>
              <local-name>[id (differential_pricing)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>differential_pricing.id</remote-alias>
              <ordinal>20</ordinal>
              <family>phones-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>id</remote-alias>
              <ordinal>21</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>729</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>installments.amount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[amount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>installments.amount</remote-alias>
              <ordinal>22</ordinal>
              <family>phones-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>369</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>installments.currency_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[currency_id (installments)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>installments.currency_id</remote-alias>
              <ordinal>23</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>installments.quantity</remote-name>
              <remote-type>5</remote-type>
              <local-name>[quantity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>installments.quantity</remote-alias>
              <ordinal>24</ordinal>
              <family>phones-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>installments.rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>installments.rate</remote-alias>
              <ordinal>25</ordinal>
              <family>phones-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>item_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[item_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>item_name</remote-alias>
              <ordinal>26</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>listing_type_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[listing_type_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>listing_type_id</remote-alias>
              <ordinal>27</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>official_store_id</remote-name>
              <remote-type>5</remote-type>
              <local-name>[official_store_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>official_store_id</remote-alias>
              <ordinal>28</ordinal>
              <family>phones-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>permalink</remote-name>
              <remote-type>129</remote-type>
              <local-name>[permalink]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>permalink</remote-alias>
              <ordinal>29</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>729</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>price</remote-name>
              <remote-type>5</remote-type>
              <local-name>[price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>price</remote-alias>
              <ordinal>30</ordinal>
              <family>phones-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>346</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seller.car_dealer</remote-name>
              <remote-type>11</remote-type>
              <local-name>[car_dealer]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>seller.car_dealer</remote-alias>
              <ordinal>31</ordinal>
              <family>phones-data.json</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seller.id</remote-name>
              <remote-type>5</remote-type>
              <local-name>[id (seller)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>seller.id</remote-alias>
              <ordinal>32</ordinal>
              <family>phones-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>277</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seller.power_seller_status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[power_seller_status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>seller.power_seller_status</remote-alias>
              <ordinal>33</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seller.real_estate_agency</remote-name>
              <remote-type>11</remote-type>
              <local-name>[real_estate_agency]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>seller.real_estate_agency</remote-alias>
              <ordinal>34</ordinal>
              <family>phones-data.json</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seller.tags.Index (generated)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[tags (seller) Index (generated)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>seller.tags.Index (generated)</remote-alias>
              <ordinal>35</ordinal>
              <family>phones-data.json</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seller.tags.Value</remote-name>
              <remote-type>129</remote-type>
              <local-name>[tags (seller.tags)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>seller.tags.Value</remote-alias>
              <ordinal>36</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seller_address.address_line</remote-name>
              <remote-type>129</remote-type>
              <local-name>[address_line]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>seller_address.address_line</remote-alias>
              <ordinal>37</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seller_address.city.id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[id (seller_address.city)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>seller_address.city.id</remote-alias>
              <ordinal>38</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seller_address.city.name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[name (seller_address.city)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>seller_address.city.name</remote-alias>
              <ordinal>39</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>159</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seller_address.comment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[comment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>seller_address.comment</remote-alias>
              <ordinal>40</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seller_address.country.id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[id (seller_address.country)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>seller_address.country.id</remote-alias>
              <ordinal>41</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seller_address.country.name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[name (seller_address.country)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>seller_address.country.name</remote-alias>
              <ordinal>42</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seller_address.id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[id (seller_address)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>seller_address.id</remote-alias>
              <ordinal>43</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seller_address.latitude</remote-name>
              <remote-type>129</remote-type>
              <local-name>[latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>seller_address.latitude</remote-alias>
              <ordinal>44</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seller_address.longitude</remote-name>
              <remote-type>129</remote-type>
              <local-name>[longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>seller_address.longitude</remote-alias>
              <ordinal>45</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seller_address.state.id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[id (seller_address.state)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>seller_address.state.id</remote-alias>
              <ordinal>46</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seller_address.state.name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[name (seller_address.state)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>seller_address.state.name</remote-alias>
              <ordinal>47</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seller_address.zip_code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[zip_code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>seller_address.zip_code</remote-alias>
              <ordinal>48</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>shipping.free_shipping</remote-name>
              <remote-type>11</remote-type>
              <local-name>[free_shipping]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>shipping.free_shipping</remote-alias>
              <ordinal>49</ordinal>
              <family>phones-data.json</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>shipping.logistic_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[logistic_type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>shipping.logistic_type</remote-alias>
              <ordinal>50</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>shipping.mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[mode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>shipping.mode</remote-alias>
              <ordinal>51</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>shipping.store_pick_up</remote-name>
              <remote-type>11</remote-type>
              <local-name>[store_pick_up]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>shipping.store_pick_up</remote-alias>
              <ordinal>52</ordinal>
              <family>phones-data.json</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>shipping.tags.Index (generated)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[tags (shipping) Index (generated)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>shipping.tags.Index (generated)</remote-alias>
              <ordinal>53</ordinal>
              <family>phones-data.json</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>shipping.tags.Value</remote-name>
              <remote-type>129</remote-type>
              <local-name>[tags (shipping.tags)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>shipping.tags.Value</remote-alias>
              <ordinal>54</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>site_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[site_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>site_id</remote-alias>
              <ordinal>55</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sold_quantity</remote-name>
              <remote-type>5</remote-type>
              <local-name>[sold_quantity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sold_quantity</remote-alias>
              <ordinal>56</ordinal>
              <family>phones-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>stop_time</remote-name>
              <remote-type>129</remote-type>
              <local-name>[stop_time]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>stop_time</remote-alias>
              <ordinal>57</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>551</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tags.Index (generated)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[tags Index (generated)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tags.Index (generated)</remote-alias>
              <ordinal>58</ordinal>
              <family>phones-data.json</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tags.Value</remote-name>
              <remote-type>129</remote-type>
              <local-name>[tags (tags)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tags.Value</remote-alias>
              <ordinal>59</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>thumbnail</remote-name>
              <remote-type>129</remote-type>
              <local-name>[thumbnail]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>thumbnail</remote-alias>
              <ordinal>60</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>589</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[title]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>title</remote-alias>
              <ordinal>61</ordinal>
              <family>phones-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>705</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.523142' measure-ordering='alphabetic' measure-percentage='0.476858' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:state_name:nk]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#2f6891'>
              <bucket>&quot;Misiones&quot;</bucket>
            </map>
            <map to='#33789d'>
              <bucket>&quot;La Rioja&quot;</bucket>
            </map>
            <map to='#3586a7'>
              <bucket>&quot;Capital Federal&quot;</bucket>
            </map>
            <map to='#3589a9'>
              <bucket>&quot;La Pampa&quot;</bucket>
            </map>
            <map to='#3e99b4'>
              <bucket>&quot;Entre Ríos&quot;</bucket>
            </map>
            <map to='#53a9bd'>
              <bucket>&quot;Corrientes&quot;</bucket>
            </map>
            <map to='#6eb8c5'>
              <bucket>&quot;Córdoba&quot;</bucket>
            </map>
            <map to='#87c6cc'>
              <bucket>&quot;Chaco&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;Buenos Aires&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:name (seller_address.state):nk]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#2f6891'>
              <bucket>&quot;Misiones&quot;</bucket>
            </map>
            <map to='#33789d'>
              <bucket>&quot;La Rioja&quot;</bucket>
            </map>
            <map to='#3586a7'>
              <bucket>&quot;Capital Federal&quot;</bucket>
            </map>
            <map to='#3589a9'>
              <bucket>&quot;La Pampa&quot;</bucket>
            </map>
            <map to='#3e99b4'>
              <bucket>&quot;Entre Ríos&quot;</bucket>
            </map>
            <map to='#53a9bd'>
              <bucket>&quot;Corrientes&quot;</bucket>
            </map>
            <map to='#6eb8c5'>
              <bucket>&quot;Córdoba&quot;</bucket>
            </map>
            <map to='#87c6cc'>
              <bucket>&quot;Chaco&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;Buenos Aires&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:item_name:nk]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;Samsung s8&quot;</bucket>
            </map>
            <map to='#3586a7'>
              <bucket>&quot;Moto X Style&quot;</bucket>
            </map>
            <map to='#72bac6'>
              <bucket>&quot;Iphone 7&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Argentina&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Boxplot de Precios por Celular'>
      <table>
        <view>
          <datasources>
            <datasource caption='phones-data' name='federated.1puq9ha0ngu50s10qovtk1ribbtf' />
          </datasources>
          <datasource-dependencies datasource='federated.1puq9ha0ngu50s10qovtk1ribbtf'>
            <column caption='random()' datatype='real' name='[Calculation_2721018610672181251]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='random()' />
            </column>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Condition' datatype='string' name='[condition]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>condition</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Item Name' datatype='string' name='[item_name]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>item_name</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[condition]' derivation='None' name='[none:condition:nk]' pivot='key' type='nominal' />
            <column-instance column='[item_name]' derivation='None' name='[none:item_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>price</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_2721018610672181251]' derivation='Sum' name='[sum:Calculation_2721018610672181251:qk]' pivot='key' type='quantitative' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>title</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:condition:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:condition:nk]' member='&quot;new&quot;' />
              <groupfilter function='member' level='[none:condition:nk]' member='&quot;used&quot;' />
            </groupfilter>
          </filter>
          <natural-sort column='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:condition:nk]' direction='DESC' />
          <manual-sort column='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:item_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Moto X Style&quot;</bucket>
              <bucket>&quot;Samsung s8&quot;</bucket>
              <bucket>&quot;Iphone 7&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:condition:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[avg:price:qk]' scope='rows' value='Precio' />
            <encoding attr='space' class='0' field='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[sum:Calculation_2721018610672181251:qk]' field-type='quantitative' range-type='independent' scope='cols' type='space' />
            <format attr='display' class='0' field='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[sum:Calculation_2721018610672181251:qk]' scope='cols' value='false' />
            <format attr='display' class='0' field='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[avg:price:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[avg:price:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='0' />
            <format attr='band-size' scope='rows' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:item_name:nk]' />
              <lod column='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:title:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[avg:price:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[avg:price:qk]' z-order='1' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Item Name:&#9;</run>
                <run bold='true'>&lt;[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:item_name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Title:&#9;</run>
                <run bold='true'>&lt;[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:title:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'> Price:&#9;</run>
                <run bold='true'>&lt;[federated.1puq9ha0ngu50s10qovtk1ribbtf].[avg:price:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
                <format attr='mark-transparency' value='190' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='266' />
                <format attr='maxwidth' value='266' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='706' />
                <format attr='maxheight' value='706' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[avg:price:qk]</rows>
        <cols>(([federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:item_name:nk] / [federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:condition:nk]) * [federated.1puq9ha0ngu50s10qovtk1ribbtf].[sum:Calculation_2721018610672181251:qk])</cols>
      </table>
      <simple-id uuid='{E36A0781-4907-4B43-84F7-DF73F98E63F2}' />
    </worksheet>
    <worksheet name='Cantidad de Ventas por Usuario por Celular'>
      <table>
        <view>
          <datasources>
            <datasource caption='users-data' name='federated.03mke2x1vquwse109aqu519k9402' />
          </datasources>
          <datasource-dependencies datasource='federated.03mke2x1vquwse109aqu519k9402'>
            <column caption='Index' datatype='integer' name='[Calculation_149744699647197188]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Id' datatype='real' name='[id]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>id</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>item</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Nickname' datatype='string' name='[nickname]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>nickname</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[item]' derivation='None' name='[none:item:nk]' pivot='key' type='nominal' />
            <column-instance column='[nickname]' derivation='None' name='[none:nickname:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_149744699647197188]' derivation='User' name='[usr:Calculation_149744699647197188:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[federated.03mke2x1vquwse109aqu519k9402].[none:item:nk]' />
                <order field='[federated.03mke2x1vquwse109aqu519k9402].[none:nickname:nk]' />
                <sort direction='DESC' using='[federated.03mke2x1vquwse109aqu519k9402].[cnt:id:qk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.03mke2x1vquwse109aqu519k9402].[usr:Calculation_149744699647197188:qk:1]' included-values='in-range'>
            <min>1</min>
            <max>12</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.03mke2x1vquwse109aqu519k9402].[none:nickname:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.03mke2x1vquwse109aqu519k9402].[cnt:id:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.03mke2x1vquwse109aqu519k9402].[usr:Calculation_149744699647197188:qk:1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.03mke2x1vquwse109aqu519k9402].[cnt:id:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.03mke2x1vquwse109aqu519k9402].[none:nickname:nk]' value='264' />
            <format attr='width' field='[federated.03mke2x1vquwse109aqu519k9402].[none:item:nk]' value='140' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.03mke2x1vquwse109aqu519k9402].[none:item:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Item:&#9;</run>
                <run bold='true'>&lt;[federated.03mke2x1vquwse109aqu519k9402].[none:item:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Nickname:&#9;</run>
                <run bold='true'>&lt;[federated.03mke2x1vquwse109aqu519k9402].[none:nickname:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Ventas:&#9;</run>
                <run bold='true'>&lt;[federated.03mke2x1vquwse109aqu519k9402].[cnt:id:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>([federated.03mke2x1vquwse109aqu519k9402].[none:item:nk] / [federated.03mke2x1vquwse109aqu519k9402].[none:nickname:nk])</rows>
        <cols>[federated.03mke2x1vquwse109aqu519k9402].[cnt:id:qk]</cols>
      </table>
      <simple-id uuid='{3C88B74C-7F9B-4409-92ED-9224B419749A}' />
    </worksheet>
    <worksheet name='Distribución Geográfica de Ventas'>
      <table>
        <view>
          <datasources>
            <datasource caption='phones-data' name='federated.1puq9ha0ngu50s10qovtk1ribbtf' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1puq9ha0ngu50s10qovtk1ribbtf'>
            <column-instance column='[id]' derivation='CountD' name='[ctd:id:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>id</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Name (Seller Address.State)' datatype='string' name='[name (seller_address.state)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <desc>
                <formatted-text>
                  <run>seller_address.state.name</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[name (seller_address.state)]' derivation='None' name='[none:name (seller_address.state):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:name (seller_address.state):nk]' />
              <size column='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[ctd:id:qk]' />
              <lod column='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:name (seller_address.state):nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Provincia:&#9;</run>
                <run bold='true'>&lt;[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:name (seller_address.state):nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Ventas:&#9;</run>
                <run bold='true'>&lt;[federated.1puq9ha0ngu50s10qovtk1ribbtf].[ctd:id:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='6.9928369522094727' />
                <format attr='mark-transparency' value='208' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[Latitude (generated)]</rows>
        <cols>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F4D179A7-9EB1-4003-994D-DB0E61E15E23}' />
    </worksheet>
    <worksheet name='Specs'>
      <table>
        <view>
          <datasources>
            <datasource caption='phones-specs' name='federated.0dy50zt01yfsqx1dyokur07pbr8b' />
          </datasources>
          <datasource-dependencies datasource='federated.0dy50zt01yfsqx1dyokur07pbr8b'>
            <column caption='Batería' datatype='string' name='[Battery]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Battery</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Camara' datatype='string' name='[Camera]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Camera</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Pantalla' datatype='string' name='[Display]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Display</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Nombre' datatype='string' name='[Name]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Name</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Procesador' datatype='string' name='[Processor]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Processor</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Almacenamiento' datatype='string' name='[Storage]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Storage</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Battery]' derivation='None' name='[none:Battery:nk]' pivot='key' type='nominal' />
            <column-instance column='[Camera]' derivation='None' name='[none:Camera:nk]' pivot='key' type='nominal' />
            <column-instance column='[Display]' derivation='None' name='[none:Display:nk]' pivot='key' type='nominal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Processor]' derivation='None' name='[none:Processor:nk]' pivot='key' type='nominal' />
            <column-instance column='[Storage]' derivation='None' name='[none:Storage:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='5' />
            <format attr='height' field='[federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Storage:nk]' value='117' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Battery:nk]' value='320' />
            <format attr='width' field='[federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Name:nk]' value='188' />
            <format attr='width' field='[federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Camera:nk]' value='244' />
            <format attr='width' field='[federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Display:nk]' value='280' />
            <format attr='width' field='[federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Storage:nk]' value='544' />
            <format attr='width' field='[federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Processor:nk]' value='556' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Camera:nk]' value='on' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Name:nk] / ([federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Battery:nk] / ([federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Camera:nk] / ([federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Display:nk] / ([federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Processor:nk] / [federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Storage:nk])))))</rows>
        <cols />
      </table>
      <simple-id uuid='{0E758C08-B032-4308-99C6-E57F99F5DEF3}' />
    </worksheet>
    <worksheet name='Users Negativos por Cantidad de Ventas'>
      <table>
        <view>
          <datasources>
            <datasource caption='users-data' name='federated.03mke2x1vquwse109aqu519k9402' />
          </datasources>
          <datasource-dependencies datasource='federated.03mke2x1vquwse109aqu519k9402'>
            <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>Document Index (generated)</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' is-auto-gen-lod-field='true' name='[Negative per ratings]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([negative]) }' />
              <desc>
                <formatted-text>
                  <run>A calculated measure that is at ratings level of detail</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Negative per ratings]' derivation='Avg' name='[avg:Negative per ratings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nickname]' derivation='Count' name='[cnt:nickname:qk]' pivot='key' type='quantitative' />
            <column caption='Negative' datatype='real' name='[negative]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>seller_reputation.transactions.ratings.negative</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Nickname' datatype='string' name='[nickname]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>nickname</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[nickname]' derivation='None' name='[none:nickname:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.03mke2x1vquwse109aqu519k9402].[avg:Negative per ratings:qk]' />
              <size column='[federated.03mke2x1vquwse109aqu519k9402].[cnt:nickname:qk]' />
              <text column='[federated.03mke2x1vquwse109aqu519k9402].[none:nickname:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Nickname:&#9;</run>
                <run bold='true'>&lt;[federated.03mke2x1vquwse109aqu519k9402].[none:nickname:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Rating Negativo:&#9;</run>
                <run bold='true'>&lt;[federated.03mke2x1vquwse109aqu519k9402].[avg:Negative per ratings:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Ventas:&#9;</run>
                <run bold='true'>&lt;[federated.03mke2x1vquwse109aqu519k9402].[cnt:nickname:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4E73CDA8-E4B9-4BBE-B8E8-5D8CC0C4CC1D}' />
    </worksheet>
    <worksheet name='Ventas Canceladas por Cantidad de Ventas Totales'>
      <table>
        <view>
          <datasources>
            <datasource caption='users-data' name='federated.03mke2x1vquwse109aqu519k9402' />
          </datasources>
          <datasource-dependencies datasource='federated.03mke2x1vquwse109aqu519k9402'>
            <column caption='% Canceled' datatype='real' name='[Calculation_2721018610750398481]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Canceled per transactions]/([Canceled per transactions]+[Completed per transactions])' />
            </column>
            <column datatype='real' is-auto-gen-lod-field='true' name='[Canceled per transactions]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([canceled]) }' />
              <desc>
                <formatted-text>
                  <run>A calculated measure that is at transactions level of detail</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' is-auto-gen-lod-field='true' name='[Completed per transactions]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([completed]) }' />
              <desc>
                <formatted-text>
                  <run>A calculated measure that is at transactions level of detail</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>Document Index (generated)</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_2721018610750398481]' derivation='Avg' name='[avg:Calculation_2721018610750398481:qk]' pivot='key' type='quantitative' />
            <column caption='Canceled' datatype='real' name='[canceled]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>seller_reputation.transactions.canceled</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[nickname]' derivation='Count' name='[cnt:nickname:qk]' pivot='key' type='quantitative' />
            <column caption='Completed' datatype='real' name='[completed]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>seller_reputation.transactions.completed</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Nickname' datatype='string' name='[nickname]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>nickname</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[nickname]' derivation='None' name='[none:nickname:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.03mke2x1vquwse109aqu519k9402].[avg:Calculation_2721018610750398481:qk]' num-steps='15' type='interpolated' />
            <encoding attr='size-bar' field='[federated.03mke2x1vquwse109aqu519k9402].[cnt:nickname:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.03mke2x1vquwse109aqu519k9402].[avg:Calculation_2721018610750398481:qk]' />
              <size column='[federated.03mke2x1vquwse109aqu519k9402].[cnt:nickname:qk]' />
              <text column='[federated.03mke2x1vquwse109aqu519k9402].[none:nickname:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Nickname:&#9;</run>
                <run bold='true'>&lt;[federated.03mke2x1vquwse109aqu519k9402].[none:nickname:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Cancelado:&#9;</run>
                <run bold='true'>&lt;[federated.03mke2x1vquwse109aqu519k9402].[avg:Calculation_2721018610750398481:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Ventas:&#9;</run>
                <run bold='true'>&lt;[federated.03mke2x1vquwse109aqu519k9402].[cnt:nickname:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{6024F418-3542-4D41-AEEC-6BA7B1595538}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Análisis de Teléfonos'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='49000' id='3' name='Specs' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='9' name='Distribución Geográfica de Ventas' w='49200' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='12' name='Boxplot de Precios por Celular' w='49200' x='50000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout active='true' name='Desktop'>
          <size maxheight='984' minheight='984' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
              <zone fixed-size='162' h='7764' id='34' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/Santi/Desktop/desafio-mercado-libre-git/venv/MeLi.jpg' type='bitmap' w='10253' x='417' y='813'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='347' h='23392' id='3' is-fixed='true' name='Specs' w='99166' x='417' y='8577'>
                <layout-cache type-h='cell' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='292' h='7764' id='27' is-fixed='true' type='title' w='88913' x='10670' y='813'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='67218' id='9' name='Distribución Geográfica de Ventas' w='39733' x='417' y='31969'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='67218' id='12' name='Boxplot de Precios por Celular' w='59433' x='40150' y='31969'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='55' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='56' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Specs' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='Distribución Geográfica de Ventas' w='49200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='12' is-fixed='true' name='Boxplot de Precios por Celular' w='49200' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{85DC6C5E-48F8-41C8-840C-A278B99EFCEA}' />
    </dashboard>
    <dashboard name='Comportamiento de Usuarios'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='10000' id='26' type='title' w='78100' x='21100' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='39000' id='11' name='Cantidad de Ventas por Usuario por Celular' w='50300' x='48900' y='11000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='49000' id='9' name='Ventas Canceladas por Cantidad de Ventas Totales' w='50300' x='48900' y='50000'>
            <layout-cache fixed-size-w='152' type-h='fixed' type-w='fixed' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='10000' id='30' is-centered='0' is-scaled='1' param='C:/Users/Santi/Desktop/desafio-mercado-libre-git/venv/MeLi.jpg' type='bitmap' w='20300' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='88000' id='3' name='Users Negativos por Cantidad de Ventas' w='48100' x='800' y='11000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout active='true' name='Desktop'>
          <size maxheight='1038' minheight='1038' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='90688' id='25' param='vert' type='layout-flow' w='99166' x='417' y='8541'>
                <zone h='90688' id='7' param='horz' type='layout-flow' w='99166' x='417' y='8541'>
                  <zone h='90688' id='5' type='layout-basic' w='99166' x='417' y='8541'>
                    <zone h='90688' id='3' name='Users Negativos por Cantidad de Ventas' w='49581' x='417' y='8541'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='53669' id='9' name='Ventas Canceladas por Cantidad de Ventas Totales' w='49585' x='49998' y='45560'>
                      <layout-cache fixed-size-w='152' type-h='fixed' type-w='fixed' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='37019' id='11' name='Cantidad de Ventas por Usuario por Celular' w='49585' x='49998' y='8541'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone h='7770' id='27' is-centered='0' is-scaled='1' param='C:/Users/Santi/Desktop/desafio-mercado-libre-git/venv/MeLi.jpg' type='bitmap' w='9945' x='417' y='771'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7770' id='26' type='title' w='89221' x='10362' y='771'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CB49FDBD-3CB0-4BF2-8CDD-0DDD36537CC6}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='106'>
    <window class='worksheet' name='Specs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='40'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Camera:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Battery:nk]</field>
            <field>[federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Camera:nk]</field>
            <field>[federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Display:nk]</field>
            <field>[federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Name:nk]</field>
            <field>[federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Processor:nk]</field>
            <field>[federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Storage:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DD7E841D-F156-4248-AFB5-FDA0248AF678}' />
    </window>
    <window class='worksheet' name='Distribución Geográfica de Ventas'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[ctd:id:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:name (seller_address.state):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[attr:name (seller_address.state):nk]</field>
            <field>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:Item:nk]</field>
            <field>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:State:nk]</field>
            <field>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:id (attributes):nk]</field>
            <field>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:id (seller_address.state):nk]</field>
            <field>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:id:nk]</field>
            <field>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:item_name:nk]</field>
            <field>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:name (seller_address.state):nk]</field>
            <field>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:state_name:nk]</field>
            <field>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:value_id:nk]</field>
            <field>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:zip_code:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0DFB82F1-25BB-4FA7-A432-CDDE03CDA546}' />
    </window>
    <window class='worksheet' name='Boxplot de Precios por Celular'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:item_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:F1:ok]</field>
            <field>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:Item:nk]</field>
            <field>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:condition:nk]</field>
            <field>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:item_name:nk]</field>
            <field>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:title:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{AAAE93E6-F69F-430D-BE17-799A0F5DCCB3}' />
    </window>
    <window class='worksheet' name='Cantidad de Ventas por Usuario por Celular'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.03mke2x1vquwse109aqu519k9402].[none:item:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[none:F1:ok]</field>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[none:id:ok]</field>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[none:item:nk]</field>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[none:items:nk]</field>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[none:nickname:nk]</field>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[none:usuarios:ok]</field>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[sum:F1:ok]</field>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[usr:Calculation_149744699647197188:ok:7]</field>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[usr:Calculation_149744699647197188:ok]</field>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[usr:Calculation_2721018610733031429:ok:7]</field>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[usr:Calculation_2721018610733031429:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{223AC7E3-D5D0-428C-8D6B-F2BE418870A6}' />
    </window>
    <window class='worksheet' name='Users Negativos por Cantidad de Ventas'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.03mke2x1vquwse109aqu519k9402].[avg:Negative per ratings:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[avg:Negative Rating:qk]</field>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[avg:Negative per ratings:qk]</field>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[none:id:ok]</field>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[none:nickname:nk]</field>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[sum:count:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{533B1D7C-AA23-48B8-8CE9-7B4832808E3D}' />
    </window>
    <window class='worksheet' name='Ventas Canceladas por Cantidad de Ventas Totales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.03mke2x1vquwse109aqu519k9402].[avg:Calculation_2721018610750398481:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[avg:Calculation_2721018610750398481:qk]</field>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[none:nickname:nk]</field>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[sum:count:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7086ACAF-E9AF-4828-9229-DCA7EE5B020B}' />
    </window>
    <window class='dashboard' maximized='true' name='Comportamiento de Usuarios'>
      <viewpoints>
        <viewpoint name='Cantidad de Ventas por Usuario por Celular'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Users Negativos por Cantidad de Ventas' />
        <viewpoint name='Ventas Canceladas por Cantidad de Ventas Totales' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{5FE3C1A4-6412-4D9D-99C9-8736F57C9AF1}' />
    </window>
    <window class='dashboard' name='Análisis de Teléfonos'>
      <viewpoints>
        <viewpoint name='Boxplot de Precios por Celular'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Distribución Geográfica de Ventas'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Specs'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='12' />
      <simple-id uuid='{167F33E2-8A95-4EC9-B4A1-54883D54A203}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Análisis de Teléfonos' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Boxplot de Precios por Celular' width='192'>
      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
      /1MnbiGICxl3AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Cantidad de Ventas por Usuario por Celular' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Comportamiento de Usuarios' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Distribución Geográfica de Ventas' width='192'>
      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
      PTfM2/GeAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Specs' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Users Negativos por Cantidad de Ventas' width='192'>
      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
      LyTIdOY/WFwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Ventas Canceladas por Cantidad de Ventas Totales' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAYaElEQVR4nO3d2V8bV5738Y/2XYBA7DsYMPsOtrHxmngySc/Ma3peczN/TP8Rc/vMzXPR
      8/T0TM+4k44dYzt2sMHgBbPY7DtiXyUhoa2eC6fdTjxOQxIkh/q9r5B0qupUia/qnFpOaRRF
      URBCpbSJroAQiSQBEKqmf/uF1+tleHg4UXURIu6+E4Dh4WF6tlZwulyJqo8qDHZ3c/7axURX
      Iy767j6g9fKFY5v/+tIyq5u75J0q/VHT67//htPlItmd9pMrJt7P5nDiUsk2ticd77qGgkH8
      Uc2P/p+VPoBQNQmAULV3mkB/drDn4cF/9ZKUk0RRYxsbM5NUNNejQWGq/xHr20FS80s4VV7A
      k89/R3LlZUpL3PTc+D06SzJRvZ3Ws9X0dz0ArZaUwgrKs+APfxoiK9lIZlU9Ls02/U8ncdgt
      nGo/w4vf/yfV//BPGLZfsW0oZmf0PiHFhtHpJjMpQtBaQIbFy8TcHuHtFeZG5ylubibJcMDS
      +h4mk4ma1nomZ9eorv5xbcJ4W3w1wOzcOovTS1z9pIXevmmSnVYq2ttZHR+nqrUB8PK0a5qm
      q3WMdD2i6OoZZr65z5Y/QmZJBadKs7j3/35LccenFGRZ6L39NRFFQ3ZFLTGPh9xzjZgP1nnS
      t03z+TIAloZ6eeXRcPXjNsa+uc+yP0wsGKLp2jX2F8eYml5Bo9NS09GJ06pL7EY6Ru8NgBKN
      klfVREVLAQALQ34AIvvbrHk1tH90BQ2gRLxoHHnsLExAiRtTcjqNFy7w8KuvWB56QnbzJfLT
      zfR9eYtIWhE59e20VKTw6NZdnKVZlLScozA3BQjjcGcxNzREkTvEgRIFo43WC1de1ycWpvdm
      F0uKnra/uYpeW05o/xH1Z+qZ6HlM3eVLOEx6CG6zvx889g33c8k9XY/V8hJTaj4mfJS2nqOi
      0AVEmfH6vy0Vxb+7D0Bg10twa5FtJYmO6w1ogNDeKo7sEpanpyhIzWd1Bz759VX0Og0jYxPE
      AGIR/N7At/OL4VkP4dRHCEYUgiEd7dc78Y69wLO4zuqrRS783cdo4r414u8HmkAxJp700Hf7
      Dlu7gTfvRkMBTGbLm42z/KSHtZ195l6OEozCztIMfV13cbiyCewEsTosoNGg18WIxl5Po9Hq
      MeoNxIjy6tED+m7fwbsfQ2eyk2aLsrr5+osPbK/Sd/sOL56OoNEaSLIpRPROdJrvfTURP8/u
      3OXJvUeEoj/j1omDWDjAwPM5Gppe/zIPd9+n+9Ydtr2h904TCnixOhxvvoPZp/2sbPmZHhom
      ZEqj80IFjz7/nJGXs4T8W/Te7KL7djfByOsvIOzbYGp0krWpSWYWtlBCe9z999/S/3KTomIn
      WsyEdla5+W//ysTywXFvgoR67x4ANBTWNlLWmIfeaEKJRjgIBNBbU/GvPGF3t5RYOMxywMRH
      n55jZ26E+elVknOKaLzw+rCXb9nEYO8TjNWZ+GM2jDoIHwTZmpsgYrShR0dpUyv52cnoTa+z
      mF9Tx1f/518pyGrGnJRGZdtZNFod/pVZAqY88k0bzHl2Kcwxv7UWFqrO1uAw6TEQIBIOcRAI
      YjCb0H4/LB8SRWHo7h2KWs8SOThAUaCsuY2yghQMJgOxaJhgIIDBaCUcW8Xn3WUzFqIhvZDB
      h13slWQQOQixFbVz/dMOPCNPWZhaQKvT0dTRTN+zWdJtLtqvn8caWOb+vTUAVianOPfrfyYr
      KUbv/UEcRicX//EyfTe+ZM+rQa/dYSNgoKw8n8gJv1JG95vf/OY3f36xuLjIOlHMNisavYHN
      hSlWPcuYk9KwaA+Ym5zD6EzjVFUJcyMjmJPdpGW5sdrtmJ0p6PWQmpGOyWIBwOhwYTeG8Xh2
      qTvbjM5oZXt2jKjeSU1zNXqLiZXJcdaWVrC5s3C5kzHbHaRmZZOc5sZqUJgenWJ37wB7spPc
      4kJS8wuI7nux2h04XMmYbRbMFj1zI6Nsrq6TklNAaMPD8vwaKdmZ6HUfXj9/eXqG4vISAAJ+
      P5seDxvr22QUlrA+Pcbq4grW1AyMUT+zk3NYkjMoPZXD6NAYdR0dWCwW8ouymBh8icOdiTsz
      DZvdjj3Fhc5kRvGusbDspflcMw6XE7PVglZrxOlyYrGZUHRW3OlJ6PQm7A4rqdkZWOwOCk8V
      4d/zU9FQy+rUKFF7AWXF6fyU35D5yWnyS4t/pi33Lt/eHl5/kJQfeRhU8/bFcD09PYwQkvMA
      x+xp112ufvZRoqsRF903u+i4fvXY5r+ysIhnbYeiyoofNf2H9/MoRBxJAISqSQCEqkkAhKpJ
      AISqSQCEqkkAhKpJAISqSQCEqkkAhKpJAISqSQCEqkkAhKpJAISqSQCEqkkAhKpJAISqSQCE
      qkkAhKpJAISqSQCEqkkAhKpJAISqSQCEqkkAhKr9wNigQvx0o88Hj3X+wf19AsEQOyseADaW
      V0nLyjj09BIAcawqGmqPdWjE7zvqUIzSBBKqJgEQqiYBEKomARCqJgEQqiYBEKomARCqJgEQ
      qiYBEKomARCqJgEQqiYBEKomARCqJgEQqiYBEKomARCqJgEQqiYBEKomARCqJvcEi2M18uwF
      kagSt+XpNEdblgRAHKvC6mrqLl+K2/JG7t87UnkJgDhRRp4NEoocfi8gARAnSmF1NQ1XLh+6
      vHSChapJAISqSQCEqkkAhKpJAISqSQCEqslh0ATw7e7SfbMr0dWIC0WJ31ngH0MCkAD2pKS4
      DhmeSLdu3Ep0FX6QNIGEqkkAhKpJEyjBlFiUuZFBVtb9VDQ3key0sDQ2hD61mIw0G6P9feRU
      1eOwGlkYGUDnKkazM8/U3Ap6WxItZxuYfPoEb1hPWUU+I/0vCB6ESMrKp7G1hrnhFzjyynDo
      Ajx5+IxA8ABHZh6lRWkYHOmYNUGGep9idGVzuqaU5ZFhTHmlpCUZWJ5bIasgF4D97VUWlvcp
      ryxid2mKF4MzJLmzqGqsRBM5YPTpMwKKiZrmekxGXYK36uFJABJs8nE30fQymjuS8e9HAYX5
      2QWUBS8ZV8+yvjjOvs5FY2MJk8/7sBQ4sPm3abp+FQuwMXyPfUctVdlaYgYbZ66f58Ef79PY
      WoMSPWBxZhb9roa2c7Wc+fgqXV98SUtbLaOPv8ZenMzC43tUXLiGb3aAkZdmYjNLbK/56bxU
      y8TgqzcBmH05wdKmn5KKQrbnFqm4eIXweA/jkyvsjj/h1LnL2PURIpFoQgMwOTh0pPISgARb
      2trjQouLgfv3MWWfxqqsY3JXEdmYIqKA0ZVLdMdDcF3BklEGwIFvk96bXdidLurrahn4UzeD
      Gzk0nGkEQm/m7VubJ6W0Gd/iOBEF9Jp3l3+ggRSnGeepSiYfDZJqsJGdAotrvr8UioXwhXSU
      5zpZ3gqgREPMDI+g3dojq9bKmgaSDEEe3e2ltL0Tm9X4ZtKRZ4Psh2LHtfneUVxdReu1K4cu
      LwFIMJtOy25IR2NbLV39K7C2xq5XQ2h7mZn5XUBDisNIb/8CDQ15vJoEkz2VquvnsQCxWIwr
      v/4Va6NPeTk0T31D5pt5T41MsBMy4F1ZZm3DT7bb9m4FYjqiisKBbwurNRl2t8mvbeDZ3a9R
      vu0ielcWWFnyENo3EdkaodCsw6SNsLiroSHdyXhIQWt1UVeVzcSGn5x0+5vZF1RVU3vp8Fdn
      /lQT3V8fqbwEIMHqO8/Rd+c26HTkl9US3dVy8UINsQMv45MrpKSmUlSUzuI301gsNlJStWgU
      hb6bXZhsSZwuTmdwcByNRkdNRy0AqZnpKEoMsyuPi401RLyrTHh2yHbbcGe8foSoPSUNs0lH
      fUMZ3V/cBp2B1qudrA6NotOZKMx1M7v5epfh3dvn4j/+PU6LjpH+51gd6aQUV1OUOc3LoSma
      22vo/tNX6LQaTrVXJGxb/hga5a0zFT09PYwQItmdlsg6nXhPu+5y9bOPEl2NuPjP//iS+svx
      3QO0fXT4JpAcBhWqJgEQqvZOH+DVo4fYnc5E1EU11ufnEl0F8a13AtB+pROX9AGOlVouhPsl
      kCaQUDUJgFC1954HiAR36L3VCyY9Zc3txPZ3ycjPQRML8+zeA/bDChkl5ZSWZDHW348vYiAz
      zcb0+BRRDBTV1OKdG2XvQCG/soa83DSWJ14xO7tKcX0jGe4kdpcXeDUySe7pWsKbsyx5tjHb
      06iuyWJfk4TLaWZncQq9uwS7KcTixDp2A5gLsjFrXh+jnnrST0p5DS6HiVfd37DlD5NTXkVB
      roOeWw+J6bQU1jTgNAR5+WKMtIIySspy+V9OiooT4FnfAOu+8KHLvzcA4f09kjMrqG4rBODx
      nQEy8nMgFiasT6bjShMAYw/vos+rpS7dCnozltgmK4bTFBYk83h6hrNXWnjwhy5cl04zNhfg
      /MWzPLhxm6RPLtDf94rOv71C5OCAwUnfm2vkvbNPWcOAy2lmY3oEq6MEu+mA6cFpcuwaUvKz
      MWtAiQZYXfGwFjRzpqMan0/L2Y8u8ujGl2S4W9AlF3L2XBkQ4+s/3ODcZ5/h39n78VtXfPBS
      SivIbj1/6PI/cCY4xujjR+xsT3K6/dx3PlkeG6Y7sE12WTWr2z4unPvfO807ywsM9evB7mBr
      cp68043oDCayUxUW5xZw5RVj0Osw6K0Et1bpvtmFxZXJqfTDVX57YZa00+1sTQ8TVRS86x6G
      +p4RMdgxaGFmoJ+wd56S+haKS3N58PlNCqrrSUpLOez2ESfcDwRAS0Xb2Td7gMm3Pskqr6at
      8/UeYGtMw/Z+hBTru7OypaQS3F4lraiBFNsOr1Y2KMm2sePVcbo+jYW+KRRK0QBmVwZtnZ3A
      6z3AnxnMJoLBA2KmIIrFDBy8+Wx2bJq96CJ7iwus74WwOF3EfJs488rQa6CovoW2c2WAQiy9
      kbzKGA/+5wsKinIw/HKu2BXH6L0B0BnNLE/1sLM9SVlzO/qoj4c3uyiprSO07aH75jYZJeU0
      XrlM7+0uMFmp7TiH0ekmSWcENGQW5FNSWcrLRz1E85qxzPXw8MsxXKWVOJPSKcn08PDmbdKL
      yrHpFbpvdmG2p3G63MV8dy9bCxm0tXbQd/ceCxENNZ2dhGdHeXGri9TMbOyZRTTUVaLsrzM2
      t0V6YR7FtWVM9PWw6Sthb3GU7pvzFNbU4Z0dY8sbJKW4Ar10/cW33rkWaNESk/MAx6z7Zpdq
      7gn+v//2O6rOnfvrBX8mjx8+oez8xUOXl6tBxbEyBHYx+9YSXY33kgCIY5VbUkRlU0Pclvdg
      cOFI5aU1LFRNAiBUTZpA4kRZGXuJ5gin+SUA4kQ5c7bhSDfFSxNIqJoEQKiaNIESwLejntGh
      kdGhxffZk9UzOvSHHnRpAglVkwAIVZMAJFhge5PJkVcsLawQ+7a9vL7oIQZEw0FmX71icuQV
      Gxs7gMKmx0PkraE2FUVhe2Pz2xcxVmam2dn1x309fqkkAAk22/MCHA62JgcYn16HiI+eP/ye
      yUUfGo0Wq92Bd2GchWUvsfA+vV/cYGpm4y/Tv3jGvdsPXv/9vIflrQOe3LpDMBq/AWl/ySQA
      CaZED5gfG2djO4wrxY5nZIS6f/oXtsaH0eqNuNJs7ESTqKvOZXt6lFNX/o7thek30xfVN5GT
      7QJgbd5HRUMFFXkmPFvRRK3SL4ocBUowrd5Gw8Uz+Eefsbyyyc7kDFrPHp75dZovtfHs6x7q
      O6+i1Wh4OTwNti2WF1apP9+CWffdc/46A8RiEAppMBo/jNv+h5++IBTHvdH88DA24+F/1yUA
      CabRhXh65z5a3x5FLdmEM8pp7mhgdaSPkf6nvBxbIaR5QHZZGea0PFo621kZHWDZs0NRXgqv
      er5hYvAlGuwU1hTS88cvielNXHV+GPd8FtVU0xDHwXGNOg0d168durwEIMHKP7pK+Vuviwry
      AMioaiUDqGttfvNZcXE+AJkV9W/eO33mPKfP/GUUhKv5b89N/DXSBxCqJgEQqiYBEKomARCq
      JgEQqiYBEKomARCqJucBxIkyNTKKyWQ+dHkJgDhRCspKqT3TcujyEgBxougNekzmw+8BpA8g
      VE32AOJYTb4YiuvyrPqjXQUrARDHqrSu5kgDVf1UI/fvHam8NIGEqkkAhKpJAISqSQCEqkkn
      OAGC+/uMDgwmuhpxocjQiOL79AYDaZkZia5GXMzNLcd1eWMDQ8DhD4VKABJATQE4wv/iz6K8
      vuZI465KH0ComgRAqJo0gRJs6t491p1ZtDeV8OxBHzZ9DHddO0bfIvNbehyRdabnN0nOyqO2
      sYLAlocnj4bQaHSU1VcwOfiSuakpKs92UuA2MPB8CmIRai5dY/tZDwsHEZRgmLaPrzFw8wZY
      nDgzc6mtr0j0qn8QJAAJFj7QEfWtsBcowLe7R921drq/7sOs+Ki73EHPrQkufnbtzYPfdj0z
      GDNKaGsuASA9M5PIV2HqGyvp/uJLOv72OrqYnwddvWRodLRcv4h/sJ+V9T0MznRar3TEu1n+
      QZMmUMJpKG+oZGxgBACdOYVU/RrarHLMSgjFbP/OUw8zK9vJMO7y1e/+m629g+/MKaKJYtBp
      0BrsxJR9Ige73PvtvzMw4yUvK5mdpWke3uxiZGgqniv4QZM9wAfA6HRjibzA4w8DkO62s+HK
      AJMRvW+JjW0v2nCIlPRU9lY9OHLLKA95Wd/04rKnvJlPmsXI1Owaxr1JkrNOo19doPP6JZ7+
      8St8+yGSsgpo6jyDRhu/3z25GlT8oNymKsxoqGg5gzN3B4CkogasBiNodHR89gkvnzzDmVNM
      CuBwpzP2dABdUiHlRW5Aoab59R1QVZ1XmB4cIGDJoaEsH/+GE7PJxsVffczaupeszCSedffg
      SM+hsro0LutX11If18dBHfWRTBKABLO7Xw9tjtlOfpEdAJMzDdO3n2sNJqrPnHlTXqM3cbqt
      7a05aHC501//pdVRUt/07ryNVjJzrJDjpuC4VuQXSgIgTpSV+UUmhl4eurwEQJwoitGMYrEf
      urwEQJwoTlcK7pzsQ5eXw6BC1SQAQtUkAELVJABC1d7pBPfffYAtyZmIuqjG4vRMoqsgvvVO
      AFouX8DlTktEXVTjqGcrxfGRJpBQNQmAULX3nwhTFJanRpmd9pBWWEZhhp7lAyf56TbmJsYw
      AMn5pVi0Aebmd/B7JtnxR0jKzKeyrojHn99CMdkoqmvAFvERcaThcpqZHp8iL8/NYO8zYgYH
      de0NbCzOkl1YzMbsGDGjk/GBF/j9YbLLKqipOxW/rSF+dqPP4zv6xcQRR9t4bwD212aZWAjQ
      cfUSAf8+ke0x5ne15KfbmB0fo6mpiqHno9gDHtKbL7A+O8PZjzvp/eJ/CJzOQW9Np+lCLQ9u
      fU2JO4VQjv11AMYmCS+Mk153iTRzBK0Glman3wTA1fQrOi5ruX/HI//8J0BFQ21crwb1h6JH
      Gov0vQHYWpogu+I8c8PPmfEEaK+0fOdze2Yx2uf/zaYxnyqHgedL03zz+R6+iA2LUcvi6BAx
      fNhSsoDgd6YtaGrg0d3bLLgyaL3QwtLoMAdBWBmf4kITQsTNe/sASRn5rM3OUljTiBL2obfa
      iez5UKIhlJgB0JCf5cB9qhyAlJxizn/6CRlJCju+ENmlFeD34s7PxWTTc7AfRImG0KBBb0vl
      4j98SoY+wPyyl5yKajquX6W6tiRe6y0E8AMBcGSXkabf4eGtu6TmFGJIKyNNWeThra8paWwF
      wJKaQ4rdAIBe2efhrTuE9Skk2SxkFGTT+umn7M2Nk1RWzcHiK7pv3qX6XAc7i7M8+uoO61Ez
      eZkO3Fk5ACRnFWA2ADoLWfmpx7/2QvU0yltj1/X09LBoicl5gGPWfbMrru3iRIr3ut66cevn
      6QOI47O3vUvXH28luhpxYdZ/2EfaJQAJYEtyUnvpUqKrERdHfWJLvH3Y8RTimEkAhKpJE0ic
      KL7dXbZWVw9dXgIgTpSo30t4Z/PQ5SUA4kTJLiygor720OWlDyBUTfYA4liNPj/aI4t+KiUW
      O1J5CYA4VhUNR3tk0U911LvtpAkkVE0CIFRNAiBUTQIgVE0CIFRNjgKJE2V0YJC3bnH5qyQA
      4kTJq6yi+uLhLzWXJpBQNdkDJMC+z8dw7+NEVyMuNIdvjSSEBCABbDYrDU2Hv2Drl2zgUW+i
      q/CDJAAJoNXpsDsdia5GnHzYz6WXPoBQNdkDiGMV77FB5WpQ8UGJ99igt24cbbgZaQIJVZM9
      gDhRYtEY0Ujk0OUlAOJEWZkYZ8JuPnR5CYA4UU7VVnHmmlwKIcShSACEqkkAhKpJAISqSQCE
      qkkAhKpJAISqSQCEqr1zIqz/3gNsTmci6qIao89fJLoKcRPvdT3q8v4/lJSd6p6FgHQAAAAA
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
