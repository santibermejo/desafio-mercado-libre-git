<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0621.1547                               -->
<workbook original-version='18.1' source-build='2019.2.1 (20192.19.0621.1547)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='users-data' inline='true' name='federated.03mke2x1vquwse109aqu519k9402' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='users-data' name='semistructpassivestore-direct.0i2vl6e10rbk6q136sg961ngd8ct'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/Santi/Desktop/desafio-mercado-libre-git/venv' filename='users-data.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[users-data.json]'>
                  <map key='address' value='true' />
                  <map key='seller_reputation' value='true' />
                  <map key='seller_reputation.transactions' value='true' />
                  <map key='seller_reputation.transactions.ratings' value='true' />
                  <map key='status' value='true' />
                  <map key='tags' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.0i2vl6e10rbk6q136sg961ngd8ct' name='users-data.json' table='[users-data.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[users-data.json].[Document Index (generated)]' />
          <map key='[canceled]' value='[users-data.json].[seller_reputation.transactions.canceled]' />
          <map key='[city]' value='[users-data.json].[address.city]' />
          <map key='[completed]' value='[users-data.json].[seller_reputation.transactions.completed]' />
          <map key='[country_id]' value='[users-data.json].[country_id]' />
          <map key='[id]' value='[users-data.json].[id]' />
          <map key='[item]' value='[users-data.json].[item]' />
          <map key='[level_id]' value='[users-data.json].[seller_reputation.level_id]' />
          <map key='[negative]' value='[users-data.json].[seller_reputation.transactions.ratings.negative]' />
          <map key='[neutral]' value='[users-data.json].[seller_reputation.transactions.ratings.neutral]' />
          <map key='[nickname]' value='[users-data.json].[nickname]' />
          <map key='[period]' value='[users-data.json].[seller_reputation.transactions.period]' />
          <map key='[permalink]' value='[users-data.json].[permalink]' />
          <map key='[points]' value='[users-data.json].[points]' />
          <map key='[positive]' value='[users-data.json].[seller_reputation.transactions.ratings.positive]' />
          <map key='[power_seller_status]' value='[users-data.json].[seller_reputation.power_seller_status]' />
          <map key='[registration_date]' value='[users-data.json].[registration_date]' />
          <map key='[site_id]' value='[users-data.json].[site_id]' />
          <map key='[site_status]' value='[users-data.json].[status.site_status]' />
          <map key='[state]' value='[users-data.json].[address.state]' />
          <map key='[tags Index (generated)]' value='[users-data.json].[tags.Index (generated)]' />
          <map key='[tags]' value='[users-data.json].[tags.Value]' />
          <map key='[total]' value='[users-data.json].[seller_reputation.transactions.total]' />
          <map key='[user_type]' value='[users-data.json].[user_type]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address.city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>address.city</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address.state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>address.state</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country_id]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>country_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>5</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>id</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>item</remote-name>
            <remote-type>130</remote-type>
            <local-name>[item]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>item</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nickname</remote-name>
            <remote-type>130</remote-type>
            <local-name>[nickname]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>nickname</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>permalink</remote-name>
            <remote-type>130</remote-type>
            <local-name>[permalink]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>permalink</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>points</remote-name>
            <remote-type>5</remote-type>
            <local-name>[points]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>points</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>registration_date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[registration_date]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>registration_date</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_reputation.level_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[level_id]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>seller_reputation.level_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_reputation.power_seller_status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[power_seller_status]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>seller_reputation.power_seller_status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_reputation.transactions.canceled</remote-name>
            <remote-type>5</remote-type>
            <local-name>[canceled]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>seller_reputation.transactions.canceled</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_reputation.transactions.completed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[completed]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>seller_reputation.transactions.completed</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_reputation.transactions.period</remote-name>
            <remote-type>130</remote-type>
            <local-name>[period]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>seller_reputation.transactions.period</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_reputation.transactions.ratings.negative</remote-name>
            <remote-type>5</remote-type>
            <local-name>[negative]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>seller_reputation.transactions.ratings.negative</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_reputation.transactions.ratings.neutral</remote-name>
            <remote-type>5</remote-type>
            <local-name>[neutral]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>seller_reputation.transactions.ratings.neutral</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_reputation.transactions.ratings.positive</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>seller_reputation.transactions.ratings.positive</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_reputation.transactions.total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>seller_reputation.transactions.total</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>site_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[site_id]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>site_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>status.site_status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[site_status]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>status.site_status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tags.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tags Index (generated)]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>tags.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tags.Value</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tags]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>tags.Value</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>user_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[user_type]</local-name>
            <parent-name>[users-data.json]</parent-name>
            <remote-alias>user_type</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Index' datatype='integer' name='[Calculation_149744699647197188]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='% Canceled' datatype='real' name='[Calculation_2721018610750398481]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Canceled per transactions]/([Canceled per transactions]+[Completed per transactions])' />
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Canceled per transactions]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([canceled]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at transactions level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Completed per transactions]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([completed]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at transactions level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Negative per ratings]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([negative]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at ratings level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Neutral per ratings]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([neutral]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at ratings level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per tags]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([tags Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at tags level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per users-data.json]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Document Index (generated)])' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at users-data.json level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Points per Document]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([points]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at Document level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Positive per ratings]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([positive]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at ratings level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Total per transactions]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([total]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at transactions level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Canceled' datatype='real' name='[canceled]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>seller_reputation.transactions.canceled</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>address.city</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Completed' datatype='real' name='[completed]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>seller_reputation.transactions.completed</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Country Id' datatype='string' name='[country_id]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <desc>
          <formatted-text>
            <run>country_id</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' caption='Id' datatype='real' name='[id]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>item</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Level Id' datatype='string' name='[level_id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller_reputation.level_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Negative' datatype='real' name='[negative]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>seller_reputation.transactions.ratings.negative</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Neutral' datatype='real' name='[neutral]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>seller_reputation.transactions.ratings.neutral</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Nickname' datatype='string' name='[nickname]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>nickname</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Period' datatype='string' name='[period]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller_reputation.transactions.period</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Permalink' datatype='string' name='[permalink]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>permalink</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Points' datatype='real' name='[points]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>points</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Positive' datatype='real' name='[positive]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>seller_reputation.transactions.ratings.positive</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Power Seller Status' datatype='string' name='[power_seller_status]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller_reputation.power_seller_status</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Registration Date' datatype='string' name='[registration_date]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>registration_date</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Site Id' datatype='string' name='[site_id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>site_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Site Status' datatype='string' name='[site_status]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>status.site_status</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>address.state</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[tags Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>tags.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Tags' datatype='string' name='[tags]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>tags.Value</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Total' datatype='real' name='[total]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>seller_reputation.transactions.total</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='User Type' datatype='string' name='[user_type]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>user_type</run>
          </formatted-text>
        </desc>
      </column>
      <column-instance column='[Calculation_2721018610750398481]' derivation='Avg' name='[avg:Calculation_2721018610750398481:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2721018610750398481]' derivation='Max' name='[max:Calculation_2721018610750398481:qk]' pivot='key' type='quantitative' />
      <column-instance column='[item]' derivation='None' name='[none:item:nk]' pivot='key' type='nominal' />
      <column-instance column='[nickname]' derivation='None' name='[none:nickname:nk]' pivot='key' type='nominal' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <folder name='Address' role='dimensions'>
        <folder-item name='[city]' type='field' />
        <folder-item name='[state]' type='field' />
      </folder>
      <folder name='Seller Reputation' role='dimensions'>
        <folder-item name='[level_id]' type='field' />
        <folder-item name='[power_seller_status]' type='field' />
      </folder>
      <folder name='Status' role='dimensions'>
        <folder-item name='[site_status]' type='field' />
      </folder>
      <folder name='Transactions' role='dimensions'>
        <folder-item name='[period]' type='field' />
      </folder>
      <folder name='Users-Data' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[country_id]' type='field' />
        <folder-item name='[id]' type='field' />
        <folder-item name='[item]' type='field' />
        <folder-item name='[nickname]' type='field' />
        <folder-item name='[permalink]' type='field' />
        <folder-item name='[registration_date]' type='field' />
        <folder-item name='[site_id]' type='field' />
        <folder-item name='[tags Index (generated)]' type='field' />
        <folder-item name='[tags]' type='field' />
        <folder-item name='[user_type]' type='field' />
      </folder>
      <folder name='Source Measures' role='measures'>
        <folder-item name='[canceled]' type='field' />
        <folder-item name='[completed]' type='field' />
        <folder-item name='[negative]' type='field' />
        <folder-item name='[neutral]' type='field' />
        <folder-item name='[points]' type='field' />
        <folder-item name='[positive]' type='field' />
        <folder-item name='[total]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.545582' measure-ordering='alphabetic' measure-percentage='0.454418' show-structure='false' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[avg:Calculation_2721018610750398481:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[max:Calculation_2721018610750398481:qk]&quot;</bucket>
            </map>
            <map to='#5fbb68'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[avg:Positive Rating:qk]&quot;</bucket>
            </map>
            <map to='#5fbb68'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[sum:Positive Rating:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[usr:Calculation_2721018610733031429:ok:10]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[usr:Calculation_2721018610733031429:ok:2]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[usr:Calculation_2721018610733031429:ok:8]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[usr:Calculation_2721018610733031429:ok:9]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[sum:Transactions Canceled:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[sum:Transactions Completed:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[sum:F1:qk]&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[avg:Negative Rating:qk]&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[diff:avg:Negative Rating:qk:1]&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[diff:avg:Negative Rating:qk:2]&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[diff:avg:Negative Rating:qk:3]&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[diff:avg:Negative Rating:qk:4]&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[diff:avg:Negative Rating:qk]&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[sum:Negative Rating:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[avg:Neutral Rating:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[sum:Neutral Rating:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.03mke2x1vquwse109aqu519k9402].[sum:count:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:nickname:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ELCAPODENEXTEL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ZELUCASH ARG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AUDIO_PHONES&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LEFR182263&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;EVE CORONEL&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;ELPIBEDELOESTE2014&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ELECTROCELULARES&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CHIPMANIA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TETE4826771&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;SOIS1153976&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;INVADER13&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AUDIO.ARTE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MULTIMARCARECOLETA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GASTOJAVIERIGNACIOMOLINA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;COMPRATECHAR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TOMA7365759&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;FIORELLASGRO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GAMESTATION ARG&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GEORGETE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JCELULARES ARGENTINA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CAPUTOCRISTIANARIEL&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;FERVALOTTA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CUEVASRODRIGO03&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;VIPRACING&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BLACKBULLAR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NEXTELSOLDHERE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GABRIELMB2011&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;SMARPHONEMANIA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BAZA 10&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:item:nk]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;Samsung s8&quot;</bucket>
            </map>
            <map to='#45a2b9'>
              <bucket>&quot;Moto X Style&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;Iphone 7&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Argentina&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='phones-specs' inline='true' name='federated.0dy50zt01yfsqx1dyokur07pbr8b' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='phones-specs' name='semistructpassivestore-direct.1wygmif054onj217z95f81hejx9r'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/Santi/Desktop/desafio-mercado-libre-git/venv' filename='phones-specs.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[phones-specs.json]'>
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.1wygmif054onj217z95f81hejx9r' name='phones-specs.json' table='[phones-specs.json]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[phones-specs.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Battery</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Battery]</local-name>
            <parent-name>[phones-specs.json]</parent-name>
            <remote-alias>Battery</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Camera</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Camera]</local-name>
            <parent-name>[phones-specs.json]</parent-name>
            <remote-alias>Camera</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Display</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Display]</local-name>
            <parent-name>[phones-specs.json]</parent-name>
            <remote-alias>Display</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Memory</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Memory]</local-name>
            <parent-name>[phones-specs.json]</parent-name>
            <remote-alias>Memory</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[phones-specs.json]</parent-name>
            <remote-alias>Name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Processor</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Processor]</local-name>
            <parent-name>[phones-specs.json]</parent-name>
            <remote-alias>Processor</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Storage</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Storage]</local-name>
            <parent-name>[phones-specs.json]</parent-name>
            <remote-alias>Storage</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Batería' datatype='string' name='[Battery]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>Battery</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Camara' datatype='string' name='[Camera]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>Camera</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Pantalla' datatype='string' name='[Display]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>Display</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='string' hidden='true' name='[Memory]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>Memory</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Nombre' datatype='string' name='[Name]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>Name</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Procesador' datatype='string' name='[Processor]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>Processor</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Almacenamiento' datatype='string' name='[Storage]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>Storage</run>
          </formatted-text>
        </desc>
      </column>
      <folder name='Phones-Specs' role='dimensions'>
        <folder-item name='[Battery]' type='field' />
        <folder-item name='[Camera]' type='field' />
        <folder-item name='[Display]' type='field' />
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[Memory]' type='field' />
        <folder-item name='[Name]' type='field' />
        <folder-item name='[Processor]' type='field' />
        <folder-item name='[Storage]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.653576' measure-ordering='alphabetic' measure-percentage='0.346424' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Argentina&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='phones-data' inline='true' name='federated.1puq9ha0ngu50s10qovtk1ribbtf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='phones-data' name='semistructpassivestore-direct.19qzx751l23jgb1eax4j313hm90f'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/Santi/Desktop/desafio-mercado-libre-git/venv' filename='phones-data.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[phones-data.json]'>
                  <map key='address' value='true' />
                  <map key='attributes' value='true' />
                  <map key='attributes.Value' value='true' />
                  <map key='differential_pricing' value='true' />
                  <map key='installments' value='true' />
                  <map key='seller' value='true' />
                  <map key='seller.tags' value='true' />
                  <map key='seller_address' value='true' />
                  <map key='seller_address.city' value='true' />
                  <map key='seller_address.country' value='true' />
                  <map key='seller_address.state' value='true' />
                  <map key='shipping' value='true' />
                  <map key='shipping.tags' value='true' />
                  <map key='tags' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.19qzx751l23jgb1eax4j313hm90f' name='phones-data.json' table='[phones-data.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[phones-data.json].[Document Index (generated)]' />
          <map key='[accepts_mercadopago]' value='[phones-data.json].[accepts_mercadopago]' />
          <map key='[address_line]' value='[phones-data.json].[seller_address.address_line]' />
          <map key='[amount]' value='[phones-data.json].[installments.amount]' />
          <map key='[attribute_group_id]' value='[phones-data.json].[attributes.Value.attribute_group_id]' />
          <map key='[attribute_group_name]' value='[phones-data.json].[attributes.Value.attribute_group_name]' />
          <map key='[attributes Index (generated)]' value='[phones-data.json].[attributes.Index (generated)]' />
          <map key='[available_quantity]' value='[phones-data.json].[available_quantity]' />
          <map key='[buying_mode]' value='[phones-data.json].[buying_mode]' />
          <map key='[car_dealer]' value='[phones-data.json].[seller.car_dealer]' />
          <map key='[catalog_product_id]' value='[phones-data.json].[catalog_product_id]' />
          <map key='[category_id]' value='[phones-data.json].[category_id]' />
          <map key='[city_id]' value='[phones-data.json].[address.city_id]' />
          <map key='[city_name]' value='[phones-data.json].[address.city_name]' />
          <map key='[comment]' value='[phones-data.json].[seller_address.comment]' />
          <map key='[condition]' value='[phones-data.json].[condition]' />
          <map key='[currency_id (installments)]' value='[phones-data.json].[installments.currency_id]' />
          <map key='[currency_id]' value='[phones-data.json].[currency_id]' />
          <map key='[free_shipping]' value='[phones-data.json].[shipping.free_shipping]' />
          <map key='[id (attributes)]' value='[phones-data.json].[attributes.Value.id]' />
          <map key='[id (differential_pricing)]' value='[phones-data.json].[differential_pricing.id]' />
          <map key='[id (seller)]' value='[phones-data.json].[seller.id]' />
          <map key='[id (seller_address)]' value='[phones-data.json].[seller_address.id]' />
          <map key='[id (seller_address.city)]' value='[phones-data.json].[seller_address.city.id]' />
          <map key='[id (seller_address.country)]' value='[phones-data.json].[seller_address.country.id]' />
          <map key='[id (seller_address.state)]' value='[phones-data.json].[seller_address.state.id]' />
          <map key='[id]' value='[phones-data.json].[id]' />
          <map key='[item_name]' value='[phones-data.json].[item_name]' />
          <map key='[latitude]' value='[phones-data.json].[seller_address.latitude]' />
          <map key='[listing_type_id]' value='[phones-data.json].[listing_type_id]' />
          <map key='[logistic_type]' value='[phones-data.json].[shipping.logistic_type]' />
          <map key='[longitude]' value='[phones-data.json].[seller_address.longitude]' />
          <map key='[mode]' value='[phones-data.json].[shipping.mode]' />
          <map key='[name (attributes)]' value='[phones-data.json].[attributes.Value.name]' />
          <map key='[name (seller_address.city)]' value='[phones-data.json].[seller_address.city.name]' />
          <map key='[name (seller_address.country)]' value='[phones-data.json].[seller_address.country.name]' />
          <map key='[name (seller_address.state)]' value='[phones-data.json].[seller_address.state.name]' />
          <map key='[official_store_id]' value='[phones-data.json].[official_store_id]' />
          <map key='[permalink]' value='[phones-data.json].[permalink]' />
          <map key='[power_seller_status]' value='[phones-data.json].[seller.power_seller_status]' />
          <map key='[price]' value='[phones-data.json].[price]' />
          <map key='[quantity]' value='[phones-data.json].[installments.quantity]' />
          <map key='[rate]' value='[phones-data.json].[installments.rate]' />
          <map key='[real_estate_agency]' value='[phones-data.json].[seller.real_estate_agency]' />
          <map key='[site_id]' value='[phones-data.json].[site_id]' />
          <map key='[sold_quantity]' value='[phones-data.json].[sold_quantity]' />
          <map key='[source]' value='[phones-data.json].[attributes.Value.source]' />
          <map key='[state_id]' value='[phones-data.json].[address.state_id]' />
          <map key='[state_name]' value='[phones-data.json].[address.state_name]' />
          <map key='[stop_time]' value='[phones-data.json].[stop_time]' />
          <map key='[store_pick_up]' value='[phones-data.json].[shipping.store_pick_up]' />
          <map key='[tags (seller) Index (generated)]' value='[phones-data.json].[seller.tags.Index (generated)]' />
          <map key='[tags (seller.tags)]' value='[phones-data.json].[seller.tags.Value]' />
          <map key='[tags (shipping) Index (generated)]' value='[phones-data.json].[shipping.tags.Index (generated)]' />
          <map key='[tags (shipping.tags)]' value='[phones-data.json].[shipping.tags.Value]' />
          <map key='[tags (tags)]' value='[phones-data.json].[tags.Value]' />
          <map key='[tags Index (generated)]' value='[phones-data.json].[tags.Index (generated)]' />
          <map key='[thumbnail]' value='[phones-data.json].[thumbnail]' />
          <map key='[title]' value='[phones-data.json].[title]' />
          <map key='[value_id]' value='[phones-data.json].[attributes.Value.value_id]' />
          <map key='[value_name]' value='[phones-data.json].[attributes.Value.value_name]' />
          <map key='[zip_code]' value='[phones-data.json].[seller_address.zip_code]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>accepts_mercadopago</remote-name>
            <remote-type>11</remote-type>
            <local-name>[accepts_mercadopago]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>accepts_mercadopago</remote-alias>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address.city_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city_id]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>address.city_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address.city_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city_name]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>address.city_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address.state_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state_id]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>address.state_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address.state_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state_name]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>address.state_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attributes.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[attributes Index (generated)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>attributes.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attributes.Value.attribute_group_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[attribute_group_id]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>attributes.Value.attribute_group_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attributes.Value.attribute_group_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[attribute_group_name]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>attributes.Value.attribute_group_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attributes.Value.id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[id (attributes)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>attributes.Value.id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attributes.Value.name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name (attributes)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>attributes.Value.name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attributes.Value.source</remote-name>
            <remote-type>5</remote-type>
            <local-name>[source]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>attributes.Value.source</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attributes.Value.value_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[value_id]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>attributes.Value.value_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attributes.Value.value_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[value_name]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>attributes.Value.value_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>available_quantity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[available_quantity]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>available_quantity</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>buying_mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[buying_mode]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>buying_mode</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>catalog_product_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[catalog_product_id]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>catalog_product_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[category_id]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>category_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>condition</remote-name>
            <remote-type>130</remote-type>
            <local-name>[condition]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>condition</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>currency_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[currency_id]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>currency_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>differential_pricing.id</remote-name>
            <remote-type>5</remote-type>
            <local-name>[id (differential_pricing)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>differential_pricing.id</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>installments.amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[amount]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>installments.amount</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>installments.currency_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[currency_id (installments)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>installments.currency_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>installments.quantity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[quantity]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>installments.quantity</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>installments.rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rate]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>installments.rate</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>item_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[item_name]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>item_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>listing_type_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[listing_type_id]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>listing_type_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>official_store_id</remote-name>
            <remote-type>5</remote-type>
            <local-name>[official_store_id]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>official_store_id</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>permalink</remote-name>
            <remote-type>130</remote-type>
            <local-name>[permalink]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>permalink</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>price</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller.car_dealer</remote-name>
            <remote-type>11</remote-type>
            <local-name>[car_dealer]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller.car_dealer</remote-alias>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller.id</remote-name>
            <remote-type>5</remote-type>
            <local-name>[id (seller)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller.id</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller.power_seller_status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[power_seller_status]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller.power_seller_status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller.real_estate_agency</remote-name>
            <remote-type>11</remote-type>
            <local-name>[real_estate_agency]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller.real_estate_agency</remote-alias>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller.tags.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tags (seller) Index (generated)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller.tags.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller.tags.Value</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tags (seller.tags)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller.tags.Value</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_address.address_line</remote-name>
            <remote-type>130</remote-type>
            <local-name>[address_line]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller_address.address_line</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_address.city.id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[id (seller_address.city)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller_address.city.id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_address.city.name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name (seller_address.city)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller_address.city.name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_address.comment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[comment]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller_address.comment</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_address.country.id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[id (seller_address.country)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller_address.country.id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_address.country.name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name (seller_address.country)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller_address.country.name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_address.id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[id (seller_address)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller_address.id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_address.latitude</remote-name>
            <remote-type>130</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller_address.latitude</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_address.longitude</remote-name>
            <remote-type>130</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller_address.longitude</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_address.state.id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[id (seller_address.state)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller_address.state.id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_address.state.name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name (seller_address.state)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller_address.state.name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_address.zip_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[zip_code]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>seller_address.zip_code</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>shipping.free_shipping</remote-name>
            <remote-type>11</remote-type>
            <local-name>[free_shipping]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>shipping.free_shipping</remote-alias>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>shipping.logistic_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[logistic_type]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>shipping.logistic_type</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>shipping.mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[mode]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>shipping.mode</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>shipping.store_pick_up</remote-name>
            <remote-type>11</remote-type>
            <local-name>[store_pick_up]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>shipping.store_pick_up</remote-alias>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>shipping.tags.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tags (shipping) Index (generated)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>shipping.tags.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>shipping.tags.Value</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tags (shipping.tags)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>shipping.tags.Value</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>site_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[site_id]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>site_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sold_quantity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sold_quantity]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>sold_quantity</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stop_time</remote-name>
            <remote-type>130</remote-type>
            <local-name>[stop_time]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>stop_time</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tags.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tags Index (generated)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>tags.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tags.Value</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tags (tags)]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>tags.Value</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>thumbnail</remote-name>
            <remote-type>130</remote-type>
            <local-name>[thumbnail]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>thumbnail</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[phones-data.json]</parent-name>
            <remote-alias>title</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' is-auto-gen-lod-field='true' name='[Amount per installments]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([amount]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at installments level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Available Quantity per Document]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([available_quantity]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at Document level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='random()' datatype='real' name='[Calculation_2721018610672181251]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='random()' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per attributes]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([attributes Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at attributes level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per phones-data.json]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Document Index (generated)])' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at phones-data.json level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per tags (seller)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([tags (seller) Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at tags (seller) level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per tags (shipping)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([tags (shipping) Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at tags (shipping) level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per tags]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([tags Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at tags level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Price per Document]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([price]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at Document level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Quantity per installments]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([quantity]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at installments level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Rate per installments]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([rate]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at installments level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Sold Quantity per Document]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([sold_quantity]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at Document level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Source per attributes]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Document Index (generated)],[attributes Index (generated)] : MAX([source]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at attributes level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Accepts Mercadopago' datatype='boolean' name='[accepts_mercadopago]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>accepts_mercadopago</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Address Line' datatype='string' name='[address_line]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller_address.address_line</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Amount' datatype='real' name='[amount]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>installments.amount</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Attribute Group Id' datatype='string' name='[attribute_group_id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>attributes.Value.attribute_group_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Attribute Group Name' datatype='string' name='[attribute_group_name]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>attributes.Value.attribute_group_name</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[attributes Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>attributes.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Available Quantity' datatype='real' name='[available_quantity]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>available_quantity</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Buying Mode' datatype='string' name='[buying_mode]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>buying_mode</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Car Dealer' datatype='boolean' name='[car_dealer]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller.car_dealer</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Catalog Product Id' datatype='string' name='[catalog_product_id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>catalog_product_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Category Id' datatype='string' name='[category_id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>category_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='City Id' datatype='string' name='[city_id]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>address.city_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='City Name' datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>address.city_name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Comment' datatype='string' name='[comment]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller_address.comment</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Condition' datatype='string' name='[condition]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>condition</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Currency Id (Installments)' datatype='string' name='[currency_id (installments)]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>installments.currency_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Currency Id' datatype='string' name='[currency_id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>currency_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Free Shipping' datatype='boolean' name='[free_shipping]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>shipping.free_shipping</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Id (Attributes)' datatype='string' name='[id (attributes)]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>attributes.Value.id</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' caption='Id (Differential Pricing)' datatype='real' name='[id (differential_pricing)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>differential_pricing.id</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' caption='Id (Seller)' datatype='real' name='[id (seller)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>seller.id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Id (Seller Address)' datatype='string' name='[id (seller_address)]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller_address.id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Id (Seller Address.City)' datatype='string' name='[id (seller_address.city)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller_address.city.id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Id (Seller Address.Country)' datatype='string' name='[id (seller_address.country)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller_address.country.id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Id (Seller Address.State)' datatype='string' name='[id (seller_address.state)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller_address.state.id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Item Name' datatype='string' name='[item_name]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>item_name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Latitude' datatype='string' name='[latitude]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller_address.latitude</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Listing Type Id' datatype='string' name='[listing_type_id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>listing_type_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Logistic Type' datatype='string' name='[logistic_type]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>shipping.logistic_type</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Longitude' datatype='string' name='[longitude]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller_address.longitude</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Mode' datatype='string' name='[mode]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>shipping.mode</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Name (Attributes)' datatype='string' name='[name (attributes)]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>attributes.Value.name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Name (Seller Address.City)' datatype='string' name='[name (seller_address.city)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller_address.city.name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Name (Seller Address.Country)' datatype='string' name='[name (seller_address.country)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller_address.country.name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Name (Seller Address.State)' datatype='string' name='[name (seller_address.state)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller_address.state.name</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' caption='Official Store Id' datatype='real' name='[official_store_id]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>official_store_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Permalink' datatype='string' name='[permalink]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>permalink</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Power Seller Status' datatype='string' name='[power_seller_status]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller.power_seller_status</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>price</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Quantity' datatype='real' name='[quantity]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>installments.quantity</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Rate' datatype='real' name='[rate]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>installments.rate</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Real Estate Agency' datatype='boolean' name='[real_estate_agency]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller.real_estate_agency</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Site Id' datatype='string' name='[site_id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>site_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Sold Quantity' datatype='real' name='[sold_quantity]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>sold_quantity</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Source' datatype='real' name='[source]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>attributes.Value.source</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='State Id' datatype='string' name='[state_id]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>address.state_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='State Name' datatype='string' name='[state_name]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>address.state_name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Stop Time' datatype='string' name='[stop_time]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>stop_time</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Store Pick Up' datatype='boolean' name='[store_pick_up]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>shipping.store_pick_up</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[tags (seller) Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>seller.tags.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Tags (Seller.Tags)' datatype='string' name='[tags (seller.tags)]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller.tags.Value</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[tags (shipping) Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>shipping.tags.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Tags (Shipping.Tags)' datatype='string' name='[tags (shipping.tags)]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>shipping.tags.Value</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Tags (Tags)' datatype='string' name='[tags (tags)]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>tags.Value</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[tags Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>tags.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Thumbnail' datatype='string' name='[thumbnail]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>thumbnail</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>title</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Value Id' datatype='string' name='[value_id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>attributes.Value.value_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Value Name' datatype='string' name='[value_name]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>attributes.Value.value_name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Zip Code' datatype='string' name='[zip_code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>seller_address.zip_code</run>
          </formatted-text>
        </desc>
      </column>
      <column-instance column='[item_name]' derivation='None' name='[none:item_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[state_name]' derivation='None' name='[none:state_name:nk]' pivot='key' type='nominal' />
      <folder name='Address' role='dimensions'>
        <folder-item name='[city_id]' type='field' />
        <folder-item name='[city_name]' type='field' />
        <folder-item name='[state_id]' type='field' />
        <folder-item name='[state_name]' type='field' />
      </folder>
      <folder name='Attributes' role='dimensions'>
        <folder-item name='[attribute_group_id]' type='field' />
        <folder-item name='[attribute_group_name]' type='field' />
        <folder-item name='[attributes Index (generated)]' type='field' />
        <folder-item name='[id (attributes)]' type='field' />
        <folder-item name='[name (attributes)]' type='field' />
        <folder-item name='[value_id]' type='field' />
        <folder-item name='[value_name]' type='field' />
      </folder>
      <folder name='City' role='dimensions'>
        <folder-item name='[id (seller_address.city)]' type='field' />
        <folder-item name='[name (seller_address.city)]' type='field' />
      </folder>
      <folder name='Country' role='dimensions'>
        <folder-item name='[id (seller_address.country)]' type='field' />
        <folder-item name='[name (seller_address.country)]' type='field' />
      </folder>
      <folder name='Differential Pricing' role='dimensions'>
        <folder-item name='[id (differential_pricing)]' type='field' />
      </folder>
      <folder name='Installments' role='dimensions'>
        <folder-item name='[currency_id (installments)]' type='field' />
      </folder>
      <folder name='Phones-Data' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[accepts_mercadopago]' type='field' />
        <folder-item name='[buying_mode]' type='field' />
        <folder-item name='[catalog_product_id]' type='field' />
        <folder-item name='[category_id]' type='field' />
        <folder-item name='[condition]' type='field' />
        <folder-item name='[currency_id]' type='field' />
        <folder-item name='[id]' type='field' />
        <folder-item name='[item_name]' type='field' />
        <folder-item name='[listing_type_id]' type='field' />
        <folder-item name='[official_store_id]' type='field' />
        <folder-item name='[permalink]' type='field' />
        <folder-item name='[site_id]' type='field' />
        <folder-item name='[stop_time]' type='field' />
        <folder-item name='[tags (tags)]' type='field' />
        <folder-item name='[tags Index (generated)]' type='field' />
        <folder-item name='[thumbnail]' type='field' />
        <folder-item name='[title]' type='field' />
      </folder>
      <folder name='Seller' role='dimensions'>
        <folder-item name='[car_dealer]' type='field' />
        <folder-item name='[id (seller)]' type='field' />
        <folder-item name='[power_seller_status]' type='field' />
        <folder-item name='[real_estate_agency]' type='field' />
        <folder-item name='[tags (seller) Index (generated)]' type='field' />
        <folder-item name='[tags (seller.tags)]' type='field' />
      </folder>
      <folder name='Seller Address' role='dimensions'>
        <folder-item name='[address_line]' type='field' />
        <folder-item name='[comment]' type='field' />
        <folder-item name='[id (seller_address)]' type='field' />
        <folder-item name='[latitude]' type='field' />
        <folder-item name='[longitude]' type='field' />
        <folder-item name='[zip_code]' type='field' />
      </folder>
      <folder name='Shipping' role='dimensions'>
        <folder-item name='[free_shipping]' type='field' />
        <folder-item name='[logistic_type]' type='field' />
        <folder-item name='[mode]' type='field' />
        <folder-item name='[store_pick_up]' type='field' />
        <folder-item name='[tags (shipping) Index (generated)]' type='field' />
        <folder-item name='[tags (shipping.tags)]' type='field' />
      </folder>
      <folder name='State' role='dimensions'>
        <folder-item name='[id (seller_address.state)]' type='field' />
        <folder-item name='[name (seller_address.state)]' type='field' />
      </folder>
      <folder name='Source Measures' role='measures'>
        <folder-item name='[amount]' type='field' />
        <folder-item name='[available_quantity]' type='field' />
        <folder-item name='[price]' type='field' />
        <folder-item name='[quantity]' type='field' />
        <folder-item name='[rate]' type='field' />
        <folder-item name='[sold_quantity]' type='field' />
        <folder-item name='[source]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.548387' measure-ordering='alphabetic' measure-percentage='0.451613' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:state_name:nk]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#2f6891'>
              <bucket>&quot;Misiones&quot;</bucket>
            </map>
            <map to='#33789d'>
              <bucket>&quot;La Rioja&quot;</bucket>
            </map>
            <map to='#3586a7'>
              <bucket>&quot;Capital Federal&quot;</bucket>
            </map>
            <map to='#3589a9'>
              <bucket>&quot;La Pampa&quot;</bucket>
            </map>
            <map to='#3e99b4'>
              <bucket>&quot;Entre Ríos&quot;</bucket>
            </map>
            <map to='#53a9bd'>
              <bucket>&quot;Corrientes&quot;</bucket>
            </map>
            <map to='#6eb8c5'>
              <bucket>&quot;Córdoba&quot;</bucket>
            </map>
            <map to='#87c6cc'>
              <bucket>&quot;Chaco&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;Buenos Aires&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:item_name:nk]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;Samsung s8&quot;</bucket>
            </map>
            <map to='#3586a7'>
              <bucket>&quot;Moto X Style&quot;</bucket>
            </map>
            <map to='#72bac6'>
              <bucket>&quot;Iphone 7&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Argentina&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Boxplot de Precios por Celular'>
      <table>
        <view>
          <datasources>
            <datasource caption='phones-data' name='federated.1puq9ha0ngu50s10qovtk1ribbtf' />
          </datasources>
          <datasource-dependencies datasource='federated.1puq9ha0ngu50s10qovtk1ribbtf'>
            <column caption='random()' datatype='real' name='[Calculation_2721018610672181251]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='random()' />
            </column>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Condition' datatype='string' name='[condition]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>condition</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Item Name' datatype='string' name='[item_name]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>item_name</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[condition]' derivation='None' name='[none:condition:nk]' pivot='key' type='nominal' />
            <column-instance column='[item_name]' derivation='None' name='[none:item_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>price</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_2721018610672181251]' derivation='Sum' name='[sum:Calculation_2721018610672181251:qk]' pivot='key' type='quantitative' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>title</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:condition:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:condition:nk]' member='&quot;new&quot;' />
              <groupfilter function='member' level='[none:condition:nk]' member='&quot;used&quot;' />
            </groupfilter>
          </filter>
          <natural-sort column='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:condition:nk]' direction='DESC' />
          <manual-sort column='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:item_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Moto X Style&quot;</bucket>
              <bucket>&quot;Samsung s8&quot;</bucket>
              <bucket>&quot;Iphone 7&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:condition:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[avg:price:qk]' scope='rows' value='Precio' />
            <encoding attr='space' class='0' field='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[sum:Calculation_2721018610672181251:qk]' field-type='quantitative' range-type='independent' scope='cols' type='space' />
            <format attr='display' class='0' field='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[sum:Calculation_2721018610672181251:qk]' scope='cols' value='false' />
            <format attr='display' class='0' field='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[avg:price:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[avg:price:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='0' />
            <format attr='band-size' scope='rows' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:item_name:nk]' />
              <lod column='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:title:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[avg:price:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[avg:price:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
                <format attr='mark-transparency' value='190' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='266' />
                <format attr='maxwidth' value='266' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='706' />
                <format attr='maxheight' value='706' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[avg:price:qk]</rows>
        <cols>(([federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:item_name:nk] / [federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:condition:nk]) * [federated.1puq9ha0ngu50s10qovtk1ribbtf].[sum:Calculation_2721018610672181251:qk])</cols>
      </table>
      <simple-id uuid='{E36A0781-4907-4B43-84F7-DF73F98E63F2}' />
    </worksheet>
    <worksheet name='Cantidad de Ventas por Usuario por Celular'>
      <table>
        <view>
          <datasources>
            <datasource caption='users-data' name='federated.03mke2x1vquwse109aqu519k9402' />
          </datasources>
          <datasource-dependencies datasource='federated.03mke2x1vquwse109aqu519k9402'>
            <column caption='Index' datatype='integer' name='[Calculation_149744699647197188]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Id' datatype='real' name='[id]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>id</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>item</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Nickname' datatype='string' name='[nickname]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>nickname</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[item]' derivation='None' name='[none:item:nk]' pivot='key' type='nominal' />
            <column-instance column='[nickname]' derivation='None' name='[none:nickname:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_149744699647197188]' derivation='User' name='[usr:Calculation_149744699647197188:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[federated.03mke2x1vquwse109aqu519k9402].[none:item:nk]' />
                <order field='[federated.03mke2x1vquwse109aqu519k9402].[none:nickname:nk]' />
                <sort direction='DESC' using='[federated.03mke2x1vquwse109aqu519k9402].[cnt:id:qk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.03mke2x1vquwse109aqu519k9402].[usr:Calculation_149744699647197188:qk:1]' included-values='in-range'>
            <min>1</min>
            <max>12</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.03mke2x1vquwse109aqu519k9402].[none:nickname:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.03mke2x1vquwse109aqu519k9402].[cnt:id:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.03mke2x1vquwse109aqu519k9402].[usr:Calculation_149744699647197188:qk:1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.03mke2x1vquwse109aqu519k9402].[none:nickname:nk]' value='264' />
            <format attr='width' field='[federated.03mke2x1vquwse109aqu519k9402].[none:item:nk]' value='140' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.03mke2x1vquwse109aqu519k9402].[none:item:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Item:&#9;</run>
                <run bold='true'>&lt;[federated.03mke2x1vquwse109aqu519k9402].[none:item:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Nickname:&#9;</run>
                <run bold='true'>&lt;[federated.03mke2x1vquwse109aqu519k9402].[none:nickname:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count of Id:&#9;</run>
                <run bold='true'>&lt;[federated.03mke2x1vquwse109aqu519k9402].[cnt:id:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>([federated.03mke2x1vquwse109aqu519k9402].[none:item:nk] / [federated.03mke2x1vquwse109aqu519k9402].[none:nickname:nk])</rows>
        <cols>[federated.03mke2x1vquwse109aqu519k9402].[cnt:id:qk]</cols>
      </table>
      <simple-id uuid='{3C88B74C-7F9B-4409-92ED-9224B419749A}' />
    </worksheet>
    <worksheet name='Distribución Geográfica de Ventas'>
      <table>
        <view>
          <datasources>
            <datasource caption='phones-data' name='federated.1puq9ha0ngu50s10qovtk1ribbtf' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1puq9ha0ngu50s10qovtk1ribbtf'>
            <column-instance column='[id (attributes)]' derivation='Count' name='[cnt:id (attributes):qk]' pivot='key' type='quantitative' />
            <column caption='Id (Attributes)' datatype='string' name='[id (attributes)]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>attributes.Value.id</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[state_name]' derivation='None' name='[none:state_name:nk]' pivot='key' type='nominal' />
            <column caption='State Name' datatype='string' name='[state_name]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <desc>
                <formatted-text>
                  <run>address.state_name</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:state_name:nk]' />
              <size column='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[cnt:id (attributes):qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State:&#9;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Items:&#9;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='6.9928369522094727' />
                <format attr='mark-transparency' value='208' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[Latitude (generated)]</rows>
        <cols>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F4D179A7-9EB1-4003-994D-DB0E61E15E23}' />
    </worksheet>
    <worksheet name='Specs'>
      <table>
        <view>
          <datasources>
            <datasource caption='phones-specs' name='federated.0dy50zt01yfsqx1dyokur07pbr8b' />
          </datasources>
          <datasource-dependencies datasource='federated.0dy50zt01yfsqx1dyokur07pbr8b'>
            <column caption='Batería' datatype='string' name='[Battery]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Battery</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Camara' datatype='string' name='[Camera]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Camera</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Pantalla' datatype='string' name='[Display]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Display</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Nombre' datatype='string' name='[Name]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Name</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Procesador' datatype='string' name='[Processor]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Processor</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Almacenamiento' datatype='string' name='[Storage]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Storage</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Battery]' derivation='None' name='[none:Battery:nk]' pivot='key' type='nominal' />
            <column-instance column='[Camera]' derivation='None' name='[none:Camera:nk]' pivot='key' type='nominal' />
            <column-instance column='[Display]' derivation='None' name='[none:Display:nk]' pivot='key' type='nominal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Processor]' derivation='None' name='[none:Processor:nk]' pivot='key' type='nominal' />
            <column-instance column='[Storage]' derivation='None' name='[none:Storage:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='5' />
            <format attr='height' field='[federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Storage:nk]' value='117' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Battery:nk]' value='320' />
            <format attr='width' field='[federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Name:nk]' value='188' />
            <format attr='width' field='[federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Camera:nk]' value='244' />
            <format attr='width' field='[federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Display:nk]' value='280' />
            <format attr='width' field='[federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Storage:nk]' value='544' />
            <format attr='width' field='[federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Processor:nk]' value='556' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Camera:nk]' value='on' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Name:nk] / ([federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Battery:nk] / ([federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Camera:nk] / ([federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Display:nk] / ([federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Processor:nk] / [federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Storage:nk])))))</rows>
        <cols />
      </table>
      <simple-id uuid='{0E758C08-B032-4308-99C6-E57F99F5DEF3}' />
    </worksheet>
    <worksheet name='Users Negativos por Cantidad de Ventas'>
      <table>
        <view>
          <datasources>
            <datasource caption='users-data' name='federated.03mke2x1vquwse109aqu519k9402' />
          </datasources>
          <datasource-dependencies datasource='federated.03mke2x1vquwse109aqu519k9402'>
            <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>Document Index (generated)</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' is-auto-gen-lod-field='true' name='[Negative per ratings]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([negative]) }' />
              <desc>
                <formatted-text>
                  <run>A calculated measure that is at ratings level of detail</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Negative per ratings]' derivation='Avg' name='[avg:Negative per ratings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nickname]' derivation='Count' name='[cnt:nickname:qk]' pivot='key' type='quantitative' />
            <column caption='Negative' datatype='real' name='[negative]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>seller_reputation.transactions.ratings.negative</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Nickname' datatype='string' name='[nickname]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>nickname</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[nickname]' derivation='None' name='[none:nickname:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.03mke2x1vquwse109aqu519k9402].[avg:Negative per ratings:qk]' />
              <size column='[federated.03mke2x1vquwse109aqu519k9402].[cnt:nickname:qk]' />
              <text column='[federated.03mke2x1vquwse109aqu519k9402].[none:nickname:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Nickname:&#9;</run>
                <run bold='true'>&lt;[federated.03mke2x1vquwse109aqu519k9402].[none:nickname:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Rating Negativo:&#9;</run>
                <run bold='true'>&lt;[federated.03mke2x1vquwse109aqu519k9402].[avg:Negative per ratings:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Ventas:&#9;</run>
                <run bold='true'>&lt;[federated.03mke2x1vquwse109aqu519k9402].[cnt:nickname:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4E73CDA8-E4B9-4BBE-B8E8-5D8CC0C4CC1D}' />
    </worksheet>
    <worksheet name='Ventas Canceladas por Cantidad de Ventas Totales'>
      <table>
        <view>
          <datasources>
            <datasource caption='users-data' name='federated.03mke2x1vquwse109aqu519k9402' />
          </datasources>
          <datasource-dependencies datasource='federated.03mke2x1vquwse109aqu519k9402'>
            <column caption='% Canceled' datatype='real' name='[Calculation_2721018610750398481]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Canceled per transactions]/([Canceled per transactions]+[Completed per transactions])' />
            </column>
            <column datatype='real' is-auto-gen-lod-field='true' name='[Canceled per transactions]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([canceled]) }' />
              <desc>
                <formatted-text>
                  <run>A calculated measure that is at transactions level of detail</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' is-auto-gen-lod-field='true' name='[Completed per transactions]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([completed]) }' />
              <desc>
                <formatted-text>
                  <run>A calculated measure that is at transactions level of detail</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>Document Index (generated)</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_2721018610750398481]' derivation='Avg' name='[avg:Calculation_2721018610750398481:qk]' pivot='key' type='quantitative' />
            <column caption='Canceled' datatype='real' name='[canceled]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>seller_reputation.transactions.canceled</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[nickname]' derivation='Count' name='[cnt:nickname:qk]' pivot='key' type='quantitative' />
            <column caption='Completed' datatype='real' name='[completed]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>seller_reputation.transactions.completed</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Nickname' datatype='string' name='[nickname]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>nickname</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[nickname]' derivation='None' name='[none:nickname:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.03mke2x1vquwse109aqu519k9402].[avg:Calculation_2721018610750398481:qk]' num-steps='15' type='interpolated' />
            <encoding attr='size-bar' field='[federated.03mke2x1vquwse109aqu519k9402].[cnt:nickname:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.03mke2x1vquwse109aqu519k9402].[avg:Calculation_2721018610750398481:qk]' />
              <size column='[federated.03mke2x1vquwse109aqu519k9402].[cnt:nickname:qk]' />
              <text column='[federated.03mke2x1vquwse109aqu519k9402].[none:nickname:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Nickname:&#9;</run>
                <run bold='true'>&lt;[federated.03mke2x1vquwse109aqu519k9402].[none:nickname:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Cancelado:&#9;</run>
                <run bold='true'>&lt;[federated.03mke2x1vquwse109aqu519k9402].[avg:Calculation_2721018610750398481:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Ventas:&#9;</run>
                <run bold='true'>&lt;[federated.03mke2x1vquwse109aqu519k9402].[cnt:nickname:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{6024F418-3542-4D41-AEEC-6BA7B1595538}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Análisis de Teléfonos'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='49000' id='3' name='Specs' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='9' name='Distribución Geográfica de Ventas' w='49200' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='12' name='Boxplot de Precios por Celular' w='49200' x='50000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout active='true' name='Desktop'>
          <size maxheight='984' minheight='984' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
              <zone fixed-size='162' h='7764' id='34' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/Santi/Desktop/desafio-mercado-libre-git/venv/MeLi.jpg' type='bitmap' w='10253' x='417' y='813'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='347' h='23392' id='3' is-fixed='true' name='Specs' w='99166' x='417' y='8577'>
                <layout-cache type-h='cell' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='292' h='7764' id='27' is-fixed='true' type='title' w='88913' x='10670' y='813'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='67218' id='9' name='Distribución Geográfica de Ventas' w='39733' x='417' y='31969'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='67218' id='12' name='Boxplot de Precios por Celular' w='59433' x='40150' y='31969'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='51' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='52' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Specs' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='Distribución Geográfica de Ventas' w='49200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='12' is-fixed='true' name='Boxplot de Precios por Celular' w='49200' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{85DC6C5E-48F8-41C8-840C-A278B99EFCEA}' />
    </dashboard>
    <dashboard name='Comportamiento de Usuarios'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='98000' id='3' name='Users Negativos por Cantidad de Ventas' w='49200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='9' name='Ventas Canceladas por Cantidad de Ventas Totales' w='49200' x='50000' y='50000'>
                <layout-cache fixed-size-w='152' type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='11' name='Cantidad de Ventas por Usuario por Celular' w='49200' x='50000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout active='true' name='Desktop'>
          <size maxheight='1038' minheight='1038' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='90688' id='25' param='vert' type='layout-flow' w='98916' x='542' y='8541'>
                <zone h='90688' id='7' param='horz' type='layout-flow' w='98916' x='542' y='8541'>
                  <zone h='90688' id='5' type='layout-basic' w='98916' x='542' y='8541'>
                    <zone h='90688' id='3' name='Users Negativos por Cantidad de Ventas' w='49457' x='542' y='8541'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='53669' id='9' name='Ventas Canceladas por Cantidad de Ventas Totales' w='49459' x='49999' y='45560'>
                      <layout-cache fixed-size-w='152' type-h='fixed' type-w='fixed' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='37019' id='11' name='Cantidad de Ventas por Usuario por Celular' w='49459' x='49999' y='8541'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone h='7770' id='27' is-centered='0' is-scaled='1' param='C:/Users/Santi/Desktop/desafio-mercado-libre-git/venv/MeLi.jpg' type='bitmap' w='9920' x='542' y='771'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7770' id='26' type='title' w='88996' x='10462' y='771'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='44' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='45' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Users Negativos por Cantidad de Ventas' w='49200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='11' is-fixed='true' name='Cantidad de Ventas por Usuario por Celular' w='49200' x='50000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='Ventas Canceladas por Cantidad de Ventas Totales' w='49200' x='50000' y='50000'>
                  <layout-cache fixed-size-w='152' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CB49FDBD-3CB0-4BF2-8CDD-0DDD36537CC6}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='106'>
    <window class='worksheet' name='Specs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='40'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Camera:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Battery:nk]</field>
            <field>[federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Camera:nk]</field>
            <field>[federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Display:nk]</field>
            <field>[federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Name:nk]</field>
            <field>[federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Processor:nk]</field>
            <field>[federated.0dy50zt01yfsqx1dyokur07pbr8b].[none:Storage:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DD7E841D-F156-4248-AFB5-FDA0248AF678}' />
    </window>
    <window class='worksheet' name='Distribución Geográfica de Ventas'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[cnt:id (attributes):qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:state_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:Item:nk]</field>
            <field>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:State:nk]</field>
            <field>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:id (attributes):nk]</field>
            <field>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:id (seller_address.state):nk]</field>
            <field>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:name (seller_address.state):nk]</field>
            <field>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:state_name:nk]</field>
            <field>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:zip_code:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0DFB82F1-25BB-4FA7-A432-CDDE03CDA546}' />
    </window>
    <window class='worksheet' name='Boxplot de Precios por Celular'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:item_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[avg:price:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:F1:ok]</field>
            <field>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:Item:nk]</field>
            <field>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:condition:nk]</field>
            <field>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:item_name:nk]</field>
            <field>[federated.1puq9ha0ngu50s10qovtk1ribbtf].[none:title:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{AAAE93E6-F69F-430D-BE17-799A0F5DCCB3}' />
    </window>
    <window class='worksheet' name='Cantidad de Ventas por Usuario por Celular'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.03mke2x1vquwse109aqu519k9402].[none:item:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[none:F1:ok]</field>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[none:id:ok]</field>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[none:item:nk]</field>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[none:items:nk]</field>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[none:nickname:nk]</field>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[none:usuarios:ok]</field>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[sum:F1:ok]</field>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[usr:Calculation_149744699647197188:ok:7]</field>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[usr:Calculation_149744699647197188:ok]</field>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[usr:Calculation_2721018610733031429:ok:7]</field>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[usr:Calculation_2721018610733031429:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{223AC7E3-D5D0-428C-8D6B-F2BE418870A6}' />
    </window>
    <window class='worksheet' name='Users Negativos por Cantidad de Ventas'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.03mke2x1vquwse109aqu519k9402].[avg:Negative per ratings:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[avg:Negative Rating:qk]</field>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[avg:Negative per ratings:qk]</field>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[none:id:ok]</field>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[none:nickname:nk]</field>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[sum:count:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{533B1D7C-AA23-48B8-8CE9-7B4832808E3D}' />
    </window>
    <window class='worksheet' name='Ventas Canceladas por Cantidad de Ventas Totales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.03mke2x1vquwse109aqu519k9402].[avg:Calculation_2721018610750398481:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[avg:Calculation_2721018610750398481:qk]</field>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[none:nickname:nk]</field>
            <field>[federated.03mke2x1vquwse109aqu519k9402].[sum:count:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7086ACAF-E9AF-4828-9229-DCA7EE5B020B}' />
    </window>
    <window class='dashboard' name='Comportamiento de Usuarios'>
      <viewpoints>
        <viewpoint name='Cantidad de Ventas por Usuario por Celular'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Users Negativos por Cantidad de Ventas' />
        <viewpoint name='Ventas Canceladas por Cantidad de Ventas Totales' />
      </viewpoints>
      <active id='11' />
      <simple-id uuid='{5FE3C1A4-6412-4D9D-99C9-8736F57C9AF1}' />
    </window>
    <window class='dashboard' maximized='true' name='Análisis de Teléfonos'>
      <viewpoints>
        <viewpoint name='Boxplot de Precios por Celular'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Distribución Geográfica de Ventas'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Specs'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='12' />
      <simple-id uuid='{167F33E2-8A95-4EC9-B4A1-54883D54A203}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Análisis de Teléfonos' width='192'>
      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
      gbJ2Twv/B5fY9yVLnN9OAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Boxplot de Precios por Celular' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Cantidad de Ventas por Usuario por Celular' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9d3NcR5bo+bu3vDeogveOMCRBEvRWJCWKFKUeqbvVo3lvzM7O24iNjdjv
      MH/uB9iNePPMzNuZndfyhqIkUpRI0XsCBAgQAOE9CigA5e29uX9UEYYERXa3qJbE+kUwgriV
      NzNv3nvSnDx5jiSEEOTI8YIi/7krkCPHn5OcAOR4ockJQI4XmpwA5HihyQlAjheanADkeKHJ
      CUCOF5qcAOR4ockJQI4XmpwA5HihyQlAjheanADkeKHJCUCOF5qcAOR4ockJQI4XGu2jF0Kh
      EAsLC3+OuuTI8aMj5Q7E5HiReWwEyPFDE6f9m3PMueo4uKUGjSSRivu52TbK9h0b6Lt1BVPV
      Vqq8ZgBiCxPcHlhkz9ZmhJJkrKeNO/dHSMtGmlr30FCRhyabczoeoOvOLXrHZtEYXbRs206R
      Jc6lb8+zkIRkIo5GZ0Cj1bL5wBvU5+sJzAxx8+Zd/NE0hVXraW2px2bQAgHOfnCaGUVFQsZR
      XM2urS04zDqIjvHBh+dR9cufy46jf0mVU/rxm/OHRvwgpMRET5fwJ36Y3H5ZhMR3//aR+PfP
      PhaTkZQQQoh4aFS8+94XIpkWYqb3mnjv9A2hCiGESIuOc5+IK70+IYQQfVe/EB+euiIWYymR
      jgfF8NCESK7I+cbX74kL7UMipagiMj8h2tvvi2hq+fevP/4XMbzipYSn7ot33/1YDM6EhKok
      RNfFk+L9r2+JzC0z4qvffyeCQghVSYuRO6fE/zxxXUQVIdTFe+Kjr7rEiqx/MTzTCHDl1O/x
      bvk1dfmGJ6RQme7vw1HShFv/A0rnYwQ5/+kZpuKp7N8pRqdj/OXf/C0VecbnWfCfhKQ1sXtb
      ITeu9XDspfWrfvNWN1PS8xVdvg1Ui0EGwvm8UuuB9BydAwn2v7Udh1ED2KiotK26NxCKUr7R
      i1aW0LqK2egs+t56PLjfR83WvVTmW5GAxt0H8X92gkF/C/V5K+orayjbtAP3g4uEU/DTbdk/
      nWcSACWVQs0uFQKLflAVFgIRtBYnxV4nsgQgUJJhxkdmSctGCgoLMOlkECrB+Vn8wSh6i4si
      rwNZkogH50hpLYT9PuKqBm9hIVaDFoRKaN7HXDCGxZmP12lGkh4OtXYOvPmb7P8F0cm7nLwT
      x+t8kmD+dDAVrsfbcYpxfxUlpuXrktbCxu2NfH3jNiGDn9qWfVhkCebGCVnLsJs0T8yzsaGe
      S2e/wt/YRFVZGflua/ZdrI0/uEiVw8bDJJJsxuPR4fMHVwmAECqB8WGixjxMOiAOofkphgaN
      2emXhsLycszan/8U6A9eA1z76vfE3RsocOiYGb3CzLbjbKk0k04scvncBeqL3cQDPobnNvDS
      5irmhtu5eHeKwkI3i9O3mGg+yNZaD6O3v+TctIemcjdq3E/3WIDje5vxj3Zy4dYoBSV5zN1q
      o/nwMardJh5taqEq3L3VQ13rMcyan8GLkHRsaCjlu+5B8rc4V/6A1VtPofifDCYb+E1x9jdV
      RcjyY8+9kpKmXRwvnKa/f4DLZ+6Q17CPvS3laKW17xJCrOhMsqXLMqqa6dzmJ+7xye8nEIkU
      Nm8JW/fsxiqDABKRIHNzc1kB0JFXVv5HNsRPiz9YAPSuYjbv3k2+TYfYVMGnJ2+zrmwfWoOT
      ffuPUWuTSPiH+bJ9Cqiks6OXzfvfotJtBGWRzz48y0Lpm8haPdteOsqWIhkRnuHd8/cBQefd
      Ltbve5O6fDPJyjY+vfGA8qMb0T1Sj3RonKGkm7cK7D9IQ/wY2CrWU/LgFH3TdauuSxo91cUu
      FjVVGB8Ks7sQc+A2keRm9IYniYGE1V3Epu1FbGpt4dP3PsNX/Q7F9rVfq9NqZzEUgbzsiCkS
      LPjjeOrtwALukvXs+vVWur8+QbiklmLX8lDlKVvHtu1NvzityZ+0ESYZi7Eb5kimAKSl3kWS
      JJAkIEI8acJhyTa4xoHVkiQaS2bTyUvppWz6+ZlFRno7uX79Om3DPuLT08SURwpWk9y7cp2q
      bbuWP5ifBTrq1tcz2HmP9NOS6gtZV5Tk6u0uYikFNRXFN+1fcV+Cga5uZoMxVCGILs6h6O0Y
      dE9+pbXrauhvu8nUYgyhphi+e40xbSU1nuXuRdab2XH0LSwTVzl7s5eE8svWkv9JAq0mZ4ml
      3egf7Z6XMKLTJYgnFTBoQU2QSErodVoST0hvdRhwuPLIM8uAl5JKB+ZHvvHo/AQ9YTtvldt4
      wmj/E0LG5nYsjWBWbyV1zi7uxpyr6q4zO3FodKvua97zCnL7TU5+cg8hG6hsaMVV+HCyrkUv
      R7h+9isi8SQ6i5tNew/gMi4LgN3lQb+ig3CUNLI7pnDz25NE0yp2TwUH9m4iM8BocbhtyEjI
      WgM7Xn6Dmxe+o3PYTWuBicDweT54t2NpSvZLUYP+wQKgJKIsBIKYVbh3+Tuc6w9jfmIuWsoL
      7dy+3cm+1hqm719CzWvBZdESekL6ysoShgMx6iurSQUmGZqcx1uYt1xRoTJ0v4PCddsw/iza
      38zmI7uX/pI0BloO/ZqWR1J5Gg+w95FrWqOdDTsPs2HnWvlqKGvcRlnjtieWvOOl11f9Lck6
      Suo3U1K/eY3UbnYdcT9MicZgZecrD+/P5+//9+onlvNzRvOP//iP//i0RAKBM68Qs15moPs6
      074Aw6NTeJt2sbXagyyBEBI2jxeTBhAgaQ14XQ7ySqowRCe41d5F2tnAS9vr0MsSAoHJUYDt
      4XRU1lKQ5yKvqAwWR7l99x4zYQ3NGxux6VdoQkSMhUWJuqYajE9WkOTI8Uz8waYQ5059TPOe
      N8i3PXHekyPHz4Y/eApkszvR/qwWnn9+VCXFwtwskUQag9lOntuBVpYyex4LcyyEExhtLrxO
      C5IkIYQgFprHvxhBb3HgcTvQSKCmkywuzBOJJUGjI8/jxWTQPq4iFoJowM98MIqkNeD25GHW
      S8xPTxFKZDQKGp2RPI8Hk16DEGlmJybQOgtxW5f3VNKJCL65BWzuQmymX5r+J8MzTYFWUlxW
      ldngyvFMqIkQty6e48F0gEQsxGB3B7Oqg4p8O/7Ru3x76R4pJUb37ZvIBXV4rFoS8wOcOHWN
      tEjT39lOyOClxG1hou8mt7vHSSRi+KcGaOudobSiDKN2xfsQKoujHXx+rg0VlUXfNP60nlKP
      lrMffsaCbCARCeEb7eXeUJCyyhJ0BPniX/+ZvnAejbUFPOzfxruvc+LLU6TcDVR5LX+eBnzO
      /DLF+ieEKmQqN+9hu8sBQGx2kA+v9LBvfTF3bnSw8aXfUOe1oCzc571vblHx1jbuXbpB7YG3
      2FJsIjk/woff3mFT7VFK1u2gpEFa6vGvfvUBo3MhnKXLG2upyBzfXO7lyK9/h3eVliCMyVlI
      y47d2W0AlTMf/yuzgS1UOMFetgE5OYgv3ESJTQukGZ+cpaam4kdqqT8Pua78OaM1WsjPfvxC
      TTI82I/TVQgsEEnY8dgzVqAaZzV2MUp4Mch4xEp1UWb3W+9w4U2E8aWy+yVkpkJTgx3MJG0U
      Oa2rygvMjqLzrnvk41+NUNP4RjuJyMU4LA/7QAMlJS6mJucAUIKjzKaLKXq+xl1/dnIjwI+B
      ECSji9y+fI4pUcSh/Q2Aj1RKh/zQeEcyIMtJ0skkcUlC9/CyRoNRThKLAzoYvH2Gaz3TqBoL
      LTv24rKsVoWlIjG05oI1qxGcfsDnH76LQVLQGB00bdmJwyCDmvm9uKSIK71TKPUFTA2M4Klv
      xuSffj5t8hMhJwDPHUE8OMGXn50lf/M+jjdVYNDIgB6tVkGoApBAJBFCh0anxwCkH15WVJKq
      DkN2bVrd+gqVm1IszIxw5doVjNaXqfMujwJaswF1Jr5mTeyFdew7dhy3XiHoG+PC9as4nUco
      zhqZGvOKcUUuMBPbyNBshLoaByH/82ybPz+5KdBzRqRCXDp9nqrDb7FnfVX24wfIw2YJ4A/F
      AFCCgwSpwOZ2UG6OMDQTRwDJ4AKzRjsFelDVTFcta3TkFdeyrtDA1HRgVXkOTymRyfvMJ56s
      3ZYkDY6CSrz6OHPB2PIPGitV1VYGersJJhw4LT99K9s/ldwI8JyJzs8wFEri8vXT7stc09oL
      2FBTTEtLExcvfcd8qYepgUFa9r+BSaOnefdmPj97ilR1Kf6JUapbdmMA2i+eZBYPeTYTajrC
      mE9i13ov6cQc/+NfT/GXf/0OVlsBh3dU8PUXX1FdXgDJGLjK2d7oJh6cpaujDZtWkAjNMhx3
      csRrB5aFyFVYzfT77+E9+J8wvAAbjbkzwc+ZdCLCxPg48RXWbxpLHrWlnozK0jeJLxDF7Cqg
      2GNHliSEUAnPzzA9F8Jgz6O4MA+tBKl4GN/MLJF4EklroKCoGJtZj1CTTEzMUlRchFYjI4RK
      yD/NjD+EpDPhLSzEYdYwPTJEIL68D5BfVIzdpEOIFPNzIZweN7KaYmZyCltRORYtRAOzJLQO
      XJZf5mI4JwA5Xmhya4AcLzQ5AcjxQpNbBP8IqOkEk4PdtN3rJ5IS2LxlbNu6Ba/dkNnYSsW4
      cuYjwu5dvLKjZskU4c6379Ifq+D113ZhznZV6fAcZ059AcW7OLK7nvDMfU59eRNhyszRNSY7
      uw68TIkdBu/dpqNvjIQqUVixnm1bynhw8SI9vgDJWJCUbMFi0JBXu5VXttYC4B+4zmfnp3nz
      7/4CtwZSsSBXzn7JVAhi4SCywYpBJ1O34ygb3VHOdfk4snsTAMmIn87btxmYmkfW22naspX6
      ssyh/dHOC9zoT3HotYO4DTKQoO3CRYq2vEyh9ZEGUxY4+e+f4dpxjD3rHu5pJLj55Ql6FxW0
      MhhsXlq2bqWqwIEEpGIB+rs7uD84SUpoKKxqonVjfeac+feQE4DnjVCZuHeRyxMmjh17C5sB
      FqfHCERieO0ZNWMyOkOAAlKjnQQ2VeHOHmqJqjLG2Djj80nqPZkPfHF2jKSsIzYbQgCpeIL8
      dbs4uHvlMUuBv+8i7dNWXn3jN5jkJMP3B4mrBjYdOsYmBINXPmbYcZBDze4VtyUY6Z+kojBN
      x3CYAzVWdCY7B46/A8CV0+9jbzrK+rLMMdTE7BxTs1kvgiJF24VvCHlaefO3r5AOTPDtt+dA
      /xpNRTaiC0l0ukXuP5hi9/oSJBTmfdM4HzsaJ4iMdpH2ljPZP0SiviB7YEclmTZw6K1fUWxS
      WRjr5NQ3F3D89g3y9Ao3z35FPH8Tx97cg0FOMTY4QjyVfqoA5KZAzxklMsOV+1GOHt2Dw6RF
      lrW4i6uoKnJmbXoEcw+6cDTspNyjZWpupV5fR2llCZPDYw9zY3J4hOKqqqeWGw0sYHB5Mes1
      aHQmajY2k2f4fhP21OIkY1Ix+/ZvZa7zLgn12Z8z7e9nKFXO3q216DUSZncpu1tr6et+sJSm
      omEDi4OdBFLfk5Ga4t79BTbt3U6ZNMno/FqJZVxl66l2h1iICFIzHQykq9m9tQGTTkbWGKio
      q8djfbpDl5wAPGdi4TCq3Y5DA0osQO/9e3R0djE5H0EAIhWgZ0JLU7mV6soChsd8rFTLuQtK
      CM5OkALU6AzjYTeVBSv8qqAwNz5AR0cHHR0ddPU8IJyE4vU7kYYu8fnpc3T2DhNLP13ZNzM5
      jbe4CJ2lDIdmhkAk+czPGZjzYchzrzqlZ7G5CIYXl/7WmDxsrbNyq2OEJ+keU4kws8JIkclC
      aUUBk6MTjycSKoGZB0xH3LgsMD89haOkBIMEicWpTFt09RGIfZ+kZcgJwHNmlUmaJKGRZeKT
      97jUNY0AIv4ZFmQNKb+PuM5EZHCAhdTy16Gz5VGuCTAcUPCPj2MuL8f2yFuTZBmNRpP9JyMh
      oTEVcPTNX7GlvojQ+D0+/vxbFmLfdxRfYWxsDK0MPt8cVjnN4EzwD3rSx79p8WgDkFfVTHzs
      HsHU2sNLdHaAGDbm53wosoHxsWEe+kSILo7z1Ue/57//l//CqRtjrN+zC7dBWhpJs42BRqNh
      oO0ag3Php9Y6twZ4zhitVuRAgIAicBjt1K5rIiB8DM8CCGanR1CTCt3d3QDodPOMTIZxV2QN
      dCQ91Q1ertyfwJuap6y+CcTiihI05BVX0dy8eg0gBMg6M2XVDZRW1WM98y5dkxH21jjWrKeI
      TTHqgzzDAN0zgFZmuneU1hoP+mc4/+TI85DonScuBEZJAgTh0AIOq2tVOq3Rwc5aE1fvTaN5
      VGJEitHuEWRdHj33u4E08uwME1FBuRnMzlKOvfwasY7T3Am6KPRknHy5CosIXJ8gsaUEo6OA
      ZkcB0fHep1ea3Ajw3NFYC9jRoOfk55cIxFKoappQKJL5UY0yOhJn/2tHOXjwIAcPHmTftmYm
      hwdX5WEuaELMXmFiTkd+3qMqk7UQzAx20zfiI6WoKMkw0wHIszypvxNM9/ZSsO0AL2frcfDV
      1ylMDTIdfKoDFwC03jpqDKNcuNFPUhFE/GNcuTVAfVPdIyllPOv3ohu9xnRw9RQrHZ6lX/Hy
      qyPZOhx8hcM7C7nXPbk8ukhaanYep9U1x+enLhKIq+gKN1BBLxdv9BBLqahKgnB4bYPAx+r9
      TKly/AnIlG88yF5jJ9+d/ISEkLB5SnhpaykiPAuFdats953eUkwTI6QBl6cAg1ZGozdTkWdl
      wbEBqxZSBhtFBSoSoDMZmO27yrujt4FlNWiex8PQ7dt0XA+B1kjNppeoyzcvlWN2FpBnySyK
      hRAsJkzUVa8cHYxUVpUQjUTAkbnu9BRiNi5/MrLeTEnBQy2Sjk37j9B15zaffngb2eBg/a7D
      1OVnTpJZ3HkoxoeLcD0bNzTibxtl5UnLWDRGcVnZKidojooGrO3zKKoHV34+hmyXXbXlMHRe
      5U7XMC+1VrPryK+4f7eNLz7uQJW1FFRuoi5/tS/VtciZQuR4oclNgXK80OQEIMcLTW4N8NxJ
      Mzc2hi+0fPDE6CykuthNaMGPbHZgWbFbGQ/OMjI+u6T60+hNlFVUYdZlzvLOz0wyuxhBY7BS
      UppPcGKM+djqxaTZXUylR8/gwChxRQVJxuYuoNjrRCNnNDRqKs7E+DjheBqTw0tZkSdjgqGm
      mZ0aI6H3UOyxZZ2exZmZDOMt9iApSab9ixTlezP+XIUgFvIzNjmLKuvxFBbjsS/vUwg1jX96
      jNnFGFqjlcLiImxSlPuDk6yefespri7HadSRjocZHZskkQa7p4hirz1rMhJnfGyEcFwBScbq
      9FJc4EYrSyiJECOjE8SX1Ks6iirLcZlXH+oRapqJwT4M+bV47frcCPD8idP53Q3mUilS2X/p
      7Mmugc7bjM9HVqWeHe2ic8C3nDadzm4aqQy2nee7Gz1Ek0kCMwP0T4ZQFIVUKsnY3XO0DQdJ
      pVIoqgrxKS5f6yWWSpGKR7l74QtuDvgzm29KgqunT9Ax7CMRj9J38ywX2odJqwLUODcvXOHC
      lcuEkg/FcJbvTt8irkAqssi3F65krwtCvgec/OIs89EEsdAcXX2jyw8jFMY7r3CxY4REMol/
      vI/zt3pAqKRTKVKxBa6cvphtmzSqgFR0nm9PnmTQFyQeXeTOhVPcejCLKgTp8CyXb3dm2iYR
      4f61c1zuyuySJ/3DXOkcXGq3h/k9SjoyxuUz33L29iCKyI0APwoanZ11LS2sfVT9EWQdxVVV
      tKwvXnVZBEe4+iDJ8TeP4FrlE9JDCSqWYC+G/CZa1mXdxYcXsHrK2NDSgh5YX2Plo1P32VC3
      D2XkJuOG9fzmQBNaWUJsbOTz9z5jpraIEhNIejeNBXBv1M+euvwn1zUd5tbFdhoPv05zvvnx
      WAapRe62z7Hzr39NUbbKqqqCLLNhowuSfkY6fSvaRmXkxmXUqv28sqUEWYL16yp4//PLNFf+
      Ci1gdBXT0pLxrNpQ7uX9872wIROrwF5YSUtL0/c0rmC2t4uiV35LpP068/H63Ajw80Aw0XMX
      T9NWnH+sQ1RJQpJlJJFk4N4w6zY1ZadDgGyivtjIyEx0KXnNlm2E79/BF33UN/0yMf8Uk8YC
      mrxrfPwAOiulBSmunG8jEE0hAFn+nk9OCfPgQZLm9cVLkW60ZjeVuiRj0cfNGiQJNLK8xg70
      2ohkkI4xLS3VhZQVmZiYXsiNAD8GydgEX7z7Lg+18MXNu9m/4QkRVtJR2i5+xei9jP7c7Czl
      wOHdxGIxTK7HI+V8H5GFaXp7etAoScYfPKB22yFMkkI0IpFnWHawJUlgMAji8RXmCXo3DRUW
      7veN4m1Z+zNJpVJoddonh2WSDKw/cBTdvXZOffYBRlcZW3dsocT1BC9zSppYSsawIiCIJEsY
      dSqxuAA9JAIz9PT0IJQUk6PD1KxrXXqOic6LvDvakflD52Tvof2Uupb3PiKLcwiXB7ssUVaS
      z6WJ6ZwA/BjoTSUcf+fYs02BtGY2HzjG7lVTIEHUaiUSDiOwPrMQqOkkIf8EN691cfB3f8P6
      UicSaWx2CEcVhF2DBAgB0RhYCleOLhKl9Q08+KaN2YZ1az+XwYCSSJIW8KRwYVqTg+ZtB2jc
      nGDs/i3Onr3G2785vHbgPa0eq0EhGhU8DAohVEEkKVNskkABVUkTC/u4fKGdra+9zdZ1y4EB
      Szbs41e7nzQFEswNd9HbNUtguh+RiuKL2HJToJ8HEgV1zcx13WD+ew3aVmPzlrN1zyH+9u2X
      aPvuLL5ICtBRtb6aB233MoteADVK31SCcq951f0ak5f19Rba2obWzN/oKqQwMcm9qfDa0xBV
      JaVkplCy1kB5bR3mWJToWmkBZAu19Sa6OseWFrCpyByjaSPFpsz+sMldwuat+/nr3x1g+M51
      xhdiT8rtkbpEGJvW8Jf/8A+88847/NXf/D1HN+hzI8CPQTo5z+2LF3m4MW8trGFzXTGkw3Td
      voHPYQT0NG7dCkqCwe47KAsDAOhMNpo2bMJuq+Lgpkm+++or8jwOSISwVu9ma43rieVmkHCW
      beDNgzJffPo5O48dpapsG/V9n3Hiy2m8Nj3+6SkKWg+Rb9GBslql6q3cgNr1PwlQ+XjWWgs7
      X97D119/iT+/EJ2UIqIr4NiebCjYZJDL588TwYbdrCMa8ONu3siTayxRvP4Ag6dO8vnX/TgN
      KjPTfjbtPYpJK7FyFeAs2chrh4yc/OIzlKNvUATMj3RzUXnoyctIbct6irIq2ej0MD5rMXsM
      y2Xll1fmTCGePwpBv5/gCl29zuKkwGUlFppnPhDN9p4a3AUFaNNh5vzBh94KkbV68jz5GLQg
      hEJ4cYFgNI6sNeJyuzDqMhFJEpEAKa0N60NnPkqCQETFZjdlh3lBaN4PZgc2oxY1nWJh3k88
      paIz2fG4Mjp/hEIwGMXisGUiQmZdtYfSejwuG6hpAqEITod9aR8gGQvhXwiiylqsdtdyTDgE
      6WSMhflFEmmB3mTB5XSge3jmU00TXIxgWhFCCgRKKo7fv0BKAZPNicueWWQLJUkwmsJhy64h
      hEoksICit2PVKczO+UktxTTT4PR6sGYPAaUTEaJpDXbL8uRLSSdyApDjxSa3BsjxQpMTgBwv
      NLlF8I+Akopw//Z1ekYz9jKFdZvY31KFkoxwv+0GPSM+FCHhrWxm+6Z1GU8Gc/f5v9+7xq7X
      36C1wrOU19jd03x2fpI3/tPfU2EOcvb3J5mUZLRCQmd1sHHrLmqLbDy4/C3pmt00FWbny9Fx
      Tp+fYt+xbegDD/jnf/6Gzb/5K7aVLwfXGLp7hm+ujXL4d/9AdXalGp7t47MPvmHjb/83NuQ/
      nKmH+eyf/42wyYVGktBZ8ti1by9FTuMftE/xUyAnAM8boTDcdoHecAHH3jqAkSS+rOpu+O4l
      hmNeXv3VPiyaJHfOn+ZKp4mXt1Yjp6JY8/MYH5pkU/lDQ7UIQ8PzuIxaMqG+FISUz2vvvIxb
      qCyM3uX0+Wvkv/0yseAiqZXnbtUkC/PhjJGdksBVWMBo3ygtZc7MkUeRYGzcj91INm8AgW94
      gPKN9fR0DNB4uCGr71fROyp58y+OYZbT+Edu8fU3N3jzzf3fEzL3p0luCvScUSI+bg2meeXQ
      Fiy6jIuSonw3kKR3xE/rlo3YjFpknZnWvTuJPuhlIavqNxZUkRcaZjqW0VPEfSP4reUUW9cw
      h5BkXBV1FOuiBNeOQr4KnaeGvOQws+FMYen5QeY0lRTaV3zByQUGJrU079iNMdCdscJ8rFgt
      nqpWHNIEyWfwPPFTIycAz5lYKIRqsz3myQH8REN2zCvOBEpGBw6dn8DDKOKymfJKJ8NDUwCM
      jk5TUVnCmtZAQsU/1MukYsf5dHc4gIGSIicTk7MgBEN9I5Q3Vi5FpgEITE+i5hfj0pooc+kZ
      X4w8lotQUkz1XSdurMf4M4yc+zMbsH5+SBmD+jV+0SDJ6iM/CYSQkVYIi6eojM7OcUSzl2l/
      mPpGN30r7gjPD3Di3TmMyFjdhew+tGMNYVub4tIierumSdd5GFtM0bLRykpfCuOjw6hqEYOD
      g0hyivt9EzQW2dEAcyMdfPz7WQILIco3bOfQwRYMP8PwuTkBeM6YrHb0oUXmkioevbxikejG
      Yg0RiiRw6jMbR0pojgXhZYsVHtoLmJweLKEefHODLGorcVtXvzKru4Z977yMe9VVFb1BQzSl
      kom0JFATcYTZtOrAuTGvGHf0PJPzTmIUrY4FrIaZngpjLFPw+/1g9iIN9bMQb8BjBE/FRva9
      doCB698yrDFhNWh+dgtgyE2Bnjuyxcv2JiunTl4knFBIx0M8GJoAtGyoL+HqpavMRVIoiQDf
      nbmEp7kJ54o5jqS10Vyj4csTbRQ3VT+Tjx6QqGisZeDWVXyhBGoqxqXvblLYULnaCE22UFVl
      5frJczibm9Gv+Bri0/2E8lvYv3M727dvZ/v2vdQWCMZnln0SSTozG/ceoUbp5dPzHcR/hmuA
      PzhQdo4/FAl7fjkF+iAXz1+ka2Acg7uIEo8dm7cUtybI9SuX6egZpWzTPlrrim5xEQsAACAA
      SURBVDJ2+kqCkLBS5rFgsNuYnomybWMteg3EQjEcpWVYtSqxUJq8snz0j5Sps3opsiW5efkS
      bV0DeJv2sH1dMRpZQigJYoqJonwbBqOZqbk421vXoZcE8XAEa0E5qfkp7CVVeFdEjtdrVYJx
      LYV5FqKRJPnFhWi1Wrzl9TDTxRwu8p1/mMn2n5ucKUSOF5rcFCjHC01OAHK80OS0QM+dFJP9
      D5hYyOjQNQYzpRXV5DuWXYekwrN09s3R0LIOs0YGBKGZUXpHV7tKL1u3ObtRJQjOjDC2CLW1
      lU8IZyoIzIziV2xUFy/riFKxRfofDBJVDdSsq8dp+hkq739AciPAcydB77X74HbjdrswqEHO
      nTzN7NLxAJWp7mu03b5J99Ty6Sat0Yzb7cbtduO06um81UZUzezECiVF2512OtuvMrX4+Iko
      NRWi7cIZvj13gav3x5avJxa4eOZb5lIGTOoC3359gfk1dndfJHIC8COg0Zopr6mhpqaW5pbN
      VFoWmcpqE0UySM+UntePrWe4e4hMaAAJk8NLdU0N1dWVGOIzeDcepMKR0fWkkwHCip1NlfmM
      T/sfL1BJ46pu5dUDrVgNy6/YP9JDwFLDntZmmrbsocYapn98jftfIHIC8CMilBRT/fcYTRVS
      lrW2DPlnSLvyKShtxhnrYyGy+sxvxNfP1QdwaHcdGimjYAyN3kNX2kx1XSWzo+M8GsdFNrqo
      LM3j0Y3Zhbkg3iJv9qVL5Bc6mZ8N8CKTWwP8CCy5RREqWpOTisYmbNmW902NU1C8GTBQ7LEw
      MbtIvjVj/iySQW5ev0fT7pexPPyYlSg9D6I0v5yP3uCgmE5G51PUup8+l1dSCmiW+zyNRiKd
      frGnQDkB+BFYcosiVOKRAO2XvuGeq4BNhWn67j1gSvLx4JZEIjSHJlzIxioPGgSDHVeJ5zXR
      WLLstz8e9NM/McTwp+8hA6EFPxWFU9S6n+BnaAUGkx41uTzCJBMKRpP+e+745ZMTgB8TScZg
      tuMwqsyEE8R84yhV+/j7fc2ZaUl6ga9PXGYuvhFPYpSbgykOv163yufOgm+Syu1vsH9zBQBR
      /zBf3RhGUP7UHdi8Ag+3usdJNZeiRWFieh5v46bn9bQ/C3IC8COQSvi4eOoUVkBJRAimXBzd
      42To2lWKSrYuL8S0LkrzFfqHp+jrOMF8opTbF75Zyqdh215mBscp3LZl6ZrZkYc9eJOxmKDc
      lBGB6EwfF9oGSYd8DPhVToUnKajayMb6RhqHz/DJpycxEUXOa+Jw6dPcqvyyyZlCPHdU4pEI
      sezUQ5I1GM0WjDoNyXgMSWdAt2Jenk7GSaNFpKLEk6vn5yarHSmdRGMwoV26RZCMxZAMJnRZ
      H4VKMkYwsjJGloTeaMZs0iOUFJFIBEVosFgtq8p+EckJQI4Xmhdb/HO88OTWAM+dJIPtbfT7
      lvXttpIGdjWX4xsfRusswm1dHcUkHQ/Q1X4XXyiJu6SG5vpKjNmV8HT/HR5EHOxrqVlKH5l5
      wOW7Gf+dGoOF2saNVGQjJKrpBKMP7tE/5sfgLGLDhoYl8wffQDvtAz5AwuYpZcP6eqz6jKe5
      wGQ/d7oebswBZg97t21Eo/i5eamf9Yd249RKgIp/qJt4XjMldgnfQBvtA7NLdTM4yti9o57+
      jk5K6tdjz0aZDPmGmIrqUPyjjPlXBrSWyCtvZHONg/Ybd5iLLB9wLmveQWORhf7hUSrKK9Fp
      //T++4UUADWdYNofpLjA+yOUlmSse4bKo3t56NxEY8g4oZ0c7MNU51olAMnQDN+cPoe7cSeb
      a80szM0QiKQwOvSQXqT77gCTcR31jTUUZDWY0ek+ku6N7K62kAjNcuX0pyRff4c6h8Ld86cZ
      1ZSye0srgckevv7yGw6+dgSvScPk5DjOshZq803MjtznixMD7HnlZUodBuZHB5EL69n6UAUr
      6zDoNIQDc0wO3yNwq4RXd1SilVRm+m6y2NREiV3CP3ofW9VR1uVlbpO0BjTIaCNjXGqzcGRn
      HVoR5cqFm1TtfZXy+mYKUgqDt75lzr6R7fVetAYzUmqO4WmFnQe3Lh3iMVgsoKbp7umhqKT8
      BxGAZ8ghwDf//m98fr1vlWFWbHGId//p/+HqQPB77x7vukbn0LNvt8/03eBi2xAPXTymw9Oc
      P3uFxeRy6elEkHvXzvH+e+/y/kcnuNk1RFIFYpOc+7adp/kLVuNBrrZ1PnOd/lQkWYcja9fj
      drtxWJ58an28tx2pfBs7mivxePKpa9hAQdYEIjw9RrywkX31Wu4PLqwIHi1htjtxu90UVdTz
      0iYv94f8RGeH6I+7ObJvC15PHrUbdtJaJtN+fzJzn6zF7nDizvOwbstedtVZaOsczOYrY8nm
      6Xa7cTtt2YAaEs7qbehn7zK7hvsJSZaxOpaf1WW3ICNRs2Uf2pkOBmdCjHVcRq7cTnW+HYvN
      gdvtxmYxLf3fbsn4F9LqTbhWtNvKWGo/FM8gACmUtJHQxAihpaBLgrmB+wiTgYVIxmevEAJV
      VVAUBVUVCAFCqIQXZpkPxZevk7muKAqKovLoGtxbVkuw/wZD83EQgp62m+AtxbHiLODQ3YuM
      qkX8+u13ePPoPpxSkoQiUFMRpqfmSS7lraKuyF8IFXWNwFFL9VEfr88Pg0BVlOwzK2vWIUOS
      iQkf1VUVa+r0x8Z9lJQUUrSumUB/N6k1n0UQjcbQ6XT4p6dw5pdgemgTIWnwlJcQnJxYI3eJ
      kopqwrMzWdMKgVDVpTqveleygS31Xu72TTwWh0vA0nfwsE0ztzjZ0VrPrctnuD4g2LOpHO0T
      I2ssP8uqdnsO7+aZREoy5NFUEqF7NMqOSgtSapH7I9BU4yLTlIK5oTbO3egDCTC42fvSfqyh
      B1y+001Q52emz07dlv1sLNZy5dx3TIaSqIpCSeNOdm2sQpcVRdnkZs+ORk5dvkn+djsPwgW8
      uqts1QcRDQaxl3szqkCLi7omF6oS4dKZ7xgYDHHyozmMnloOl0U4M5bHW4ea0CIYv32aLnk9
      h+uXe2A1GeLm+bMM+OPIQE3rQbbW5f+gx/qSsSlOf/TRcoSYpl3sXV+2RkoFJQ1a7VqvJc70
      XJT1G93o9DaM6l2CiTQekw6hKvTevoA6akBJxQnG7bz6qzz87QoaabWttCxpUNTHww0BaPR6
      jKrIuiFPcue7LxnKeno2eCp4Ze+2pbTu+i3YvjzN0PzqsB9KPMKV0x/Rm7X2Npeu5/Vs0Aqr
      txhT5BKaqmaMz+BBYnH8Hic+Gs+6gdGzYe9BGvMNT7nrD+MZxxSJ/JoG2tp7EBVbCM/OkMor
      xKMbYgJQo3Nca5tg3xu/ptCswdd/h6t3unnz0Bb2bR1h2t7K/vWZSB7Dd74l4VnPb16tQUrH
      OHfqK0ZL8qnxLofNcZQ2sGnoBP9y0sdv3j6O6ZHwI9UbtnHmzJecmqqjpqqKihIveo2F/a8e
      YjI+yvHfHcQGCGUR051v8AXrKbJJDExFaNjrQWJ50TUz0MGsvpK3396IlPTx9Vc3mCt9Da/p
      h1OQ6U3FHPvds0SIMWCz6VgMBsFlX/VLytdHz+gMU5+9jywJwrMzmCbC7K91IUkypbXr2VRl
      QZK1WGw2jBpI2CxEZiJZzxAZEtEwBrPjsZIBYsFFEmZTVlANtB56na0VqzfKlpbykpGGpgpu
      dfdRsuJ3rdHC3mO/Y8NjsfUUBu7exr5uP/LUPfrny6nL+/7zw66yDbzyxi5MKy+m409K/kfx
      zG/ZZCtEis8SUwQz01MUliz3yrHQIorTS5FFjyRp8BaUEA34H7NSBPAtRCkvK0ArS2j0Zsry
      rMwuhFcnEqAKkCXWnC7YCmp44zd/QV2BheGOi3xx9g5x5fF0ksZJdamZ4QkfIjVPIGUn/xGN
      i9/nx2DW45+dYS4g0GqCLIbWqvmPgUxZdRUP2tsIJ9IIoZKIR0mm0gz2jLPzrXf4D3/1Du+8
      81f8L//hCL6+QeIqIElYHG48Hg95bmc2ZgC4S6pg5gFDcxGEECRjC/R0j1BeX7mqVCEEqViI
      9rs9VFZXPvNH4S6rwxEdZtC/9oiykvBkL/dm9Wzd3MiufU20n71C4CdwFuGZVxWy3sw6e5Ke
      uSCxyRi1jXmo89nfZBlVzTh5kqTlUJhrNaRGkpfmhSBQFBXNquFQEJjooStSzN+9buXri7dx
      H9uDdcllWWZ9oTPZqWnYQE19HRdOvE//7EbWW5eSLHV51XU1fHlnjEVtFF1FC0adjLpi7SbL
      CjPDA2jDmRFI563Hbf5ht0eSsclVQfJc1Vt4dXs9pBa48OVntFn0gJHdx49TVrWJ1sWrfP7R
      +0iyjM7sYvvunfT5E+zbvjx10+bVYI1+gj+0Ef3y465CYylk97Yqzp75lBuSjKJA8bqtrC/L
      ji4xP+e++pR2iw6NRkdhXQvbawuzdye49c0J+h8Gu7AVc/zw7lX5S1oLTRvqufqfL+LZl7mW
      TkS48MW7dGW7bVNeLUdf3sDly3do2vsXOPQy5DXS6OnietcoR1qrkNaqvwQLYx189O7I0kda
      t/0IreVmpMAoH3/4PjqNjFZfyJFfv4T90fufFfFUZsXp358Vi0IIEewV7/7z/yc+vtgjFCHE
      xPUPxRd354RIBsW5j94VN4f9Ip2Ki45LX4ivb/QLIYQYv3tWfH6pW6QURSRTaTHXf1W8//kl
      EYilRNQ/Ij54/xMxHUoslZaOzIjPP/xIjCwmhRBC3Dv/qTh9e0CoSykSYqCjTQxOLQhFFSI6
      PypOvP+BGAsqQqR84uN//VhMhZMimUwupW8//Z74r//9IzGRLSYV8okPv/pWCCHE/FCb+OTL
      SyIQT4l0Iiz6+3rFQiT19GbJ8YvgGfwCpQj4E+RXFqI3OAiM9lPasol8q4FkeIGkuYiSPBuF
      JV5G717l2p1uNJ517GypQa+RsbjcBAbauHK7G9leREV5BVZ1jquXr9IzFmTbvgMUO81kz3ow
      3d+Fmt9IQ4kTSQK3x8Vk/zD24vLsWkBCEjF62m9x83Ybg9NRmrbvoSLPjKQxYdMHuXrxKv0L
      0FBZCGjQSgt0Tek5sLkqG2onzWIkSXlxIUZbHpbUDJcuXeVe3zAGdyklBa6naihy/DL4xdsC
      CaEw0vYdw9pGXtpY/PQbcrxQ/MJtgUJc/vwTrg7DpoaipyXO8QLyCx8BxLL3ZUn6M7nsC/PN
      v7zHqMny2CK4/eIZTLXbWVe0rJYc6zjDiYuj5OVlFuV6Wx77Dr6C1wzzo518d+UeCUlCI2tp
      2LGPdN9t+uYCBCYHCJvKKXHpya/fzqF6wX/+b2ewFTrRCEijZdfLr1HjNSOEQv+ts9x4MItG
      gpSqpfXAqzSUODKat/gCZ0+dxhcHjSxjK93Aa7sbuX7yv9E+a8JhymiZXIVN7H9pI/PX3me0
      5LfsKlvuT0dvnaRX28ormx52PHN88a+XaP3dmxQaJzn57hCH39mzWsUJBMeu80//9TyH/o//
      k9bCh79O8T/+rw/QVuajFYKU0LD90GvUF1qJT9/hn/79BgUlTiRA1ujYeeQ3lFkitF2+QN9U
      EIGCrHGz49A+KvNWR6n/hdsCSUtriz8nelPx2pHi1+p71owUDyIxy3dXetl08HUq862IVJyE
      0GEuf40tqPRf/IDx/GO8tC6rDwkPUFC3nePHt6ATKsGRW3x19R4lv9oOs93cGtPx2ptv4zRp
      iAYm+fLUWQp+9Tpug0r7+W/Q1R/g7XUFaFCJJTJqTp3Nw+Edx6j1Pr4Ztcae9GPPJ9YOp70i
      QYqR3mlefns/A/eGaCloWjoN563cwsF39mISKtGZe5y8dJuStw6gkTTUth7mtZfqVk1n5h7c
      ZUwp5K3fvopeI4gGQrDG8c9f+BTol4Jgob8dqbyVygIbsiSh0ZswP6NtjCTJ2IsKMUZjpEWa
      kc57lLfuwmnWIUkyZkcxtS6VEX+UVGSBnkUDu5qK0GlkZI0Wi/nRfvr5oET8DCWcNDVvxBbq
      ZTG2RkQaScbsLcasREmra2SSRavTE4+EiCWSCDRYnE4shscdB/zCR4CfBsnYJKc++GBpClTU
      uPMJphBAOkr75dNM3M9sapgcJew7uBP/3Bzu4l1/VI+lpmN0nL+OoW47JinFnE8hb5thaUoo
      SRJOu8RQIE3SFEBjsLPWUflUaI5zX35CmzkzBfJUbmbftto/okZrMz87jc1biEE2U+g2MuUP
      4jGv3olW03F6rlyA0hasWkgJhYE75/hwtj0zBdLa2P/aUbzl69k4fZnPP3wPc14Zew7sodD2
      +MiVE4AfAb2piCO/fpWH1gGS9D2fscbMxj2vsKv54dxZQpZhUa8nlXr6jutKpvuu8+7cbfoH
      Z3ntP/6vvFJbgIYkeoMgtdr9EOm0hE4vIUt6VLF2OVqrh/1bjyxPgSTpB5xCqIz2djAZK+D8
      +WkivikWkmM0l7mQAd/wHT74f3sYHpxh/9t/y7GmUrQSpCQN1ZsOcPRA7VJdZJmMqcaOQ6zb
      prA49YBTH7/H+kO/YmOZc1WpuSnQj4KErNGgyf6Tv2+PQcrsrGuW0stIkkxRVS3TvfcIp75n
      3H+Ewvod/O6v/5a/eX0bk0PDxNIqoKeizstA7whKdo4u1CRD00lKvCaMFjem6CzjkfRjM3ZJ
      YkW9NGhk+YmKBZPFRiwW4WFtlXCYhN621jQ8U4e4j+lYEbt2bKCuro5Ne/bhXBhjLpGpRX7l
      Fn7713/L3725h9mRISLJ5XaQVrWXZtkaAZA1WtyljezdWMTk5Pxj5eZGgB8BoaYIzM8vhSfS
      GMyZMwFCIRRYZN6gABJWhxOESjQUYH4+Y/YgyVqsdjv6gkbqzSe4dK2DzY1lpIOThPQVNJR+
      vxGArDFQ23qQ9NXTfPPdLQ4daMWzbifajz7nhn0Pdflmxu7fIuJeR4ndiCwb2L+rmi+/OMue
      vZuwSnFG/Sla19cglDTBxQXmNZmvWKMzYrNlJnaR4Dzz83LmbILFjruiCbnrAu29BirzDHRd
      vYa9YddS/LJUIsrC/DwxQKM3kZ4YRFteQ1VxcVaoBPOF9xkZXyQ/e/hN0uipaNmLopzlzLdX
      OXRoJyYEiWiQ+fn5TG8uSVjtLhbHOukeTVPfUIFexOkZDVK6+XEPGLkIMT8CqhJi8MEQk5OT
      TE5OElRNlOU7kEWMkaERJiYnmZycw15chl2nMjU6zHg27exCCHdBKSadhuKqGnTRGXr6Bggk
      jVRWFmPWZ+bjkkaL1enBsRTnS0arN5PntiJLMt7yGozRWRJ6Oy6bnZq6SuZHHzAwOoUufx0v
      7WhEL0sgSRidJVR6JPru9zDlj+ApKcdjNyESYUZGRpafI6ahoDgPraxhbKAnc31mDoOzELfT
      SUV5Pr6hXgZGp/HUb2VbQylaKbObH5obZ3Qim0/agNNioaCoCNtSqEkJk9mMkHS47Ga0GiMu
      rx2NJOMursaa9hPV2HBbDMxNLLfX1LQPe2EV+XludOl5+voGmJoNUr15F/XFrse0gr/wfYAc
      Ob6f3BogxwtNTgByvNDkFsE/BkIQW5jgyvU2ggkVd2kd21saMOlkJgY6Ea5aSt2ZzaZk2E/3
      2AKbGopov9lHbcsmrIbMxDU43c94zMG6UiNXz5zBF89uDLmK2blrKw6DTDw0w5Xzl1lMZhbA
      ZQ0tbKovRSOBb7CHqK2YSm924RxfoO2Bn+YNtegRzA53cbuznzgG6lu2s67UjUiGeTDmo7Hu
      oRsWlZneO8QLWzHO3OLyvbFVj2qwlHDg1R1Y+XmQGwGeO4LZ/ht89M1dGncc5Oirh6myJukf
      8yOAmdFephaXj/mlIovc7x8GzIjgIO2D09lsEty+1obWYkJVYgRSNl45dpxjx15lQ5Hg0xPf
      Ek8LkuFFkuYyjh8/zquHdxEbuMLZ2yMA+McGGZ+PLFctEaSrZ5g0An/fVb7rDrLtpSO8sn8b
      i8M9LMRTpBMR+odGVzyPin+og8kQeGs2cfz4cY7vryUU8/Dy8eO8cnALq61tftrkBOA5o8bm
      uXZnnAPHj1DktmIyWSlf18L6Ks/33yhJNLduYa6nE39CITjUTsDRQIUn83nJsha9wYDRaCK/
      sgFDeh5FzRyFk7VaDAYDJqubltZNhOfGn1pP38Q0BVV1uG1mLA4Pu/btJu8p8cNkjQ6DwYBB
      r0XWZOqj1+t+VnGCc1Og50w8uEDI4qbUogMlRTgaQxFgMJox6L+/+fWuCpqKeunoHkIZm2Dr
      gdcxyBIpIJ2KEwoGCCfDPOi8iad2GwatRHTF/UJViIaCaPTmJxWxRHlDHTe/PotB2UpDZRE2
      iwk5qzNUUnECgYfH4RWi8T9sR/qnTE4AnjOqqiLLGVPsVMTP7Zvt+CdHSFe+zG/31Tzlbpmq
      5hbaP/kEW/UrFNkfbqMKAlODXL0skIWK1mCmwG3NfrAK4903+HR+BCFUJL2dHfsOPKUcCUvR
      Bv7y14V0trVz+u5lLJVbeHlHMwCh6QEuX36oLVfxjfhYt/WPbpKfFDkBeM4YzRZEOEJEBYu9
      kAOHjxLo+Y7TWfeZWllDesVWjCoUNJrlqYfOmkeNywjVtSxbUEjklTdx6NhB9JJASYQ58fkp
      yoveRItMUd1m9m3I4+Tp6zQfPEShPZOfrJFZ6clKVVXQaHjoOchg89K672U2Kykuffo+vbPl
      1JvBWdbMa0cOZlOl6T7l45cSWSy3BnjOaG1emj0JLtzoJZZSMq5OEstuVzxeL1NDQ8TTKmo6
      wdjQAPa8FZ52JJAlCel7DvSkEzFiKRUpu8uq0emw5tdw/OWtDF4/S9dYJiRlXlEesyMjGZcr
      aoqhgUFsHi96IVjwTTAXyNjuSEJBaPRZV4i/bHIjwPNG1tO0+yDRy1c48WEbQpbQGSxs3O5F
      AgpqN1Hhv8inH74HAkx5FezfV7kiAwmt3ohY1VVJLIx28NF7M2SsFyQqNuzGbtAQlTXodJnX
      aiuq5/9v7zyfo7rWfP3s1LlbrVYrtnIOKFiAECAQYANOYOM8p2qqZqbm/km36n67dWdqavCZ
      OWZsg0kOYKJJRkQJBYRQlmipJXXcvfe+H9QCASKcM4Bhej9fKFqrd68Ov7XXete7fu/bHQKH
      fjqE6/1PKSldRc30afbv+08wDBR3Ph2dVYvTs4Vpfjt5mgVVQxIlskqaqMxyQiSKxfLwYlhS
      bDzkSyvI2Kxv1uJ3CTMVwiSteewOEIvFCIfDK7U1Mfkfx2MCkCQJq/XFGpCamLyumFOgl4yh
      a8RisYdsxEXZgt2qkIhFUJd5mkqKFatFQkuoCIplWaV3g2RCBVl5YNhlaMQTOpbU3NswdNR4
      HFXTESUZq9VyP46vJxPEVAO7zZJaKAOGgarGUVUNBBGL1YokihiGhqaBkvIXxTBQEyqS1fJ4
      xMTQicfjCJIFRZEW1wCGgZqIk0gV4BbExQF1KRRsGAa6phJPqBgIyLIFiyL/YeYF5iL4JZMI
      z3Dh7GlmUlU7ZscGSBRu4p8/WM2Rr/83YXcNSyn8eVVrWF3n59rRAzg791B1P6FG48rhfbB6
      F60FqU2t8G2++W6E3X/qxGHoDF8/xamr49idVgQMatt2Up1nAzT6f/2O/+hR+ae//4Q8lxUw
      CE/08uPpqyApGHocIaOUHZtWE5++yfkeie1b6lIvHeHHf/uexn/6isJH3psausvX3/yAo3g9
      n77dsmjwqUX55Zs/M+vwYRMgEVvAWbyGneuqEASBaHCQX45fQpUURAx0QaJl4w5Ks/6Ygt3P
      JYD4/D36B+6wkDDw5RVTUpD1RpfXTISD9PbeJpIUySupIOD38LIifla3n03bdwOQDI9z6LBO
      88YmAJz+Itq37sb/0EbtX+9Mrc7e5vi1OT786GMy7DKGlkQTFr9aLRqie8HDJ60aPcNz5NVm
      g65z/szv1HS8R022G8PQiMVVrJLA4zVfnszE6BglDeuZunuXuNGMbWkYt+Wy/cOdZIoCyViI
      /f9xmKk1FfjVWY79fJ7qzg+pyLYjYJBMJDCkP24cfuavOBke55efTxEWHfgynIzduMTA9Ju7
      SFYXxjn20wnCkotMj4Urp36ke+QVbOsYGtfOnsVbs5aA9+k5Nn/lhRnr/p2cxg1kOBQEQUCU
      FZTU/GlhZgLFm0dlbRUz/QNEU3bqHofIyOgk4XgSQZRx2O1PP6v8GBrjY1MEyiqpy1Dpnl4h
      PUIQkCw2MiwyCQNCk0PEMsqozHGk9jZEFKsNywuo9fW38kzpzQ33Es6sZOeqWgQBKqtq0AFD
      TzJ663d+uzpAUnLSsKad+mI/avAOl4ejKHND3BqZo3ZtB66FAbp6RsiseItNLRVIepxbl3+j
      q38Mi6eA9o1t5DhErty4QX19ExZZJD7Rw6VgBuvqfPRfuoLodXHj8hWSjnw2dazD71LQtTg9
      F89wfXAKqyeX0ooy6qqKU2/KQI+H+O3XkwwFI7hzKtjauZrw+G0i7jK2N9YgAI7kNL8PjlFf
      uHLRiBeCYRAevcrNcBa7q/PvjzoLE7fZ/81eUoUTKW19m/bqv7YfSWaC8/hKM1eIwxtMDQ+S
      XbwROcNOlniVyVCCkkyFxo1bOHPqJPuunSO7pJ5N6xpxKBKg0nfxV+6Ndy1eQle5c2eOxkev
      HBllPOan3u9CaSrhu6sDrNpWu/jZGxrxWIyIoHNv8DojVh8bJJF70TA2axYCMHP3OsfPXiWq
      i6zeupvqnCfXTXuZPFMAnrxi4mdOcD7bRUtNERZx0QpD13SStmze/7gVMTbF4QO/4s/7BHc4
      SNfVQbZvf4fP2uL86//5f1Ru+4IPP27h178cZLSuGPv4DbqDDj79/EvCk8PMJzXQdUZGhqmu
      XfS71+YnuD0usK4ug5HuLkLFa9n+4aeEek9z/vog77ZVcO34IcY99ez6ZDPJuW6OHJugpqp4
      seOGQc+pE2gla/lsm5/g3duEVXBnFWBcucLIbBUFjiQDg0Hyqutf6oecjDpXlAAAD0JJREFU
      jM9w5OfrbN7zJU7lwWjnyi1j/dav/ptTIBGrVSYcjwOPRO8SQa5cHkTNN5i4AVNDo8QDk5Rk
      FqK4stm8cw96MsbgtXPs/cshvvjkXUChcvXWB2uAZJiD//L9Y6863neDoYkgxw7NAHFG7kSZ
      31BFpgLEpzl+5BBj3dfIan6Xz3ZtwSoKyLKMri/6sWQWNfBxUQM3f/k3JueTVD9WUebV8EwB
      yJ5iPvroHa5cusCfL54gt6KFDatrcSoKeVlOeq93EUtqCPokE7PgBvIqGijNcQMuissD1JYX
      YlGSeO02koDFakeb7+dm7yDFxYUU2BWMROSJfbC6slnd2ojDIiD4fKizCfRkjKE52NJRiVUW
      kZxOlIdyIQWcGU5u3eljwKpTGCjHroAh51JX7OHkwX3ohoEnr5L6Au8TX/u/jZ6g99wpXE2d
      5DulZ7dfEZEMr4W781EMHAgYRINB8GViQaKoqpoLXZdZW9SGZVmxkdnRuzgaNrKhsRQAdaaI
      YzdHUBsDiLqOKEmIso2ypo10937NbEzF/Zw96h+PsWPnO+SkzKay5GOMBBfIzFXAlsuO3TuR
      NjTz8/FL3JmqpSbPg9cfIHzhAsFYAz7b67GGfPbqQxBwZubRvu0D1sTmOP/LIS70+mgvNjh0
      +DfK6uvJcIos2OUVrC6XvDkfvjl7civpaLNw+85tjnZdpLxtC80FT0nZFRb7sRzDiCOKDuQn
      FVsTBAqb2tEHbjPU38WlszE2vr8LZewy/fMudn36JQ5ZZ/DqGc5e7uP9DXXP/Cj+FmZHb3K6
      L0zHNp3hu4unpyyuTPJ8bpKxMGMjQ0RSA7fd48fvlTEMlcmRIax2EGQL/uwciptb6Tr4K11G
      E16LSteZXhq37UYBpMImKq7t59ffrFQEvMRDE8g5TcSGx8kvXIvHkzoB5iwl69JRhkMqM11H
      SXjKyPc5ScyNErEX4nNYUJ88Dt3HSE5zb95GS47/fuWemvJsjt8eoy63+H47T2452zrh6NED
      CNs/oCo7n/W1Xg4f/InW5ipsQpKRWR1f5Wu8BlATMQxkFEVCtnkoKfDRFY4RD82g5DSwqq4K
      NJXI4PNvnhkI+ArKyC4sp3nsGt92D9NcULPop4qBoWskHrUuewRRdKIlZ1mIJbE6ZLRkkocs
      owwDHYWiqjpKquuZu/kjx3rv0aiFEO3l2BUREMnwOJgZnnnuvv+1yDYvDTVFTI88ODrozFXI
      87mprGlgdPIuS5WWfQEHWd5MChtWcWv0LncB0erE6fXj85Tw7g4LPX13GNVEWt7ZRVHOYpxU
      lOysf3cXgz3djI2MYnP7qfZZmC+pxpW97O4muWla10JSgsK2Dvpv9TIyMotiz+TdnTU4FZF4
      RoD6mmWDimihsaONhxx1kgKr2tbiUB608xbV0yBF0EULDa2NOFI1hT255bz/nsLtUAQ9x01R
      cyfv5Q7SMziCJlgoWb2TssJnn1d4WTxTAAsTvRw/dwvZ5kCWDOYjIpu3F2CTHOgnf+bgwX5E
      UWJubIbapud70bnxW5y80IdkUYhHo1S1bEaQZfKsSQ4dOoTTIhKdHISiRyPPDxAlhbX1hfx0
      4Hs8HidGMkiY5T6VBsM3z3F1aAZZEomE47Tt8JMnvsXALyf4bn8PFtFgIayxZvO25+v434DL
      X0K7v2TFv5Wtaqdshcezy+rJXuEPjsx83lq7cp0DQbJRVt/y0PVcReWPtfMVLD1mobb58aR+
      qyOTwPLfo6hQWP3wdQRbFhWPWptaM6gsW1zAB0qWf28C9qxi6rMe/N+bX866/Mf79kfwzJ1g
      w9BJxKLE4iqGIGCzO7EqMmCgxiNEYiqK1Y5F1EB2IKMS1wRsqdNO8VgUxWpHFAwS0TiizYqE
      QTwaIZZIIilWHHYbkgiammAhEkUQFexWCdWQF/+NxZGsNiQBDE0lngSbVcEwdKLhBRIaSOoQ
      P51J8sGulpQD2+KdJBJe3G2VrXacdgsCBpqaIByJohsCFpsDu1V5LWzUTV49b24qhK7Rd/N3
      VKsfp6IxeOUSjqZ3WV3ifiPTck3+GN5cARgGCzOj3OobIqKCL1BBXemLrfD+Yohx7fgJgt4q
      OppKEAUBNRbk8rUR3mptRBYMkokFrvx2ir7REK7cUtrbWsl0Kox2n+X05UE0w0DTDSRJxJ4R
      oHPbeobOH+b68DwCAg5vPhs2byDLLqHH5jh57ChjoaU1lEL12g5aKx6U55juPcuRC4OIgoAr
      q5C1ba3keOw8SBMy6Lv4I4PxAJ0b6rGkHp/sv8DpK0E63t+OP2XVYugJus8dpzfi4Z1N65DV
      aY79cIRgMrWwlay0bHyH2oLnjS+9Wt7cXCBBwOUL0NoWeHbbP5Qk00PzjIR+Z6qqiFyHhJ4M
      MzBwl5a3GtETIX7e/wOO+s180lHAdN959u87xO4vdxGobefz2nbi4V7+67sR9nyxBYsIaHFO
      zcOHH32GyyYQHLrGvm8O8NUXH2JVI9yTcvjqq81P7FF4cpDKzV/RVqBzb6SbI998zVsffElN
      TqpyuxGhb3iOZHKW8VAVxamd61AojKhPc6P/Hpvq/YsHaSKzXJ8MoYemSWjrIBFB85Txxfb1
      Ly295EXyegRj/4cjKnba3yri3IVbPOpuHhztI5ZZx4a6QmRRJLdqDZsqdc73TD2roBAAgiDh
      K6yn1KUzl3h65OzxJ4tkBerYs3sdv584RzyVmRofu4bqb6W6xMfw2NRDT/EVVTE73He//NH8
      1CAufzlPNkp/vTEF8IpwFTbhDfcxMvNwoH1u6h7O7Jz7o6UgSOQECggOj/E8lQAMwyAeniWU
      FLDLixttyejcfQfn0bFx5qNPsTERBKzeChyMEU/oYCS4dW2cqlXFFBUVMjU6yvJCRXZ3NvbI
      NDMaYCQY7h+luGp5lMsgtjDL2NiSW/MEkcTz1zR41by5U6A3DcFCU00+v94YJKflwXxY1zWE
      R+YKgiRBUnv6HWD2Lvv+8mdkESTZQe2ajWRYZbQEqPP36O3tXWwnWiirc+F+msmVICJKAoZh
      kIzMM6A6eM9lIDlycYe6GY+uJmBf7KOgOGguFrlyJ8ymnBBDyRx2ZivcuH8xg/DMBL29vamS
      RRaqHD4cltdzrDUF8ArJKG8iv+8wtyaq7z/mzPQSmw4BS1UhDeanJ3HkNfLUxAlvEXu2bOPO
      hZ+4FSugviwbUQANsOeU0dn55DXAoxiJKaJxN4pFYn7sDsHRYb7btw+AeHQOsW+CQGNeqrVA
      zqoWfjvUxVDCiq+g4JF6YiJZRTVs3myuAUwew0JVQwX912+wNFv3B8pRx27QOz6LbujMTfRz
      +nqY1rq855hVK9Svf5taxzjf/3iRyNPKJq6EYRCdn+LkkWMUr96AXdIYGxhmza6/4/PPP+fz
      zz9nz/tbuDfU98jbyMNrm6anf5jc/LyVr/2GYN4BXjoCdrfz/mjuySunxHaFLmNxa1Rx5dC5
      sYnTZ49yMaYh2VzUrd9MwbLEOUGw4HE7lglCwOl0IYogynbq2t8meeIoZ7sy2VDthule9u4d
      TbV9PAwq25z8/uNeBqwCit1NadUGmiu8CIkgkzEvLctSk+3ubJx6HwvGYhKjTZEAkbICH2du
      G+T7bEASd4YbMVXfLDTUxddf31ns72seBn1z9wFMTF4A5hTIJK0xBWCS1phrgJeOTjgUIhxf
      jMULkozL7cG+zBpdV6Pcm42RmeV9YHuCzsJ8GLvTjSQYhOdmCMcXl86SbCXD61lsq2vMhWaJ
      qQ+i9VZnBhlOK7qmsjA3R0zVkC12PB4XsiigxcNEDSsOWWc2FCKpLZ8Fizg9GThtL/Lc8uuL
      KYCXToSz/7WfhaIAbgzU6Dwz8Qx27dmKM/Vbn+45xv/dP8Su//UP1GctnasI8/P337P+oz+R
      bU3w85FvkT1FWGSByOwkcmA129uqkGMzfHfgBwoKllKQRXLKG8hw+rl1/iduThl47DKRuRnc
      1RvZsirA7K3j/BJt5uNVDgZu3WAuotLddZnsmlVkOZyU1jdTbgrA5EWhWP20b9tGLgaGEefc
      t/9O3yQ05wLJeW70G3z5WRMXr96hZkv1yvF/Zy6bOrfgtEoYyRjf/uVbZppKyQbkzCK2bdv6
      cPvoIF19Mu/96W3cy5LcliM7MlmzvhN0DW1mmsqNmynz/nGHU/4IzDXAK8TQdeYmR5hMZLJU
      py4yM8WC209xWQOOmR5mo0+P5QuCgCCK2C2Wp6dKWDJwMEFv/xgJzVi0SxHNr/tRzDvAKyAR
      HeHA3r3YdQ1BcVLRtJa8VKh9emKUrNxyRMlDbqbIRHCOrMAKh/S1OMF700QVgeDdHhacBXit
      MsRBnehh796JVEML1W0dtJbnsGlbG+cunuE/L+hUrFpNc21p6iioyRKmAF4BFnuAD756j1xD
      Z256mDMnTzOQs4dKn0Zv12X6ksPcvS6yMD2Mg3LqVxJAdJarVy5y51oXWa27+GR7I0u/ZSW3
      hq8+2PrYU7wFVewoqESNhrjw4wGOLOh8uL7ysXbpjCmAV4kg4skuojLnPLfH5yjWp1jI7+Af
      O1N5P+o0hw9c5p5aR9aja1BXLp1bdyC2N3LwwEn6JkqozfM8OV1C00gKIrIooNgzaN+8hn8/
      PEbMFMBDmAJ4BWjJBfpv3iQIJML36B6EjS1ehm9cIifQgEVKLXulbAK+CIMjIbJKV56qOLxF
      vPt+B4cP/oC+eQd1WaBHgty8eTPVQsCTHSBgmeWHE9fJKwjgtopM3O6mrHkTdiC24pXTEzMV
      4qWTZGLwNmOzi36qkmInt7CYnAw7M5NjSB4/nmUhx8jMJAuCixyvhfHhcTLzCrGKGuNT0/j9
      2ciSCIZBZGaMybidomwHI4MDBBeWbG1FMvNLKMn1sBCcYHhsingSPNkFFOf5kESBxNwE05qH
      gszF6vQYBpNjoziz83Aqf6t515uJKQCTtOaxKdD8/DwzMy/PKMrE5HXCvAOYpDVmUNgkrTEF
      YJLWmAIwSWtMAZikNaYATNIaUwAmaY0pAJO0xhSASVpjCsAkrTEFYJLWmAIwSWtMAZikNaYA
      TNIaUwAmaY0pAJO0xhSASVpjCsAkrTEFYJLWmAIwSWtMAZikNaYATNIaUwAmaY0pAJO0xhSA
      SVpjCsAkrTEFYJLWmAIwSWtMAZikNaYATNIaUwAmaY0pAJO0xhSASVpjCsAkrTEFYJLWmAIw
      SWtMAZikNaYATNKa/w8ffNJSpkbRHAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Comportamiento de Usuarios' width='192'>
      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
      1S8iSv+u8f8BMeERPqOo4VEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Distribución Geográfica de Ventas' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Specs' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Users Negativos por Cantidad de Ventas' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9x3Nk2Z7f9znXp7dwBVO+TbWvfq9f95shh2bIDaWQIqRQhBYKbaiVVlpo
      pc3basfgQn+ANgpqKU0oKGo4dMPpfm2ru7rLO3ggvc+89mhxE9kA0iCBAqpQQ3w373UhM+/N
      vOd3zs9+v0JKKbnABf4ThfK6b+ACF3id0F73DVzgzccoJ0II8Rru5Pi4MIALnAhSShpuj1Kv
      Td3p0fUcvCBACIGhqMQ0g7QZZTYSx1DUc2sQ4iIGuMBxIKVku9PgRbNC23OOfL0AZiJxriVy
      xHXz3BnChQFcYGq0XYdfqtvUnd6x3yuAlXiGG6k8ijg/oeeFAVzgSEgpqdgdfipv4cngpT4r
      bUT4KHcJQz0f3vf5McULnFtU7A53ypsvvfgBak6X70sbuIF/Cnf28rgwgAtMRMdzuFvZIjhF
      R6Hp2vxS2RmZPXrVuDCAC4yFlJL71V3c4OV3/sMo9lpsdeq8bhO4MIALjEWh26Jid87s85/U
      S/iv2RW6MIALjISUkhetyplewwl8tjqNM73GUbgwgAuMRNtzaB6Z7uzyV//iXxFIl0c//sy9
      7+7gdao8ebTG/a+/4qcvv8f2Ju/wO53Ga40FLgzgAiNR7nWm8M8DYqbK6osd2o0mSUvwH//d
      HZYWorRlmg+/uI2pqRM/oeH0cF6jG3RhABcYiaY7XbErMbdCu7BKIGHp1vtYJliWRWB3kFIe
      ubtLoOXap3DHJ8OFAVxgJLqeO8WrdGaXc1y7eZPU/AIIlcs3r4MeZ2Upwd2vfsD2j84gTXet
      s8FFJfgCI/HlznNaU/T6nAZupma4ksi+kmsdxvmoR19gIqSUSEBKUMTRrcZ7r2+5Nl3PwZcB
      qlCIagYx3URw9Gcor7BpTeH1NchdGMA5hpSSnXaXv3i0zv1SjZ7nMx+P8GeX5/nT5TlURRl6
      fdd3WWtVKXSbI9sNdEVlPpJkJZ7BVLWxhmCoGozxzSuba6yvbjOztEjh+WM6nsYHn91m9Ze7
      SD3Ge7ff4oe//CNqIs77n73Hj//6jxjZNLc++QBVGb6eoU4OlM8SFwZwjvGgXOef//EXuvtS
      ic+qTZ5Vm9wr1vgfbr+N1jcCKSVrrSrPmqWJbQtu4LPerrLVqXM9mWcplh5pBDHNpER75Gc8
      f/iI659+QSoZJa23We2kqLx4wNzbH6FWn/F8s0AkvkAm3qZYa2BYM7zz4Y2xp0pMN4/zs5wq
      LoLgcwopJf/7j48PLP79+ONmkb96vg1AICX3azs8aRSn7tnxZcCjeoFH9cLITE3GjIx97yd/
      9mcUnvzCvbuPBv/muh6GoWFaOo7jsfbL93x3b4u5TITd1Wc8e/B0ZFo1HJ7Rp7rns8DFCXBO
      UWj3KLQnpyL/zYst/uHVBZ41S2yfsKK60a6hKypXE7kDJ0HGjKIr6kg3avvpE7p2QHYmhWp6
      xKXJwqV3ufPHPyIVlY//5CNif/KnaGqd3d0mkZiB4zihoR06BWYi8dc6H3CRBTqnuLNT5p/9
      8ZeJrzFVhf/l737Ak+bOSzWVCeDTmRVSxsFd/1GtwGqr+hKffDR+N3uZpGGd6TUm4cIFOqfQ
      1aMfjSIEL1rll+6olMCzRmnIFbqcyKIrZ7dE5iIJEq/R/4cLAzi3WEnGsY5oI8jHdFx5OkWk
      it2h08/7SylxfA838LmayJ3K5x+Grqi8lZp57TPCFzHAOUXC1LmRSfJzcbQLogrB5ytZ4PT6
      aMp2B0vVeVjfDZvUAE0oaEI5lWmwPQgE72fmsV5j8LuHixPgHOOf3n6bm9nk0L8bqsJ//9FN
      VlLRU71ey+3xuFFku7/4ATwZEBBgnlKuXiC4lZkja8XOxUTYRRB8TiGBrudQ6rb5bqfERq2H
      oegsxKN8sTTLTMziu+IaNad7atdMGxFarj1yt5+NJDAVjbVW9cQxR1iN1vFlgESSM2NcT+Zf
      64D8hQt0DiGlpNhr8Ut1m0BKklG4FTWYseLcysyjKeFufNrtChIIxixvPwh4KztL3orxqF6k
      eYwOTgHMR5N0POdAl+lWp07Ltfl0Zvm1pUIvDOAcouXag8W/H8Vei4e1Arcy8wghME9550zo
      JoGUI1uh0/3CWMaK8ZkZpdRrsdWuU7E7+KOoEQFL1ZmNxFmMpfFlwDfF1aHXNdwe5V6HvBVj
      p9Nkt9PCDjwiqs6lWJKcFT3TQPnCAF4xpJRU7Q7FXouO5wKSqBbu7hkzfNgb7drYiu5ut8G1
      ZJ6IppM0IicugI1CyogwH0lyp7xxwA0yVQ1VKDys7dLxHOx+hiiQElUIQBLI8EQyFJWMGeVS
      LEXaiAwW7263Ofa6TbfHs0aFYvdg68Vaq8ZKPM37ufkza867iAFeIbqey73q9li/PW1EuJVZ
      4OfKFo0JAykf55bIWTF6nsuXheenQlmiCoXfz13FUDW6nsOTRpFit/VSNYaYZjAbSTAfTeIH
      AV+POAEAFFTa7vh07juZGa4nc2dyElxkgV4Rup7Dd6XJQWvN6fJdaQ3/iJSj3o8BLE1nNpI4
      lftbiCbRFZWK3eZBbZfCSy5+COeKnzfLfLn7nOfNMjHNGHqNpeoTFz/As3rlVHmJ9uPCBXoF
      CKTkl+oOtu8d+Vrb95gUXoY9/b8upGuJPOVe+6WY1gxFJW/F+aG8QfWMaFCKvdbg/+uKOrim
      oWhUezsT3+sEPi3XIWWefsvExQnwClDutakfM12pjciKqELhZmoW2/Oo2z1aro2uqLyTnkOc
      cKhkL1j9qbx5Zov/MAIZcCma4npyeqJceUYUWhcnwCtAsTc+AByHrBUjquqUem18GeAFAaDw
      Q3HzAFObIgRpwyJlRKg70zA5DGNSvHEW8KXkcaNI1emwGMsc+XpViAOn3mniwgBeAdru8Wdr
      u57DB9lLXIqluVveoeaOHk4JpKRih6eLIgSGKqbaLfdanV9nBqTUa9PxHOK6QWvCb7QcT488
      EU8DFwbwCnCS41sScuZ8W9igN0XsAKExOB4sJ1IgJDW7g+P7SCQCgaFqZMwoETWs6J4HdDwX
      AWiKwAuGf6ecFeWt9MyZXf8iDfoKcLeyRWFCHnwU8laMuu1M3BnHQRGCz2aXyZgRfBng9/P1
      qlBouTY/lNfPhPD2ZaAJhYwZp273sH2PiKYTECAIp9cShsXNZP7UVWYuguBXgLwVO/Z7Oq53
      osUP4Ulwt7yDLyWaomKqGpqiYgceP1Y2z93ih7DpruP1+Hx+hT9fvsmlWIKe79L1XZzAp9xr
      811pnZ5/uhxCFwbwCjBrJYiOyIGPg6GoJ178e2h7Dpvt+uC/Aym5P2Uq9nWh7Tk8qhXwg4DV
      EcS8bhCw3qqd6jUvDOAVQFUUbmXmUacI5FShMBtJnsouvdGqD1qO11qVM6U6Py3sdBustar9
      rNcwuhcnwJuHoE9M9XZ6FmtCA5ul6nycW8Kdgk5wGjQdGyfw6XgOL5pnS3V+mlhrVcb6+THN
      REqJLwOCKbhHj8JFFuiMUem1uV/bHfiuMc1gJZ6h5dqDEcSoZpC34ixEk2iKysNa8VSuHSDp
      ei5rrcqR7RXnCV5/wzjc/qAKBSfw+HL3BT3fQxGClG6xFE+Tt2InCo4vDOAM0fNc7lYOKiu2
      PQfFVvjNzMrYDkf/FIPUqt2htK8N4U2BRPJWaoZir43TX+xNxx6KAQp+i0KvxWIsxa3M8btG
      LwzgJSGlpGy32e02sX0PU9GYicSZseIUe62R01VNt0fL7ZE0RpNP7Q28nAa2z4EO10kQSIkd
      eHyaX8IJfL7cfTF2WAdgs11H67uZxzkJ/pMzgNB/lLiBjyf9PuGsQFMUdKGiCDH1D+jLgPvV
      naFe951ugxkrPjHzMy7IA4jrBqXe6MrvcSDoF5rOlzj71Nju1LmWyPGsUZ4qe7XWqrIUTxM/
      BtXK33oDkP2dpNLrULU7NNwePd8d2V6rCoWIqpM0LLJmlIwZQ1eUkQYhpeR5ozx20KPYaxHX
      Rj8ITSgTH1I+EuNF8+UrtSGT9Et/zGuDFwQUey12phz6kcBOp8mN1IUBEEhJqddis12nanem
      akfwZUDLs2l5NludOqoQ5Kw4S7H0gekmCHPSG+3JOemO5wxcoT0IYCmWodjt0HYdPBmgCYWY
      rpMxI0Q0nZwZJarp/Ymxk0MZwcT8pmGjVTtWq/dx1Wb+1rVC7A2UP2+UaXmnJ72TNiJcT+ZJ
      9Q2hanf4vrR+5Ps+yi6CCBu/Cp0WLcfr9+cMQxCS0l5LZRFC8lN5cp/8JEQ0HYn3Rvr/+6Eg
      cI6RFJiPJPgovzj16/9WnQA9z+VhffdU/OfDqDldvi+tsxBNcSM1M3X+WQKWolNodyn3Jhuk
      BCp2l0phk6wZwVK1qRvh9kNTFK4mMzxtnE469XUiQKIIMfVE2HF5Rv9WGMBeJuZ+dedMFQcl
      IZVHzelyMzVz5IMRCHqex9c7m8e+r4rdxVBUNFU5Vg5fVxRuzyy+VuG500ZE1WlPIdekCMF8
      dJhIbOJ7TnpT5wVSSrY6dX4qH3+RnRQdz+GXyjaGMnn/MBSNH0snN0onCLNUs5H4VPNeWTPK
      F/OXyVmxQZHtbwNmIrGR88SHcT2Zn1hpH4U3+gSQUrLRrvGoXnjl1/ZkgOcHCEYPoEQ1g1rX
      eemenq7ngYTfz19ho12n1G3R8z2CPtW+rqjkrCiLseSBauh5bno7LgIpuT2zxI+l0WwZAria
      zHE1kT12NfiNNQApJbvdJo9fw+I/jLlIIhxm9z0MVWM2EqfleOy0Toe2cL3V4HIyw3vZOaSc
      xQsCPBkMeHhGPfTDmZNOaYdf7j4lNT9PMmYxu7JIe3eTBw/WyC4scGk2zoNfnpCbm6O0+pQu
      FteuLbKxvkM8neWtt5e4++1PqFaC926/x/Of7tD2VGazUTY3y+QXlzE1l/nly+y8eEpu+Tql
      58+JRqOomSzxiE5la5VKE268Pc83//JL1GScDz99h2///ffE81muLM/w5NELMvPLXL526cB3
      iWoGv5tbYa1VY7VZwQ0CIppO1oyyGEuROOGcwBvrArVcmwe1lxOGOA1IJDWny/vZS/x+/hq/
      mVlhIZriReN023YfV0P+fiEEuqoS0fSJIneHq6a9eovM0hWWVi5R3S0igU6jycyVqywszfPg
      7j0++OJ3rNy4yo2b88xdfxdcm2sffYxdqfD4x7tc++S35CMuq48e0FYzfPjph3RaDZZuvsXc
      fI5KYReAyvYmfgDljW1a5SpdJzyNdrZKNCsFpHSIpZaYjSqU63W0WJ4rN66wvfqU1Pwyy1cW
      Dn4XKQlkwON6iSf1Ij3fC/lFpWQ2Ej/x4oc31AC8IOCX6vZISr7XAdv3uF/dGWSGit32qbsg
      xV7nWBmh4eUQUN3dpVb9dUYA6VPZ2aVRaw4kWA++xeWP/89f4ERTiECiqgJVVfBsG7VPbS4D
      j9L2Ds3mr63WQgndQrmPq0IGDptPVym+WKXZ9Vi9+x13Hu8yk7RolEqUCxWu3/4CS7b49q+/
      OfhdBDyoFXjRrBx45m3P4fvSxrF4Sg9D/cMf/vCHE7/7NUBKyWqrQuGcNXh1fZeoZhDXTZ41
      qlTt02NthjADlbWiJI3pqpw7ncYBg/GdLrvbRVTTxJA2a883iCYTVMtVdNNi6VKO+z/eJ1AM
      YhEVqcWxdIWrH9/GKW1y6eZ1Hn1/h6aj8O7tj6k8vc/2TplEPEKt0sSIRHGbJba2qyxfXeHh
      nZ9REylmshEeP3iM12mx/PFvee+9JXaLHeaXrrK8GKHtKNQKJRRDQ/V67GyXSc3Mks2nB/eu
      CpVCd/TzloATeMxHEic6Bd64QljXc/nqlOgATxuWqvG72St8tbMxxHN5Gng3M8M72ekGxH8q
      bx6oQL/J0IQ68fQzFJU/uzRehnUS3igXKNTCPTuavJdFz/fY6TReiqVtEo6TTj0P6iunhcgR
      3+VlhuTfKANwA5/tTv3oF75GrLfPjm5EOQb7W/wYM8jnHYux1MTdPWdGT8iLd4ppUEm4Q7uB
      T8/zcPr02Xu56oiqoSsqinKcx3gQxV7r3AS+49DxXPzgbJrQLG36x5XQX5/06Gkjb8W5nvR4
      XC8N/U0QZrzulDeJajrLsQwRTZ/6VHgpA5BSYvseO90WpW6Hqt2l67ljU5OmqpE2LPKRKPPR
      BLFj3Ohe3v9NwFmNH6aPQQ4b1Q0MRX1l1fGzQkwLv8fVRA5d0Xjenw0QIpyh7vnuYOKtYofB
      /+38Mokpe4JOZACyT8f3pF6m2G1PvSvbvsdut8Vut8W9SoGsFeVaMsN8NHFkAOPLgMYp6mGd
      JTRVwCkXYk1VG6i0TANVKGTM6BuzaYxDbl91ezmeZjGWwgm8gWDHbvdgy7gnA542SnyUW5xq
      cz2WAUgpaTg2v1QKFF+y41IC5V6Hcq9D0jC5lZllNjJ+sLnp2ufe/dmDIiCmH817fxwsx1No
      xxStnosk3ngDmDukf6AIgaWGQXHDGU3qO0riaRymNoBABjyslnhSr0yczTwJGo7NV7vrLMWS
      fJCbxxghyfkyxY7XgeVEkoeVl1dxhzDNdyOdxQ8CGm6Pmt2l4zk4QdjvrwuFiGaQMiKkzQia
      CKfYsmYMU9Xe2L6guG5OjGVMVRvJE3Qc1cmpXtnzPL4tblLunS2x0ka7Qc3p8ZuZxSExhN5L
      Tke9aiR0g8vJ9Km0RNzM5Nhs19jpNLCDyYtZFQozVpyVRJa4ZrAYS/OsMRw8vglYjmUmujHL
      8Qy1yrBbfNT79uNIA2i7Dl/trr80Vd+0aLkOf7Ozxm9nF8lHfuXUdI548ABSBjy+8wNdW3L9
      vXcoV+osLWTZWt8gwGIuZ1Juumw8fIxuRXn3k3f46cvvMeIp3nl7iYZjkdDaNGSE8pMHBHqM
      lcU4WuYKvd0n9Ijw7IefSC4u8/5v3mcSd4Mb+HyQm6ftui9VFEsYOtud6tRK7b4M2Ok22O02
      WYqlWY5nWG9Vz6w2cVaIqDpz0cnyT3krzo3kDKutCn4QoCsqlxNZFo4xEzDRqex6Ln+zs/bK
      Fv8enMDnj7sbVPadONP4//X1B5Ba4epb1zFUSbFQQno2lXqH2tYa935+SjppYCWyaH6TZrND
      fvk6SdGiXGlQr3VxmlVKhSK1hsfN99+mU9mhUCiz/ewRkdwiuUSat45Y/Hv3qykKv5tfYjF2
      vCGNPUR0BaEEUy/+/ZBI1ttV7lY2mY3ET3T914mFaIqn9RI/lNZ5UNul7dqDXis38LlfKfCX
      a0/5sbhLs+djCJMPsossxdLHKoyNNQAv8Plqd/2lB7NPCk8GfL27cSzjk4GPoijsPvyBx+t1
      kCCDAEWo3Hz3Er6aQBPQbtRRdBPbcXj0x7/maVGSjipI6eMHPpHULB/99h2+/Vf/FscPaFSq
      tBonc/90ReU3c4t8MrNAZErf1FI10paBrr58PaHp2hS7rTMTmDgLmKrGervKertKxe6w2a7x
      bXGNpmvjBj5/s7XGg2qJtufgS4kT+BS6bf7D1otj92CN/FWklPxU3qXhvN7A0w58vi9u4gfB
      VA8wvfIu3a2HNF2D+fkcceHw03f3uHzzLYxYhvmFLIpuIAKHrgOpZJJP/vwfcetGlp6eoVd6
      xvPNFpfSgqf3nhCfyZPIznL9nRtcf/89DA2Ss7kjd38ICXH3oAjB5USaP128zLVUmqiuoQoR
      chD1/26qKnPROJ/MLHArlyfg9FwWJ/DfGGpETSgYijbksoXpzSL3KsWBIs5huEHAd4WtYzHr
      jWyG22o3+KawecxbPzu8lcqhqZwbVZNp8G56jkuxNFJKmq7Nk3qRqt0dZNBCba8IVxO5QW+/
      IgRt1+Gb4uqZLNjjDJe/LtzKzPOiWRk50qkLlXrPO9Il/GJ+hfnYdG7f0LbqBQE/l3envN1X
      g6eNCv4I+ZzzjEi/F6fQa/FtcY2y3TmQPg61vTr9uYZwuktKydNG8cx260DKqWZrXxeW4xnm
      I0nMMa6iL+VU8VDTtbF9jxfNKo9qJYrd9lgWjwNXksDzZpXuOcsb+1Ky3XlzWnsVIYhqBh3P
      4V5lZ2IA3/M97la2+WxmhY7nnDmRbVQzMFXt3GkFzEYSzEUSNFybS9HUSMnWlXiGeq9wZG2l
      7Tr8283nB1qol+MpPs4vDHUcHDgBgiDgaf188sg3HYdzfnoPsNe/stqsTLVjtVyb3W6TnW7j
      zEc8K3aHt9Nz5E4g23RWiGsmdbvH14U1vi6s8qReYiGaxFL1fnyk8VZqlmvJHIkpBoI2242h
      +YH1Vp3N9jDF4oETYLfbOrdVQ0k/tfgGkF1mzRgSKB2jcFjstuj6Z59u9mVAy7X5IHuJh7Vd
      tqfk3TwrLMbSFPtMF3vo+i6FbsDnc1cIZMBOp0Gp16LmdJmNRmk69tiNYi4aH9umU+i0WI6n
      cHyPit2h4zm/GoCUkvXW+e6193yJ9gbwXc5FEvgyOFbxqeH28F5Rsaru9JiNJHg3PU9Sj/Ck
      UXjlfVa6ovJ2ahZVUUfqfrmBT7HbYrdbp36o5ycXiVDt2UOx0lI8yXvZWf5y4+lo6kkheNYo
      sdaqDt77qwEAxe758gsPw5Mg5flmPE7qFnHdJOhLk/pTrisp5VCPVbdS4KcfHmFEI3z4+ae8
      uPMNycvvEpFtnj58Qc8TfPb7D/n6r+/w2d/7HAGU1l9QrNu8c+saP3/1LVoixzsfvHVgBqPb
      z7AIIViKp0mZFo9rBaqvqNs2b8W5mZohqhnsdsY36222a7RH8LsGePy9pavsdloDpR1dUUib
      Jg23R9aKUO4Nf5em26XqHLzeIAao2t03IlesitMTjzgLrMTDPhRFiGPxVMb04eyM02oRz83h
      t2u4nk/X9tl++px4bo7ZfIz5K1cpr6+i4FNrhgslnp/Dd9rUVp8RXbyJbBSxD3m1h0+ahG7x
      cX6ZW5n5Y6lZHhcxzeBWZp4Ps5cG10mZFuqIHS0Uzx5d+wk5keByIkWAT8vrUXU6PGuW+bG8
      Rdez0fe9N2T5tvDksHs/eFXdnr6F9HUiqpnop6igcpqI6yYz/bYDIQTL8cxU79OEwkI0NfJv
      vXYH1dSpbr1gp9Bke3UNp9Ngs2izsjLD6pM1hLR59vAZAFakPzPQF/4QgmF3YMSCU4RgIZri
      d7OXeS+zQMqwTjy5d+BShMzaKSOCJwMe1Qp8V1qnZneRUmKpOjdTs/sIVEJcS+bJmtGxn6kr
      KnfKWyOJkAMkhir4zcwlPp9b5h8uXR9bVR8YwDTko+cBru9zPZl/3bcxBAF9wlwFKSUd18X1
      JSk9OjF7JYB30rMkRghm6LEobqeBj4HnwN/9J3/Ob353iwd3fsFzHZ4+eMrM1ev85u//A3Lx
      0Jt98ctPFDd38GI5GmsPCKJZrENp9UkbiCIU5qNJPs2v8NnsFa4mcsQ081iMC7qikDWj3EzO
      8PncVTJmlLrTxfbDIlbd6XKnvEHHc5AyjOuiuo4AoprOp/llriayLERTB3byPcxHk9Ts7shU
      6R58GVB1OsxGYqhC0B7TTj/4aUbRTmw9vk+5VCN/+S1q6w/w1QTXbyyhJLIYwqZetkmmNRpN
      iRq02Fjb4fqHH9LcfoGRXSJq+Dz56R6ZpStYqiCZz1DdLZGZCxfwxsNHzL/1Fp3dTVZXt1i4
      dpNcNs6Le/cQ0TRXrq8M3VPP91mIptjtNif+AK8al6IpMkYUKSU/Fov8UCwMZJBiukI+pg9t
      vFY/vTcbieMGQT9m+NVaorl5Pv9H8wfek1u+Sm756tD1r7xzM/zf9z7kynsfAjAzN3qjmKYY
      FsaEocCI7fsoAlJGlIVoAi8IA/xABkDo7hmqiqXqRDUDS9UH7osvRwuJ7P27QAyIBISAnu+y
      1akNxEI+yi3xsLZL07VRhcJCNMmN5AwPp6DELPdPB0+On2AZGMAozapLN96hU/uKSCxKw7R4
      9+MPKf78PcqNLBm1xcbDEu9+FGf9qYPdWuOTv/MFEsnu5hay0CbiN0nd+IC4IVj/+THJfIa1
      +0/IzOWRvkvhxUNsPY2slHj7s0/5+d99RSUqmH37Y0xtdDyyx4l5Kz3PN8XVczHzmtBNbqRC
      cbbn9Trf7B4Utmi7AXPS5J1shrZrI4Qg1Zdh2hPE0xWFqGYea5rppEgZESp2h+1OnY7roCkK
      OSvGpWgKTVGRUnKvunNAad6X4YIKpOTTmaWpRL8hzOaM00Or2J1BQL4fu90mi7E0Cd2k1G3h
      BgGC8LR0fI+u707UWNvD3sI3FHUsifHEb9Eub2IbeVIJg81H9/n5+5/3/VWEdyRBSgcjEkPV
      DIRTY/15gc0Xq1z55BOqT37h6aPndGolfv7qa3Z3ygDU1h9Qc2NsPryHdDv8zf/9F8TmFuj2
      JJbo8h//v78ac1fhl7A0nQ+yl6Z+EGcFU9V4P3tpsOM9ro3uV9pqtZm14ryVnuVmaobZSOKA
      GqQQghnr7NuWdUWl2GvxQ2mdnU6DhtujYnd4XC/ybXGNjudQtbsHFv9+VO0OW/2Ckhv41Owu
      Tdce22NkKBrmiAk/GCyfsdf5obTBi1aFnh8SLXgyoNBr8V1xbaoUc1Qz+sG0OnaeerB6hiJu
      KfnmX/81QbdKuVxH03UIAtAUHn/zNZUa2N117nx9j8V3rqB6XX7+4zc8vb/G3/mv/0vef2eJ
      9Y1dvEAQ+AHJ2QXe//wzli6HxKfFmuTv/2f/gLnZFGo0ye/+8T+kubPFwsoMv/z4ECs6ulK5
      vys0bUZ5L7MwMovwKmAoKh9lFw9kTsbtTL6URzaizUeTJ2I3Ow4EYXpxFNp93YOjGOVKfeG6
      L3ef811pja8LL/iuuHZgNw9kQNPpUbM7XIqmhwLqiKpzbUIst92pj6RCBwZxxFG/1GIsNZgN
      uJrIjXz9oBv0p/IOzxvnv9sya0b404XLdH0X2/eIaDod1+FudWuqY/G0EFF1PswtDqk9/lgs
      8PXOsLbXQizGn1++TLHbpNqf6ZVSoqsqCd1ixoqTNiM8rheOFN87KVQRcjId1RoybREAACAA
      SURBVJ4RUY2JM9gRTccP/KG6RcqIcDu/TMPpcb+2M5jlEIChqsQ0g0BKkobF5UQWQ9H4vrRO
      /VD9wVJ1nMA7csPImjGK3dbIUyShm7yTniWuh1lDIQQvmmWeHhoPHRjA03qFnyvnqwt0FBZj
      SaK6wk4n7JtRCIs5C9EU96rbr2R4PmfGeDczj6lqg3bn9XaVnudiqToPy40DemCWqvJ2LknL
      602stSR1iyuJLI8bhTNpSbkcz7Derh25sI4ygNBbGP0ZH2YX+bmyPdLI8laMj3OhgF3N6VKz
      uwQEVO1uOPFFmDJdjme4U9448vvcSIbFtKeNEq3++8NEQjA4STWhcD2ZZzEWku2Wei2eNUq0
      +qfVIAg+DunS60TD7VB3f/1xAyRrrSoRzeB2foUXzTLr7eqZ9L1rQuFqMs9SLD34gat2hx8r
      m/uu1yUXU3k7u0Db9VCFoOm3qbtHZ6wabo+7lW3yVhTXH95hXwYzVpylWGZk28Fh7EkyNUYY
      galo5CPj+YaeNctjT5hSr03N6VLoNg+ccppQuJWZJ21G0YSCE3gT44M9qEJhJhInb8Vwg1B5
      8351h7L9a23AkwEP6wViuknGjDITSZA0Iqw1qxR7rV9jgPSYitx5QzDmxw3FlCUx3SBnxk71
      u6hCsBhL8bvZK6zEM4PFH/bvl4aMzZM+qhrwyewsDj3cKQb69yCRFHtt4rp5KoUogIwR4Vb/
      xJqGNDdtRvgwd4nUoUp2Qje5PbM0VojOVDVcf3Jw+qxRHnLxPBnwuF5EFQIhBIaiEZtC7T3T
      D2yFEBiqhkBQsUc3wu10GgRS8qRe4q+3n/GsWabp2r+eAAqCvBVjdwwP+3mApWqYqhiZ+ux5
      Lt8W1w4U9AxFJW/FqdjtE8mNqkJBFYK8FR85qOHLYKwYXdPp8ahWOLFaY8O1WYql2WzXpxL5
      HoeEbpE2ozxvlrFUnRkrzmprfMt7RNXZ7TSp2GHKM6EbLMXSpMwICd0aDO4sxlIHMkWqUHgn
      PceTeolJ05zj0rxd36XjucQ0A08GXE3k+LmyNfabX4qmhto2gglnphf4/FjeHNIZGDzRsDEq
      ea4NYCmeJMCnMOL4tQMP+9Dh4AQ+uqLy+dxVWq5N1e7QcHq0PadfyJGEB61AHew8IcGULwNe
      NMs4QcBWp85Wp85KPMON5Mwgs6AIBV1R8fzhU8kJfOov0Woc9NsEPskv8ah+fEMyFBVFCFpu
      78CiE/3C1SgXMdJnXNvp/nrfnh+w2alzqc/QHFLAN/F8QUyLoCmCvBVlNpIIhQH7adFRCIXA
      o2OHfkq9Fj93Gn2tNZWkYdFynaG4KWfGuL7vOezBVDTimjlSIL3qdEPBwUM4sKXNRxPnllBV
      EHJD6opCy+0dYKuI6yZdzx0ZYFbsNjfEDKl+Pwr82nkZSDnQ3VKFMnBt/CDgy8LzoRbhtVaV
      nBUja4YpWqXf73NYpXJvkb2sB7/ZrrMcz/DbmZWwKtupU3e6Y+MbAcR0k4VoEtf3eTFip5dI
      pAw7MhUhDhTCkrrFDyOCz3BSrY0XSO6Wdw+sj7BApbAUC/ueVuJZCt3WyNaalXiG+WiScq89
      dKoJxIEMjecFgMv1ZB5VKHQ9h7brst1us+G02G49ZTmR4t3MzICAQAI3UvmhIDyhW9TGDNIf
      MABVUbieynK/ev4UxhdiCRJG6Bf/ZuYyT+pFdrpNoqrO26k5fqlu4Y/YiZURhTIhBCqCcawj
      bc8Zm4Wp9DpkjCg936Vsd8JUrKrT9V0UIQb57cf1l/8NO55Dry+9NBdNMhtJ4AQ+TbdHx3UG
      C1FTQmrEhG4SUXU8GfDl7rOJn91wunwxd+1A/ac44fTfaNfZbrWHnAwJbLQaCASf5BcwVJXb
      M8s8qRf7RhMGp3HdQFMUqnaHrBmlbLcHre0J3RrrTu52m3w2c5me7/FXG89w+jGGS8DjWhk3
      CPg4P0+h2+R5s0zPDwPohG6SNWOkjEj/9J/CAEK91QzPG9UT+cxnBUUI3krnw8yAlGy0an3f
      GBqBzXeldcwxDV7zkcnsYuOuNw4SycN6ge12fWgxRFSd97OXTo2PUxLOt+75uqI/HmiqcdgX
      n8r+sLja5wRt2r0j9YmdwKft2cR1k3a/kmv2A8lRMUehM7z492OjVed6KkvKsLBUjevJHAC7
      nSYSSct1aLnlA+/RhMLlRIbLiSxfF1ZH36cf8p+uNmuDxb8fq40qs9EoDw8phjZdm5V4lplI
      fOLU29D4va6ovJed5bvi1tg3vWpcS2YGGYm25/C0UTrwZQMp6fl+v+uw0/fqQ3/TkwF3K1sh
      pzxhpiJlRMhbcawxMqNRzSChWyMDtt1Ocyw/Z9tz+KG0znuZhVNLw06qG0gpKXbbPKoV6Xgu
      uqpyNZEhMqWQRs3ucr+6M3BXTEULC4uHduKkbrHjTh6WkUCp2yapm2y26zyuF48suIVcP2Va
      roOlaiNPgFg/G9YdQ9AmgSf14kjTXGtVmYskJj6Lkb/UYizJTqc1coj4VSNlmLyd/lUYrmJ3
      Rn5ZiWQ5nuYdbbbPJlanandGsh/sdps8aRSZiyS4npwZyu4oQvBueo67la0B+7CuqJiKNjLA
      2g8n8HlYLyD62ZKXxaRep6rd5fvi5mBn9ryAe9UCK4n02Pfsx/Nm+YCB2YGHKgVXE7lBrJG3
      4mTNGNvtyS4VhMRUTxolXjSPR6yw222GjNYczP2rQnA5nsWXwVBKdg+60o/dRvzUdv/ZWRMY
      +Ub+RQjBR7l56k7vlfOC7oeuqNyeWTzgp07K76tCoeXaPGuUjtx9AinZ7jSo9Dq8n10g3R++
      8IKQgazQbeLLkHD1aiLHTCTOt4W1qe674zmcFo3RpNblF83qSLek2GmTNKyxvTQQ/rajGsp8
      KdEVlY9zS7Q9B8f3UZWw3dk+Isdfd7o0jjgpxsGTAaaqkTOjdH0HVSjYvscv1W2klCR0C0vT
      6B3K5LybmaXjd0fK5u61qWStKKtjSNXGmoauqnw+t8xfb6++lnhAFYLfzi4S0TRqdgcn8NEU
      laRuoQllaIFHVB3b946tHm8HHj+WN/k4v0RSt3hQ2zlQ5fSlz2qrQlQzjqQm34/TYGGLacbE
      wtU4ynhX+txMXeLnytbIe7ZUjcvx7Nieetv3uFPeHExbqUIcWVhU4MSLf/91Y7rJrcw835fW
      D2SSqk6HuKGxFEtStXvoisJSPMVsNIbth+3d+9dEOFxj8qxZxlI1LFUbuY4nOosx3eD38yuv
      nCRXEwof5ucp2y3uVbcOfDFVCFRFwfd/PfWims71ZJ6Htd0TpR49GfBLZZv3s5dG1xh8b2wH
      5TikDYuq3X2pVOilfeqIUspBWnavYpo0LGojVFJiffKrq8kcm+06Pd/BD2Q/3RnnWjKH0k87
      Ht5IBAylMX0Z6r7risAdcbSpQhDXddwRM7fHxYtmhZhmUBsxoO8EHnOxGNdSWZ42SjxtFnlU
      30VXVOK6haYI3D6PbM3psLFPsXOc+U4llN3xXL4tbFB9BXPDUU3nnUye9VZlpPrHHhQElxNZ
      smaMhG5yr7YzcvEeBxkzOnbKLG/Fj8XadjM5Q8O1T8y7owjB57OXqTs9Sr1WXyKqn/YUKnHd
      JKabPK1XDnTBCgQZy6TrOQP3KGfGeCs9i6lo+P2eetv36HgOxW7zgJEuxzJstOsjg++cGcVS
      TTZadezARxWCrBnhWirLz5XtUyNVyFnjn8N8NEmx2x7pvkU1g9/MLPOiOdxuAf0uU98/UMeY
      Kl0Q1XT+ZP4y96pFnjcqZ8ZeNh+Ncys7y93y5sTFD2ET3Ea7xlwkiRP4FE9BC6tmd8c2Yc1Y
      8bAYM8XstCAUd5uPpmg6vUHn4XEwY8W4U94YeWy7BHR9l2KvhaqEBrE3jmhoypCWctlus96q
      shhLc6e8cSBFG1H1QW9P1owR1fSx7dhCCC4nUliagu37zETi5MwopV77VBlFbG98M9x2ezx7
      XsdzwvaTMYkKieTzuSustarsdpvYvje9RpiqKLyfnWUxluCXSmEsRfVJENMMbmVnWIgmeNIo
      Hrn49+AGPk8ahQET28tCIskYUarOwd0nqVtkrShCCO5Vt4/8nLlIMpxGEoKP80v8WN6cuk17
      L1Vb6o3ucx953yIgZZq8k57jp8poVu9Ct0XD6Q3VJ7q+i6YorMSz4Wf1A85RLogb+HxdXB3E
      NtudGlcTp09QIAl7fTYPGbKl6ke64rvd1tg0sCoUTFUjb8Vw/IByrz2dC3QYQT///LReodzr
      nKhtVwApw+JqMsNiLBn69TLgP+48OxajmkCQMSOnRvZ6LZknqhrsdOt4QUDXcwdtE5aqIZET
      H0JCN7menCGQAYaqEddNpJT9LsjRrsX+94bEtSeTVJqNJOh57sjsz14T26gnlTNjfJxfGvx3
      07H54dBJkTKssGA21MIAaSNK+RQJCkxV40/mrrLZqbParIQp7lgGTVF4UDt6GH4hOlodc9ZK
      0Ha9A2vlRAawh1Ao2++LFYeSp03H7gsy9PtsECiKCAMVzSBrRchbUWK6MVSIajg9vimOrghO
      wmny3i/F0rydngPgcb0wUpNgOZ7BDwLKdljqV4RCQjfxgrCcvz+wNBSVS7EUVxN5vMCn47k8
      bZSoOV0UBPPRJFkzStIwqdidEwfyexiVIYNwRy312iO11haiSZZiGbY7DepOd1Bx1RWVnBVl
      IZqi7dncrYwujmridPvHoprO5USWZ43SYDPUFYW4Zk1laH86f5Wa0+VFsxI21ikqoNCwhw34
      pZTihRBYmoalhSLON1K5QVneD8LMgeh3WmqKcqR204n9yFMMSvYKT74MxtL2tVyb2/llAhng
      BRJFCLY79aGmOAgLYy+aFTShshhL87xZotZ3sQIkFbvFSjyNrqg8b7y8rKonA7JmtD9tFX5a
      RNVJm1EkcmRQ3nIdvi6sDl2764enSbPfmj0OKcN6ad3o/VCEwpP6Qb5SNwiGXNNRSBsRLFVn
      IWowF0niy4C63eObwvrI3/alDGAUhBDoQkU/AVnDngDycRHTT49OJLqXd5eMde32DFURCoYa
      Fs9eNMsjX7uH1VYZN/CHXLWe7/GoXmAukjxWnWESLFXni7l5tjp1njcqNF2Hn8rh7r03nxu+
      TqPreUPks4dR6rX7vfrmEFdnVDO4kZqh1Ou81NzCfhzmR9qPrBkZm15WheBaMjfgZQ0lqBTu
      V8drCpwr5TRT1Y7NTakJhctTUhAehTAuCSvCexJGo5AzDzJWtFz7SBfADYKxtYSG0+tPtJ0O
      ynYbTwa8aA7Lq0rCmd/fz10lZ8WnVqDseGF1dj6SRFdUVKFgqTor8dA3z4yhHTkuFASXJsic
      Xoqm+CC7MJhd2MPegr9b2eJvdp/xuF7AlwEVuzN5vvlU7vqUoAjBciw9FevXHhaiKfKROFZD
      pzdl9mgcUkZkcAIIIbiZmqHt2nT8g7MHcd2k0G0S0QzimjG16zZpfzyqx+g4sH2Px/Xi2GRC
      zelS7LVYP6bmWs3pcjM1w7Vknp+rWzScHg9quyhCDGYtXhYLsSTz0RSrrcpQClhXVFJmBFUo
      fDZ7ma73a0v4ntQUhCRea61qXyxv8h7/UkHwWSCQkp/KmwcGm8chphl9YtVwoPww5cVxIICP
      c0tkDymn7PHUdz2Hit2l4fQO7JoZI8LVZI67lc0jHYCriRzPR7hKc5EEFbt9ZAvzcSAQEz8v
      quknanFZjqXxpD8yy2Ioo9sNpoWlavxu9jKGqtFwuvxS3T6QcdOEit+PLzVFCZsZU3k227WR
      v6sAoqo1MWV/7gwAwvnNe9WdiQRNRr//f28HUPuktCdlUliOpUNjGhGoSyl51iyH865j7sVU
      1Yn1i7QR4ZN8WKVcbVUGWasZK85bqVm+Lr44VQNQUCa6ZeoJJ9biuoHteyNPvbwVwwvkiVLS
      uqLwSX7pwEmyp2ZTt3s8rBdGZvrC1nVj7Iapok1MW5+rGGAPmqLyfvYS72cukTGjYQYJgSYU
      krrFW6lZTFU78IB9GY5En4Q6fS6S4EZqeMZ0D13f5VljfJDrBP7AJx6FMBOm8eXOGk/rNXqu
      xA8ULkUzA34h7ZR1D+ai4weBwkaxk+kAuEEwIdgVfJRbZGGCDz8KUU3ndn55yI1ShUJCtyZy
      GXU8Z2wGShPK2DbqwWuOdaevEIoQzEUTzEbi4bEnw3SjJhS6vjsy5QjhYpbAVrt25A6nCMGV
      eJbLidzEKbBSt31knaHtOfxu9jJrrSqlXgsvCFAVBdsP6Lo+TecQ12YQ8KhWZrPV4OP8QjjX
      /JIxzB5MVeN6Mk/d7o7k9tkT8Wi3jt+iEdMMJHKIzQ3CXiFNUXgvM8+MFedZszxxmF8TClkr
      yowVp+2F0qZxPWSX3tuM6k73SEKAQEqimjEUA4YFScn2BBWac2sAexBCoAn1wI1OWoxCCN5K
      zrAQTbLRqlG2hxunBAKjT5hq+x73azv9HTxkFUga1oBOD0ZTxx+GF0hUofBuZr7vpwY8a1R5
      WJscl7Q9l69211mOH2/XnIScGUNKyZVklueNCl0vJJe1VI2VeIaleJpir3Ui4fGMGWE2khjq
      KZqx4izEQpEP0d+8ZiJxGk6Pit2m5YZMHKoQmKpO13dou6Es7P4mw3CeN6ROnLHitKecR3k7
      PUfd6bDdbuDLgJV4lkuxFG7gc786XgPt3BvAKEQ0HUsdnfXJmtE+/XiEZDZCEAT0fDdsHuu2
      KPfafQoVbyy7mSoEaSPKUjxN1oxhTTFiqCnKgO1ZFQpVp8ujIxb/Hnwp2Wg1ieij53GPi47n
      8GXh+WCj0JRhRrucGRvbIz8OSp+A6lmjhCoUNKEwGwkXetaMDWvwCkHajBxgZt4bchnX7SnZ
      Y8jbYi6SIGNOK+cqqdndQS3lWbNEqdfiVmaelUSG543RU2rnMgY4CqpQeDc9d4ApGsI2hv05
      egEDLpsn9SJbnfpUxSZfSsp2mx/Lm/xQWsdUtCMHQvJWbDC5JqXkQa10rKXsyQDk6TyO2iHq
      FE8GPKkXDvQYaYrCjdTMqLePRUTVeFTbpdhrDVo+KnZnQJh1FNzA58fyxtTCJrvdJpvt6pB8
      0mEYisqjWmGoga/h9rhT3uBqIjM2FngjDQAga8W4PbNCXDdRhcKlaGqILCmQkieNIj+WN04s
      AVVzutyrbU+cKzVVjZv7FlPXc6kcQyN4D74MY5iTwpiQAJDAi2a537/lsd6q0nbtkdJMozAX
      STAq/O357lT1BCklj+uFY5MXN10b/Qhp3IQxPn7q+eFJ/+nMEukRRvDGGkDXc7lb3qTlhnqx
      W506P5TWB/6+LwN+qW6z1qq+tFMRSIkdeFiqdmCRhWJtChFV4+fKFverO3Q8h4brnOiaPd/j
      aiLP7AmMIK6bXD1CO63tOtScLt8UVnlUL7DaqtD27D4r3mjj0RWVt1IzvJWaGcv7OQ1rXcu1
      T17tFnApmhw6B/Y8gegRfKcNp4ulafxuboWbqfyBTOEbGQPI/s5+2Oobbo8XzXKoIVUrvPSE
      2GF40udKPEvOiuMGPl3f5Um9OKjiNtxwems+Mh0rw2EEfZa6W+l5LEVjvX208QrCaviN1MyR
      C1EIweN6YcgNlEhW4hkSuknV6fZV611MRWMhliRvxdFVFU0ZXVuYJkba6Y4fZDkKgZRkrShX
      kzl2Ok3KvTaWFma6YpoxNiO4hz1yNCEga0XwpM92p4HrB2+oASCpjfEjK3aHzU59aCrqtLDa
      qpIxo+StGN8U14acAifw2e2ebKfThEKx0+ZxrUzHc0LWNENHU8XQIEvIoBBjKZYOmaSFIKGb
      E6kt45o5dnC97nTJWTEqvc7AXdyrfzxvlFmIppiPplg7RLcogCAQfLMbDrELBHHdYD6aYD6a
      GNAWjmNmmxZVu0NMM9ntNuj5Li0v7KG6lZknZ8UmiorkrRjlXpuHtcIBV1hRzmkl+CgEUvLl
      7vORWSBL1fECf+omr5Mgqhnczi/z1e7zkdexVJ1azz32PSgIguBgNVsRgi/ml0kYBqutKsVu
      sy9lmuByPDvIPO21oe92GjyqD3c/GorKR7klfiitj7yvqBZWeCdVo9NGhJwVZbvTwOuTC3c9
      fywFTNIw+SS/SMIw+ffbT4416HQYcd3E9f2h00sTCp/PXeVRffSJnzNj5K04D8bMWbyRBgDw
      tF4cSf6qCuWVKN7fTM2w2a6NLLPPRhK4Pqy3jncKCcnIfPVSPEnGModozTNmlI9zi3Q8dyAl
      KujTuisKju/1pVnDztakYVHui1QchpTTjVVcT+a5kshS7rX5trAxNr++B1NV+WL+Mj+U1l9q
      aGaSYMatzDxzkQRPGyW2+zoAuhLqHWeMKN+XNseml9/YIPhKMsfCvsBIIVQ6P62e9KOw2a4N
      GJH3Q0EwH0lyI5WdmJU5jIwZIWGMzsjU7O7ITEvV7rDVaXCntEHN6eLLAE8G2IFHVDP4Yu4a
      +X68Uuy1BpNo+9PHqlDCwtmU97nRruEGPnfLO0cufgDb97lT3MKYkEWbBtqE37LrudytbLPR
      quMGATHN5OPcMtcSeZ42yhPXxBt3Akgpabg91lpVup6LKsKxwtB/bXO/9up0zm7nl2m7Duvt
      Co4fsiA7foCUAiHC7sXWFBmhhG7w+fwKT2plntaHT7WsZeExOs1nKtrY2sbbqdmRreV77pAv
      A2KawXqrxrMjBnr2YyGa4sUxBRUzlkXPPznL4LVEntVWZeTpPmokM6YZvJ9d4I9jSHcH7z3x
      Hb0m1Jwud8obBwo9bdcmZUROdTB7GlTtDteSeS7FUti+x5c7q3hBX3RDgkdAXNcxVZ3SiLqA
      IgRLsSS3smFz3410ju1284BbFdV03svO8WNljGjchBT5zpgsmBP4IQPGHh2kPJ5rstM+fnZN
      6ZezTrLbakJhsU8S9rTxKxFuSD8TH1J9gbA3a1ID4+CzT3A/rw0hu8KwJpcrA54f0Xh1Ftgb
      w1SEoNQbLcPU8z0+nVnq8+jXKHRbCBESPK3E00S1Xxu/TFXlw/wcj2olAgl5K8qNdA5L1Zix
      4kPt4RE1HB5/MOLUU4UgoVsjm9bCv//qBpnHHEU9WYJBcOmQrNK0iGgG3xbXBiddVDNYiCbJ
      WXFarj3SAGC8HNN+vFExQIAcW9EdxXlz1thP2X2YtHU/Op7DVqdKsddACp8An+1OjRf7FBWb
      bo+vC6vcq23j4aKqPpeTKSL9Ik/Csdh8UafR7KEJhbwV55P8Egt9VonDuJLIsRRLj2zhSOpW
      2EvleXhBQN6KTS3It5dqPQluJGdI6sdTI9WEQtPt0fXdUNGH8Pc0FI2Ebk6sZI/6XYY+/1h3
      85qhEApEjEqnmar20iORx8X+nXBcr4kgpCHvHvJ/JZKdfk77w9wiv1S2D/Dju0HAveoOt3Mr
      /PN/8W/5P/7fb3E8H11X+ezWZf7X//G/INLv6f8wu8hGu0ah20QIWIplmIskwqJaZoGHtV9l
      jVRUWnbA//XsUZ/5WWE2EsVUdHrB0b/ftWSOF43R2a9JiOvGoFv2YW13ZCbqMC716VhGDe2v
      t6ssRJPENIPlWJr1Q3WAhWiSxViarSOqz+of/vCHPxzrm7xGiD5L8WFXQAA3U7OnQo94HOiK
      ykp/ID+i6TQce+iESugG9oSF1fO9kWwREDaPffntc/63//M/4PeT7UEgWd+tUm/1+LPbNwFJ
      yW6z02nQ6ks7VZ0OLdcmoulkzRiLsRQzkTimYvCkWqfmOHhBWG3wpaThODQcF0NVUCf03Vzr
      nyqBlMcWU5yLJrhXLfKwVqLteihCIabpQ/FHSHQW5Z30HMvxDGut6tj6wXI82x/u0bGD8HdM
      6hZXEzmuJfNYqsZOtzGxtvFGnQAA85EkSHjRCvvcTVXjrdQsWTOKNobz/qygKypdz+F5s0LT
      scM51WicoM8VdCmWZLfXoNybvFtOGv38l1/eG/nv/+a7R/zP/92fs9atsHWo6h0E4cxusdfi
      nfQc85EklqLzY3EVZ8xikBLqPY+bmTRtr3cgq7InF7vbbVLqtcla0WO1Ukc0nSf18r6FKPG8
      IKxj5JeoOV2eNUp0PRddUYmqxoBaMqGbI5Vj4rpJIAMe1grs7muz6PkuhqqG4n1CcCM5w09j
      CL3gDTQA2MsJi740khcSTynhQMurNABFCL4prh+IPQTwQfbSYCRxP0X3OGhCQShiiLXNUDS0
      MS3Svh/wrF6i4I0/9QIpeVDdJaLqbLU6dCbEKeHrwfYkfzp/jXa/3bnjOjyo7eIGcrDg91jt
      psnqRPpcnC+aw60KW+0G11MZHteLg3iq67ustqpsdxr8ZnaFq4k8Fbtz4LlqQuF6coYHtd2h
      mQ478Pi5ssXt/DJpM8psJM7leGasQMYbFQRDSPL6Y78LVBI+5JrT5YfSxisqgf2KpmMPBd4S
      eLIvU3VYfmkUYroxNN8ggLfTs/y9T26OfM+tGwuU/aPdkIBQzX57ytRloRO6YknDIqVbPGuW
      Rxa8AiSz0dgRQWiEL+Yvj+3nl8Dd8s5I/S8n8LlX2SGq6fx2ZoWsGesPKkX4dGYFpX8ijfvc
      F83KQAL3Zr+bdZTc1Bt1AgQy4NEYQTRfSlqOPTEvfpoIW6FHi2TbvosX+BiqxlwkMdHFgbB1
      Ih+J854IA1YvCAYjgf/tP/6U7x6s8+9/eDJ4/ZWFLP/0v/mCppwu7RvO1U73vbwgJBdQgbrT
      GytOB2E25vcLV9lo1fsujk9CD0dKF6IJ8pFYfyrMghFrVRFiKDmwHzWnS8dzWW1VqNptZP/f
      njdKQ/Q1h9F0e0gku50m250GHc/FUFQ8KYhqOr4MUFDeLANoe+7ETI8E9DHksKeNtBnFVDS6
      neH7UYXKo3KDB6Va6JpZCro++p5yVoy5SJKdToP7tZ3ByfG0UcJUNRaiKf7Z//Rf8Vc/POL7
      p+tcns3yn3/+Prtuk2ZrOgOQMDG43Y+Ipg12ylFEuvvhBQFrzRoPqr8qNp6BNwAAGzpJREFU
      zbiB5FoyO2jrCKRkJhIjY1pDAivXkxk2jmj5ftYoUegdtJ5Cr3Wk5oJA8HNlZ+Qp4QYqt/NL
      RDT9zTKAo7s2BIux9FDT2FngcjyLrqjsdpsHXAT5/7d3XutxnGl+/30VuzpnZBIkxTAccjSK
      uzse23viq/AF+Db8+E58CT6xj3ywYXZHM6uRVqNAiiABiiBy51S5fFDVTTS6qtGkSIoA/T/Q
      owe5m/V+4X3/IQj4crfD9wcvjLJUSfCfbpRZLahTMUcrkYrNC3x+jPG9edQ5pqJn2Ok3UVdl
      Pl+9CsDj4clkPrDw35vL8411vkZ5I5efyBvnBfRBuOt+15xmnvYci78c7/EfVzc5HHV50m1g
      +y4CQU5TSckamiSzkS1QNdIcjrqJJDkJkRj0Z3vuXA/ReZrvoWvzbXOfT2sbF6sA0oqWmG4Y
      fl5lM1fhxOy/sgRyEYTRoeGQ5aPqOludEwauhSrJWLbM9wfTD4XjB/xxp8N///uPkaSw/ZiJ
      XosQgtaZS96L7/N41D2eUVI1rAG6u/g/nSIkbpWqHA9N9ofJxzFdlpGkgD/s7xAEAUXdIKNo
      ie+lImQCZne2tm3ytNdku3daFx3+35VsnvXsC8HQRraU6Oi3minQS9AvyJLE1Ww5VgyjS0qU
      aJm8YLbtER3bvFiXYFkIruXKiZ+vG1ma1pAr2fJCIu1XgSYp3I4c5IQIe9af1jb4/fIN/m7p
      GkMz3nFt4Lgc9EcU9TQlPY12KhthXhZwkrbY9X10abEiqKQyDFyb25USNSPew9NQFAxV8Kzf
      pmObdB2Ln/pterY9Yz4gCAdi86SbzxJ8mXYHrZDQaIdWlj5+7E5TN7LcLtapprKxP7+sZ6gZ
      WVbSBSQEspDQJJmVdJ675ZWFHAK7jnmxdgAhxGTwtN170VdWIg3AdhTQLBi3Sl9vS1QWEvfK
      KzPRpaF3Ufgwp5RkmkDS57LRSP+sYDyn6khCwrZnz+ICuFms811z/1wKeMMcTI4DmipxN13G
      dgMGroMuy6xmcjStfuxwKwA0SeV+qUbPMZGFRDWVIaNoHJtDHsfYjaQVFUWIWP6q7Xs867fY
      6k43M+pGlqJmEBBSw4uagRCCzVyZjj2amhznVB1dkvnj4fbkCGRICr+prJFRtIUNxgQXrAsE
      L4pgNVNg4ISyweeDzhTJKoBoKqgzcO3XohFQhMS98uqEQZmEj5Yr/K+HTxk60w/tRj7DRj5+
      NZOE4F55le+a+5Mzry4r3C2t0DAHsYS2op6mnsoilVd4cIrqcBrjh+F0U8ALfDpOn8/rmxN7
      RNf3eNRN1tX2HIu0olI3wr/fi7yWcqrK9XyJJ6eo0Zok81F1hSOzG9sgUCWZx71Zy5imNeCD
      QpXcGa6Q4/sUtDQj10WRJK7myuiSzNeN6bb3yHN40D7kk+oGhqyiy8q53LCCZly8AoAXIRxF
      3cAPAhpm/KRPCMFvK2v80D74Wa7FWVXn16WVSfL4PJTTKf7bJ3f4n//+iOYoXNGvFrL8199c
      58Tq03csRq6D5bm4vodHEPkXhUZTWUVHl1WW0jk0SWY9U6RtDyeh1RDehW5FXqY1I0dBM6Ip
      bRiEp0gSm7kKhqzyVWOWRu0FASfmgCvZcQH451o/2p5Hxx+x3WuGodRRwSmSTEkPW59FzWA5
      nSWlqKRVlaY5nNIqyEKilsomNina1miqAFrWkK9OdqeoDHuDDhlVi13SOvYI03MxFJXNOUHg
      EB4Lc6p+MQtgGkHiP54fhJz3jyobPI6cwl4mSyw0Vw2tAP1x5tk5dwsB3KuX+R9//wnfNU5o
      WQMUJeDJ4BAWTRFyrDACNaI0V1MZynoGL/BJyWpkwvXiOKXJCgXN4Fk/DMRwPZ+tzvHcM/rp
      jpoW2b0kLRICwdEozBM4e7Z2fA8HD9t0qBuZyeAvzOy9wk+DFi1riCGrXM9XsTw3sQBO34WC
      IOD71uEMj+fEHCR2hoDJbr+RLTJ07RmSHIRHqGUjx1b35OIXgEBQTmViPWdSsspfTnbp2COC
      IDxqZBQVRZLoOVZsMShCIq+l0GWV41GfY3MwcR8uagb3yitzW5Cm67A76IQudJ4LMriveALz
      oil32x6Fr1M32MiWJjYfk6/zfb5t7k2dfd3IKykO4yHe4+4JtueRVTVWM3meJNgHyoJzW8te
      EPBtcx9ZSBMaiOk5dO0RQ9dm6NiMXIeruTKGrM6c01VJpnpquGV5LoMEfYdIeD/TSthiNSNO
      0e1inZqR5SAahKmSjCpJtKwR37UOop91wSSRcbA8l7+c7E4JYnRZwfG82G7ArUKN1UwB03U4
      GHU5NvuoQmYjW5poaL84ehrbmsyqOp/XrkzsPsawI07SeVGorwN5Ved6vhry+IWgbQ358uRZ
      7NeW9DRd25z8TeMGwVjCOYYqyWhCoWObUx/Pa7O5YPOgSTK/X7lO37FmlHvj3381V+Fk1J/4
      KQmgFIV0q5JMSU+TUTT+Yf9x7CK1limgSdLU6i4LiayiMfSc0JlbCJbSeW7kXxhhHY36/LW5
      N/UzL0UBQLgKHpuhoVNW0Xk+6CRSEBQh8bvlazzrt6ZWNoHgdrHO0HXY6SWvePfKKxMP/CAI
      2Bt22OqcvNao0EVQS2W4Vaxjei5fJRTAjXyVJSNPw+xHecfhgC0Ouqxwr7RCxzaj46NBwxy8
      lF4Y4G5piYNhN/GoEibBbNKJIpbipvsFzcD1/VgtwGe1K5R0g65j0rZGyJLE3qAda7tY0Aw+
      rm5geg5fHD6dYQlc+CPQGHJkgwFhp+P7aIuLgxv47A7aM9t6QMCjzvG5BLaubbKSzmN6Dj+0
      DqcuqG8Tx+aA1uFTrucrsQNCQdgvNxSV9ah9/O+N+CR5CHdSy3O4ln8xa9lKKJZ5OBj25spT
      Tc+la5v82DlKpLZ07BFSRIc+/WCnFY29QZemNWQlnedKrszxqJfoOdqxRxwMu7SsYSxF5tIU
      wBQW8LhJGjB5gX9ux0gWEi1ryLfN/Z/VXXodcCOCYEpWQmOt6JWHw6rqDFvzPCXX2c+/yusb
      ec657/9W9ziW538afhBgKAq/rayxO+jwuNOgZ9v07PD7Hnca3Csv03Pnq8saZj/WlAAuaQFI
      QpBX9USXCEmEF8okm8BaKhsbKD1GQMBXJ8/figHXojA9l6yqs5LOIUUT6qyiz3StUrIyd3U+
      u/vJkvTS88S0ouL6UiKFQsDCLtFNa8jQc9jpzpLmvCDgr40DKsZ8nfHQTXbpu1BUiEUhhOB6
      voqUwI3eyBRZz5Zi88QyisbtYj1RUK1KMk97rXfq4R9j7JCwki6QU1OxLdt5+V2KJFEzpod1
      LytiD7/H4Pocp+rzholn8aB1mPgA+wT0z0mRyc/JCbuUBQChSP3D6tqUdbYsJK7lynxQqKHL
      CvfLqzOBy7qsstNrci1f4VrUslOiDkMllcGNPHXeVXRsk28ae7gJ0sclI8d6Zta9WhKCu6Xl
      GQe3lczLRTeFbtU5qqkMN/LVqd6+KsncLNQnd7VFMU+TAJBRUolDyrSisZmrJMpELk0X6CyC
      IGB/2I38O20yqs6vistTPjwQnvmHjs3j7slU2qBAcKdYZzVTmLjRvWvHnnlYMnLcK6/EkgLN
      yPX5cNhFFjJ1I8t6tkgm0uGeRhAEfN14nui9cxbVVNjOPDH70RArHB7WUzluFmqokkzHNvny
      5KeFX0tK0ujYyUemK9kiN4tVHrQPaJiDyfJU1tPcKS5jKCp/Onoa21G6lHeAIAjY7jWmwpM7
      9ohvW3t8Ur0yIa5BuCv4QTATtRkQ8GPneHIk+La5f2EefgjjhbI9nWu58uSh9oOA7e4Jzwat
      CYnMD1x6rjkRkYcf89ntdzgYhlx9/cwFOwmKJNF1RrTt6btXEIQWMJbncL+yRl7T51o6nkZo
      pbLEF4fPEnfetUweXVb4TXkNy3MxPRddVkidYtxezZZjxfGX8gjk+F7s5LLvWLHe/a0Ejxov
      8OnaJg9ah794t+dVsN1t0I5WvXFE0U6/OSMi6domX53sYroOfuDz9ckeP7QPadkjBq5N0xpO
      MpjjdhRFSKym88hifoJnyx7xoHWAQLCZryz0Gq5kS2RUjVvFauwx5laxOgnhE0KQUlSKuoFx
      ZqevG1lWY45el3IHMCMXsTjEdUDO8t1P48QccHSOpvddhU/Ag9YBn9evMnBtns8JkbB8lye9
      BjlVTxwg+oHPZ7UrIbXBdRCEgv6ynuZx92Qht+gjs0/HHrGWLjBwrLnBFrqscDjq8bTXRAhB
      UdcxFB3bc0kpKuuZAiXdOJefBWFx/Kq0jCSkqd95KQtAl9VEyw5D0QiCIDSIDQI0WaFmZNnq
      nswMksb/ABcZfdeO8oDPv7o3zQG9mHPyGF4Q0HNMNrLTtvB+EExl/Z6Ho1Gfop7mVqFOSlbZ
      HbSmdlhDVqkZWZ4P2lhB9PEgYOjZ5DSdDysbCz30ZyGJ8F63ZOTYHbRo2xdMELMoNElmNV3g
      +RkymCbJ2J7Lvx7uROHR4bZeM7LcKtR40m1MSFp5NYWhqBe+ACA0Eass0Hp0Ag/PO4cW7Xt0
      7BFHo5BZOxbHzHNfO4uha9O2RjzsHE40HUXNCCncUQb0ToIdy+Gox81CfSG7mTgIISin0pRT
      6TCT7bJ2gfzAZ6fX5GAYJoenFY1BxMOPgyrJ3Csvo8sqEgJFkviXw+3EduJFgyJJ+Odc4lOy
      EuVwJa/m1VSGljWc2k1W03mORr2FZIgQJsGPIuOt06gbOe6VVhBC8KB1MLOAjfE39c2FtBmL
      4FJegiEUmFzPV/nbpWv8buk6spDnKoQc3+Pb5gGKkMioGvvDzqV5+IGFXkvNyEU98/jjhSbJ
      Mw8/wN7w5RIgTS9+Mns06k06Q3ktXrusSvLM7Obn4NIWwBiSEHRs81xzKgiLYKfXxA8Cng9e
      MdP2HUZ6js2JLCRcL+BZv0NBS81M0cMc4krigz4vSPzs7ykkPNxASGGPHCnOTqEFocX66zQ8
      uJR3gLN4mbzg41GfJSN3LlHrIkKVZO4Ul9juNSa7oYgs5zuWxRP7Res4o2pcz5fwg4CMGk7B
      u3MuyBvZEsejPi17fkrPB4UashCxl2ZFSDStIV83nuP4oYO0Loc5AKoks5IuTMTyrwvvRQG8
      zMPs+N7c1txFRscyuV9eZTmdZ+jaeH6Aoaj8+fDZTNTpwLFx/IAPCi/69XktFesTpEoydSPH
      cjrPg/ZB7NRYjmYFipCQhCCr6jMt6bxmsNV9Qb/2Ah/P89nMVqa8hF4n3osCOCshnAtBYgj3
      RYdPMOHRj8XnlucmMjMb5oAb+TId2+TE7GP7LllVw/TcyVQ8rajcLS3TsUfs9sPgDIkwZyCn
      ppCjh71lDdkdtAmixWXM9ddlFVWSWEkXeJJgkLU7aLGWKbzWlX+M96IAClpqoTsAhNvw21Z2
      vU20rdEUI1SOVuS4lqMsJB60D2O1xUtGlmv5KhlFY7vbmFGNuR5UdJm7pWW+a+3PJML4QUDf
      sbiRr1GJtMBJ77vjh/LNN2F1dukvwRBSgOe5r51GITJnuqzo2uaUI4QiSYkUacd3EoX1x2af
      ljWg71hTnKvT2Bt22ek1E+9goY15Y/L3JMVM5dTUGzP9fi8KQJcVbhaS+eljlPX0XO74ZcDI
      c0Irecfir809/vVwGztwSCvK5CFTJYlbxeq5mWE7vSb757RAn/abcz8/cO3J/OBarjJj96gI
      iRuF6hs5/sB7cgQSQkQceMGjznEsq3PZyHGntMRW53wH5YsMJ5rkftvcm+rFCwG/qS6TVw0y
      qkrLGvFsMN8KxfE92tZ8OeJ5Y1ZJCDqWyVanSdsyCQIfBFQNg5yWYj1TfK19/7N4LwoAxkVQ
      oGZkOBz2aNsjWqaF5XpczZW4WSwjSxL2BWR9viy2usczg6gA2B92WK8VEUKcOzUeI62oc42q
      6kaOhtVPdPT2vIB/2ns6Q17sCJf75Qqa/GqRrIvivSkAiOiysspGtsT+gclWs08A/NQd8aDZ
      4r9c3cRZKDXd4U//+x9IVctc2VzBkfPUKmke/vnP2Kjc/u2H/PjHf2Tp7mcowz0ePjnBSGe4
      ulbk8ZPn6JkC60sG3z/YJ5PLcvvmMn/50/eUVlbJOD286gYp6wjLDTg+GVFfX2PUPuHG7U0e
      P3pG72CXkZ/m5p01nm4fUF1bRZYDrn1wfaH3YZggIRy54fFIEYLMAlQDgeBavkLLHsVO2eUo
      4T2ralMJ72Ookkx7FM/c7dgmD1sn3K8uLfSaXhXvxR3gLJ502vz1ZNqg9Xg04g97zxe0Tgww
      Bw5GOo1vjzBNF7t7hKUWuP/ZR6jChlSWg51tbGvEjd9+gjnosL31jI//w9+imi1afYtrH35E
      NeOzf9DGQ8JIp3Asieb+U3qtJv1uByVloKd0lmpZ/u//+QPX7t7l5p1rrN+6ixrYIGukUim6
      ncUn12dNvcbQZWUSrJ1RNErafAJdWU8zcp1Jf/80BKEG4c9HP/GwfYQXhL79qiSTkhXW0gU2
      s9W5FOr9QfelrCxfBe9lAWx34jsbe/0+dkzmVxyK9WXWr19lnDwkyQpetLI2nz6m2Ryy/9Mu
      vuvww799yQf3P0REcRKeHyBH77zjuMiKzNKVq6ysLQGCazfW2N7aRZIV1m7coFwpYA5NUrqC
      ddoqXcisXLtGbXkxcckYG5lSLJ0gFZnp/vPBY7442kGRpNikeQgf8JY15Jvm8+iiG7BshLLH
      X5eW0WUFNwjzxsZhhl4Q8Df1Tf5u6Tq3i0uJnKMxHN9fgMT983ChgrJfFx532nSs2eGPJAS1
      tL5A1GrAwfYTmu0OpXqFne8foOaq6P6Ap9u7SOki9z/9kHJeg1SeK7dvU8wbFAppvvvyG9L1
      NWpFg8ff/4herLG2WuLpw0cMTJdKtUhhdRW716Zcr/P8yU/4yPgB3P/0Pod7RxSKOWQ9jaHB
      zo+Psd2AtOLxdOsZhXodVZm/rl3PV1hO5xm54fEjJasEQcDAtTE9By/wcXyPoWtHQpT0RF9h
      KApLRjRJPvNwjjyHO8UwPGSnNxtL6gb+JERPCEFAwE43eepe0FJs5ktvrAMEl1gUPw8Pmk3+
      6fmsbfhaNstGPsXBJdAAzMPvljbJqDpBEK6v48CKJGQUjU9rVxEizO0K+Tqz7x/A7UIdVVL4
      OsGB7nYkSOnaoaXhD42TRNOqz5fWWcu+nIPEy+K9ugSPcatU4mAw4FH7xSpV0HR+v7rGoXn5
      WKCnISEmfkhCCIIgmCuVhLBX37KGE4OAeceSAMhpOgIR+3WdKOZ03PuXhURaUaZCvCUhuFuu
      s5pJtnd/XXgvC0ASgv+8vs6tUokvj/ZxfI/rhQKyJKZ8hC4jNFmeyhZwfPfcJBUIc3fHBVDQ
      jAQvUkFZT0dZAGUed6cnxFlVm2GBeoFPMaXzcX6NjhWGe9SNLIaivNGjzxjvZQFAeB79oXU0
      CWr+sd1gu9viwzfcdvulkVH0MxdgQaKA+gy2u41w8hsEKELGPXULEAiW03kedxt0bRNZiMj+
      REWWBLVUlr5r8aw/ezfou2EEU82YH379JvDeFsBWu0XDnJ5iOr7Pw3aDlPJ2wrZ/CRT0aaqH
      JsmkZW3i1Z+EvUF3hgadUTQ2Iydpz/fZ6pzMyiJVwSflDTRZjo00fYFf5ir63hbA8Sje0nzo
      OBR0A/cSCmIgFJ//1GtyOOph+x4ZRSOn6XMLQJOUWKPbgWujSTJlPcO/HG7HaoL7jsWT3gl3
      iktU9UzsDpBWNIxzQrnfFN7LOQCQOGKXhHhp78qLAlWS2Ok1eNQ9puuYmJ5DwxqwP+yiSUps
      Vz6vptick808cGw6CZPgMY4jB4mSnmYzNz2z0KSQMv2mcp3Pw3u7A1zLF3nW68ysWVdyBVbS
      eba7jYVdDi4K/ChzLA6u7/Hr8iodK8z0UiSJSirDkpGb675sKNq5cxPX9wmCAEmSuJ6rsGTk
      aFtDFEmmksrEunS/Lby3BVA3MnxSX+WbkzBjN8yuKvJhdRk58o75pZJf3hRkIXCTEjUJsD2X
      W8U6fpTkPnRtjkZ98lqKJSM345GUV1PUjMy5oRtpVZus8CJSiL0uW5Ofi/eqALzAp2EOaJgD
      eo6J7XmUDBk/kCloKVYyWUI3Y4mNbOlSFUBBS+EHAe6cs77jexwMu2x1TmZSHIuaQd3I0nMs
      giCgkspwq1DD8XyUKD0+6f3azJbfSkvzVfBeFIAfBOwN2uz0momOxC17SMseokoyV7Il1jNF
      8mpqLtX3IuFqtsyJ2Z+b+NgwBzy249VdbXuEKkl8VF0nr6YYuS5fHDznKGomZFQVXZFxT7Fp
      JQQ3CtVJwvy7iEtPhbA8l+9a+7ReUuieU1Msp/M8bM9r3V0MFLQUn9au0Hcsvjz+KfFuc9YZ
      Ig5pRePz+hX+8flTWtb04mDICp8tr2K6DrIkUdHT6PLbGWi9Ki51AYT5wc9e2eNHlxQkkZx1
      dVFQN7ITx2w/CLDOhNhlVR3fD+gv+DqXjQIPW/FqsU/rq2zm34yFyZvApT0C+UGYnv5zDK4s
      30UW0qKD0ncSAmboB2lF5Wq2ghv4ZBSNvJbin/efLPwz5xkGL0KreJdwaQvgWb+d2PJ7GXiB
      jyrJF9IqRRYiVlAyjI4oq0YBCB/alxGe6LKMJOK/p5J6uQC8XxqXchCWlBDzqvADn9IcP8t3
      EbIQbObKJB2/T8six95Ai6KgpfhVadZlYzNfpJK6WO/TpdwBjka9BUQti8MnNGsN4LXsKm8a
      ArhbWian6qHvTszXGFPpmYKCZtCwFmv7VlIZVtN5SrrBbr+LT8ByOst6Nv9OX3jjcCkLoPEG
      +vdte8iHlTW+PNmdGzT9LqCkp2lZQ7q2GeUiTN+DsqpOLfWiNSmEYDNXWqgADFllycghhGA5
      k2U58+62OBfBpSuAseXe68bAsZGFxMfVdb462V046fxtQxaCtj2kfeqZN2QVRChSL+tRfu8Z
      YXxJT3M9V5mxOJz+2RL3yisoCaL6i4hLVwBBELzW488YfhDgBB4pWeWT2gbfNPZovkMmuhKC
      pXQuNgXT8T1+t3x94twQd0wRQnA9XyGlqGx1jmcu/UXN4E6x/s5QGF4XLl8B8GZalkH0n449
      4nDYIxXl0L4L8akpWeF+eSWRiuAGPgPHonhOTpgQgrVMgZV0jlZEipOi+0FciPZlwKUrAEmE
      fpKvO9RaEoIjs8dWZ9rgSZMkQPxibdKSZnCzWCOvpmKT0MdQXoJxKYmQCVrh7Su03jYuz2Eu
      gkBMdTheF2Qh2O7OdlTcwOdmocZ6pvjGHIyTIAEdZ8S/Hf/EHw6e4AZ+bOZxMVrB/z9m8f8A
      LyTIdOY/WFwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Ventas Canceladas por Cantidad de Ventas Totales' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
